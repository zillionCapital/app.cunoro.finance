{"version":3,"sources":["constants/blockchain.ts","constants/addresses.ts","constants/messages.ts","helpers/switch-network.ts","hooks/web3/web3-context.tsx","hooks/web3/helpers/get-mainnet-uri.ts","helpers/token-price.ts","helpers/get-market-price.ts","helpers/shorten.ts","helpers/trim.ts","helpers/seconds-until-block.ts","helpers/prettify-seconds.ts","assets/tokens/NORO.png","assets/tokens/SNORO.png","helpers/get-token-image.tsx","helpers/set-all.ts","helpers/sleep.ts","store/slices/account-slice.ts","store/slices/pending-txns-slice.ts","helpers/bond-calculator.ts","helpers/bond/constants.ts","helpers/bond/bond.ts","helpers/bond/stable-bond.ts","assets/tokens/BEND.svg","assets/tokens/WAVAX.png","helpers/bond/index.ts","store/slices/messages-slice.ts","helpers/get-gas-price.ts","helpers/metamask-error-wrap.ts","store/slices/bond-slice.ts","store/slices/app-slice.ts","components/Loader/index.tsx","hooks/bonds.ts","assets/icons/hamburger.svg","components/Header/time-menu/index.tsx","components/Header/connect-button/index.tsx","constants/style.ts","components/Header/index.tsx","assets/icons/github.svg","assets/icons/twitter.svg","assets/icons/telegram.svg","assets/icons/discord.svg","components/Drawer/drawer-content/social.tsx","assets/icons/stake.svg","assets/icons/bond.svg","assets/icons/cunoro-logo.png","assets/icons/dashboard.svg","assets/icons/wonderglobe.svg","components/Drawer/drawer-content/index.tsx","components/Drawer/mobile-drawer.tsx","components/Drawer/index.tsx","store/slices/wrap-slice.ts","assets/icons/sabongr-icon.png","store/store.ts","components/Messages/console-interceptor.js","components/Messages/index.tsx","components/ViewBase/index.tsx","components/TabPanel.tsx","components/BondLogo.tsx","assets/icons/x.svg","views/Bond/AdvancedSettings.tsx","assets/icons/settings.svg","views/Bond/BondHeader.tsx","hooks/use-escape.ts","views/Bond/BondRedeem.tsx","helpers/pretty-vesting-period.ts","views/Bond/BondPurchase.tsx","hooks/debounce.ts","views/Bond/index.tsx","views/ChooseBond/BondRow.tsx","helpers/price-units.tsx","views/ChooseBond/index.tsx","components/RebaseTimer/index.tsx","store/slices/stake-thunk.ts","views/Stake/index.tsx","views/Dashboard/index.tsx","views/404/index.tsx","views/Calculator/index.tsx","assets/tokens/AVAX.svg","helpers/tokens.ts","assets/tokens/AAVE.e.png","assets/tokens/Ape-X.png","assets/tokens/APEIN.png","assets/tokens/BIFI.png","assets/tokens/BLIZZ.png","assets/tokens/BOOFI.png","assets/tokens/CHART.png","assets/tokens/DAI.e.png","assets/tokens/DREGG.png","assets/tokens/ELE.png","assets/tokens/ELK.png","assets/tokens/HAT.png","assets/tokens/HUSKY.png","assets/tokens/JOE.png","assets/tokens/KLO.png","assets/tokens/LINK.e.png","assets/tokens/MIM.svg","assets/tokens/OLIVE.png","assets/tokens/PEFI.png","assets/tokens/PNG.png","assets/tokens/SHERPA.png","assets/tokens/SHIBX.png","assets/tokens/SNOB.png","assets/tokens/SPELL.png","assets/tokens/SUSHI.e.png","assets/tokens/SYN.png","assets/tokens/TEDDY.png","assets/tokens/TIME.svg","assets/tokens/TSD.png","assets/tokens/USDT.e.png","assets/tokens/WBTC.e.png","assets/tokens/WET.png","assets/tokens/XAVA.png","assets/tokens/YAK.png","hooks/tokens.ts","Root/App.tsx","Root/index.tsx","components/Messages/snackbar.tsx","index.tsx"],"names":["Networks","DEFAULD_NETWORK","AVAX_MAIN","AVAX_MAINNET","DAO_ADDRESS","NORO_ADDRESS","SNORO_ADDRESS","TREASURY_ADDRESS","STAKING_ADDRESS","STAKING_DISTRIBUTOR_ADDRESS","STAKING_HELPER_ADDRESS","STAKING_WARMUP_ADDRESS","BONDEPOSITORY_BEND","BONDEPOSITORY_AVAX","TIME_BONDING_CALC_ADDRESS","WSNORO_ADDRESS","BEND_ADDRESS","WAVAX_ADDRESS","ZAPIN_ADDRESS","AVAX_TESTNET","getAddresses","networkID","AVAX_TEST","Error","messages","value","switchRequest","window","ethereum","request","method","params","chainId","swithNetwork","a","code","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","name","symbol","decimals","console","log","Web3Context","React","createContext","useWeb3Context","web3Context","useContext","onChainProvider","useMemo","useAddress","address","Web3ContextProvider","children","useDispatch","useState","connected","setConnected","chainID","providerChainID","setProviderChainID","setAddress","uri","StaticJsonRpcProvider","provider","setProvider","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","web3Modal","hasCachedProvider","cachedProvider","_initListeners","useCallback","rawProvider","on","setTimeout","location","reload","chain","changeNetwork","_newNetwork","oldNetwork","otherChainID","network","Number","connect","connectedProvider","Web3Provider","getNetwork","then","getSigner","getAddress","connectedAddress","checkWrongNetwork","confirm","disconnect","clearCachedProvider","Provider","cache","loadTokenPrices","axios","get","data","usd","getTokenPrice","reserveAvaxNoroAddress","getMarketPrice","avaxPrice","pairContract","ethers","Contract","LpReserveContract","getReserves","reserves","noro","Math","pow","marketPrice","getAvaxReserves","trim","number","precision","array","fromExponential","split","length","push","pop","substring","trimmedNumber","join","secondsUntilBlock","startBlock","endBlock","prettifySeconds","seconds","resolution","d","floor","h","m","toUrl","tokenPath","host","origin","getTokenUrl","NoroImg","SNoroImg","setAll","state","properties","Object","keys","forEach","key","sleep","Promise","resolve","getBalances","createAsyncThunk","addresses","ssabContract","SSabTokenContract","balanceOf","ssabBalance","sabContract","SabTokenContract","sabBalance","wmemoContract","wMemoTokenContract","wmemoBalance","balances","ssab","utils","formatUnits","sab","wmemo","formatEther","loadAccountDetails","memoWmemoAllowance","stakeAllowance","unstakeAllowance","allowance","staking","wrapping","calculateUserBondDetails","bond","resevle","displayName","bondIconSvg","isLP","balance","allowanceSab","balanceSab","interestDue","bondMaturationBlock","pendingPayout","avaxBalance","bondContract","getContractForBond","reserveContract","getContractForReserve","bondInfo","bondDetails","payout","vesting","lastTime","pendingPayoutFor","getAddressForBond","balanceVal","reserveDecimal","balanceSabVal","getBalance","avaxVal","pendingPayoutVal","calculateUserTokenDetails","token","img","isAvax","tokenIcon","tokenContract","MimTokenContract","accountSlice","createSlice","initialState","loading","bonds","tokens","reducers","fetchAccountSuccess","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","error","actions","pendingTxnsSlice","createSelector","account","fetchPendingTxns","clearPendingTxn","target","find","x","txnHash","splice","indexOf","getStakingTypeText","toLowerCase","getWrappingTypeText","isWrap","isPendingTxn","pendingTransactions","type","map","includes","txnButtonText","defaultText","getBondCalculator","BondingCalcContract","BondType","Bond","bondOpts","bondContractABI","networkAddrs","bondToken","lpUrl","tokensInStrategy","reserveContractAbi","displayUnits","this","bondAddress","reserveAddress","getAddressForReserve","CustomBond","customBondOpts","getTreasuryBalance","tokenAmount","tokenPrice","stableBondOpts","StableAsset","BigNumber","from","add","toString","reserve","addressesFuji","addressesAvax","bend","BendIcon","MimBondContract","wavax","AvaxIcon","WavaxBondContract","WavaxTokenContract","createMessage","severity","text","message","messagesSlice","info","warning","success","close","getGasPrice","gasPrice","convertGas","parseUnits","metamaskErrorWrap","err","dispatch","changeApproval","signer","bondAddr","approve","constants","MaxUint256","approveTx","hash","wait","calcBondDetails","sabAllowance","amountInWei","parseEther","bondPrice","bondDiscount","valuation","bondQuote","bondCalcContract","terms","maxPayout","maxBondPrice","bendPrice","bondPriceInUSD","maxBondPriceToken","maxBodValue","maxBondQuote","payoutFor","maxValuation","purchased","assetAddress","markdown","avaxReserves","vestingTerm","bondAsset","withdrawQuote","withdrawFee","maxWithdraw","parseFloat","withdrawInGwei","toFixed","slippage","useAvax","depositorAddress","acceptedSlippage","valueInWei","calculatePremium","maxPremium","round","deposit","bondTx","redeemBond","withdrawAddress","valueInGwei","withdraw","bondWithdrawTx","autostake","redeem","redeemTx","pendingTxnType","bondingSlice","fetchBondSuccess","newState","setBondState","loadAppDetails","bonding","stakingContract","StakingContract","getBlockNumber","currentBlock","getBlock","currentBlockTime","timestamp","totalSupply","circulatingSupply","circSupply","tokenBalPromises","allBonds","all","tokenBalances","treasuryBalance","reduce","tokenBalance0","tokenBalance1","tokenAmountsPromises","getTokenAmount","tokenAmounts","rfvTreasury","tokenAmount0","tokenAmount1","timeBondsAmountsPromises","getTimeAmount","timeBondsAmounts","timeAmount","timeAmount0","timeAmount1","rfv","stakingTVL","marketCap","epoch","stakingReward","distribute","circ1","stakingRebase","fiveDayRate","stakingAPY","index","currentIndex","nextRebase","endTime","treasuryRunway","runway","appSlice","fetchAppSuccess","app","Loader","className","CircularProgress","size","color","initialBondArray","useBonds","bondLoading","useSelector","bondState","accountBondsState","setBonds","useEffect","mostProfitableBonds","flatMap","assign","concat","sort","b","addTokenToWallet","tokenSymbol","tokenAddress","tokenImage","image","TimeMenu","anchorEl","setAnchorEl","isEthereumAPIAvailable","handleClick","event","currentTarget","open","Boolean","onMouseEnter","e","onMouseLeave","Popper","transition","TransitionProps","Fade","timeout","onClick","ConnectMenu","web3","isConnected","buttonText","clickFunc","buttonStyle","backgroundColor","style","DRAWER_WIDTH","TRANSITION_DURATION","useStyles","makeStyles","theme","appBar","breakpoints","up","width","padding","topBar","transitions","create","easing","sharp","duration","marginLeft","topBarShift","easeOut","Header","handleDrawerToggle","drawe","classes","isVerySmallScreen","useMediaQuery","AppBar","position","elevation","Toolbar","disableGutters","src","MenuIcon","alt","_excluded","_extends","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgGithub","_ref","svgRef","title","titleId","props","xmlns","xmlnsXlink","height","viewBox","ref","id","stroke","fillRule","fill","fillOpacity","ForwardRef","SvgTwitter","SvgTelegram","SvgDiscord","Social","Link","href","pointerEvents","SvgIcon","component","GitHub","textDecoration","Twitter","Telegram","Discord","NavContent","str","isActive","checkPage","page","currentPath","pathname","replace","CunoroLogo","slice","NavLink","to","match","classnames","active","DashboardIcon","StakeIcon","BondIcon","Skeleton","variant","GlobeIcon","DocsIcon","drawer","flexShrink","drawerPaper","borderRight","NavDrawer","mobileOpen","Drawer","anchor","onClose","paper","ModalProps","keepMounted","Sidebar","calcWrapValue","memoContract","wmemoAllowance","wrap","wrapTx","unwrap","wrapValue","MEMOTowMEMO","wmemoValue","wMEMOToMEMO","memoValue","calcWrapDetails","calcWrapPrice","wrapPrice","wrapSlice","fetchWrapSuccess","store","configureStore","reducer","accountReducer","bondingReducer","appReducer","pendingTransactionsReducer","messagesReducer","wrappingReducer","middleware","getDefaultMiddleware","serializableCheck","interceptedConsoleMessages","consoleInterceptor","_error_old","isInterceptor","Messages","enqueueSnackbar","useSnackbar","JSON","stringify","content","spacing","overflow","contentShift","ViewBase","setMobileOpen","isSmallerScreen","Hidden","mdUp","smDown","TabPanel","other","role","hidden","Box","p","BondLogo","display","alignItems","justifyContent","SvgX","strokeWidth","strokeLinecap","strokeLinejoin","strokeOpacity","strokeMiterlimit","transform","AdvancedSettings","handleClose","onSlippageChange","setValue","timeount","clearTimeout","Modal","hideBackdrop","Paper","IconButton","XIcon","InputLabel","htmlFor","FormControl","fullWidth","OutlinedInput","onChange","endAdornment","InputAdornment","SvgSettings","BondHeader","onEscape","setOpen","history","useHistory","handleEsc","keyCode","addEventListener","removeEventListener","SettingsIcon","BondRedeem","isBondLoading","bondingState","onRedeem","flexDirection","flexWrap","Slide","direction","in","mountOnEnter","unmountOnExit","vestingBlock","prettyVestingPeriod","BondPurchase","quantity","setQuantity","setUseAvax","onBond","isNaN","trimBalance","clearInput","hasAllowance","bondDetailsDebounce","delay","debouncedValue","setDebouncedValue","handler","useDebounce","onSeekApproval","checked","placeholder","labelWidth","amount","setSlippage","view","setView","changeView","newView","Grid","Backdrop","BondDataCard","Intl","NumberFormat","currency","maximumFractionDigits","minimumFractionDigits","format","BondTableData","TableRow","TableCell","align","ChooseBond","isSmallScreen","isAppLoading","Zoom","container","item","xs","sm","textAlign","TableContainer","Table","TableHead","TableBody","RebaseTimer","timeUntilRebase","changeStake","stakingHelper","StakingHelperContract","stake","stakeTx","unstake","Stake","timeBalance","memoBalance","onChangeStake","String","trimmedMemoBalance","trimmedStakingAPY","stakingRebasePercentage","nextRewardValue","md","lg","Dashboard","NotFound","Calculator","trimeMarketPrice","memoAmount","setMemoAmount","rewardYield","setRewardYield","priceAtPurchase","setPriceAtPurchase","futureMarketPrice","setFutureMarketPrice","days","setDays","rewardsEstimation","setRewardsEstimation","potentialReturn","setPotentialReturn","calcInitialInvestment","memo","price","initialInvestment","setInitialInvestment","newInitialInvestment","newBalance","calcNewBalance","newPotentialReturn","Slider","min","max","newValue","calcCurrentWealth","WavaxIcon","initialTokenArray","allTokens","useTokens","accountLoading","accountTokensState","setTokens","App","walletChecked","setWalletChecked","isAppLoaded","loadDetails","whichDetails","loadProvider","loadApp","loadAccount","exact","path","Root","setLoading","root","minWidth","card","typography","fontFamily","actionRoot","icons","expand","shortest","expandOpen","collapse","checkIcon","fontSize","paddingRight","checkIconCopy","button","textTransform","errorWrap","marginTop","errorText","whiteSpace","maxHeight","background","borderRadius","SnackMessage","forwardRef","closeSnackbar","expanded","setExpanded","isCopy","setIsCopy","handleExpandClick","oldExpanded","handleDismiss","Card","CardActions","getIcon","Typography","Collapse","onCopy","Button","ReactDOM","render","maxSnack","anchorOrigin","vertical","horizontal","parse","autoHideDuration","document","getElementById"],"mappings":"kikEAEYA,E,sJAAAA,O,6BAAAA,I,8BAAAA,M,KAKL,IAAMC,EAAkBD,EAASE,UCLlCC,EAAe,CACjBC,YAAa,6CAEbC,aAAc,6CACdC,cAAe,6CAEfC,iBAAkB,6CAElBC,gBAAiB,6CACjBC,4BAA6B,6CAC7BC,uBAAwB,6CACxBC,uBAAwB,6CAExBC,mBAAoB,6CACpBC,mBAAoB,6CAGpBC,0BAA2B,6CAC3BC,eAAgB,6CAEhBC,aAAc,6CACdC,cAAe,6CACfC,cAAe,IAGbC,EAAe,CACjBf,YAAa,6CAEbC,aAAc,6CACdC,cAAe,6CAEfC,iBAAkB,6CAElBC,gBAAiB,6CACjBC,4BAA6B,6CAC7BC,uBAAwB,6CACxBC,uBAAwB,6CAExBC,mBAAoB,6CACpBC,mBAAoB,6CAEpBC,0BAA2B,6CAC3BC,eAAgB,6CAEhBC,aAAc,6CACdC,cAAe,6CACfC,cAAe,IAGNE,EAAe,SAACC,GACzB,GAAIA,IAAcrB,EAASE,UAAW,OAAOC,EAC7C,GAAIkB,IAAcrB,EAASsB,UAAW,OAAOH,EAE7C,MAAMI,MAAM,0BCvDHC,EAEc,8BAFdA,EAIU,SAACC,GAAD,0HAAgIA,EAAhI,UAJVD,EAKO,iCALPA,EAOL,0MAPKA,EASK,iCATLA,EAUO,oCAVPA,EAWa,yCAXbA,EAYa,wCAZbA,EAaS,4BAbTA,EAcQ,uBAdRA,EAeY,mCAfZA,EAkBiB,gCChBxBE,EAAgB,WAClB,OAAOC,OAAOC,SAASC,QAAQ,CAC3BC,OAAQ,6BACRC,OAAQ,CAAC,CAAEC,QAAS,cAuBfC,EAAY,uCAAG,sBAAAC,EAAA,0DACpBP,OAAOC,SADa,0CAGVF,IAHU,0DAKG,OAAf,KAAMS,KALM,2CAlBjBR,OAAOC,SAASC,QAAQ,CAC3BC,OAAQ,0BACRC,OAAQ,CACJ,CACIC,QAAS,SACTI,UAAW,oBACXC,QAAS,CAAC,yCACVC,kBAAmB,CAAC,yCACpBC,eAAgB,CACZC,KAAM,OACNC,OAAQ,OACRC,SAAU,QAOF,yBAQFhB,IARE,0DAURiB,QAAQC,IAAR,MAVQ,QAahBD,QAAQC,IAAR,MAbgB,gEAAH,qD,OCCnBC,EAAcC,IAAMC,cAA+B,MAE5CC,EAAiB,WAC1B,IAAMC,EAAcC,qBAAWL,GAC/B,IAAKI,EACD,MAAM,IAAI1B,MAAM,6GAEpB,IAAQ4B,EAAoBF,EAApBE,gBACR,OAAOC,mBAAQ,WACX,OAAO,eAAKD,KACb,CAACF,KAGKI,EAAa,WAEtB,OADoBL,IAAZM,SAICC,EAA4D,SAAC,GAAkB,IAAD,EAAfC,EAAe,EAAfA,SAGxE,GAFiBC,cAEiBC,oBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,mBAASzD,GAAvC,mBAAO4D,EAAP,KACA,GADA,KAC8CH,mBAASzD,IAAvD,mBAAO6D,EAAP,KAAwBC,EAAxB,KACA,EAA8BL,mBAAS,IAAvC,mBAAOJ,EAAP,KAAgBU,EAAhB,KAEA,EAAsBN,mBCtDf,yCDsDP,mBAAOO,EAAP,KACA,GADA,KACgCP,mBAA0B,IAAIQ,IAAsBD,KAApF,mBAAOE,EAAP,KAAiBC,EAAjB,KAEA,EAAoBV,mBAChB,IAAIW,IAAU,CACVC,eAAe,EACfC,gBAAiB,CACbC,cAAe,CACXC,QAASC,IACTC,QAAS,CACLC,KAAG,mBACE5E,EAASE,UCjE3B,yCDgEgB,cAEEF,EAASsB,UC9D3B,8CD4DgB,SAPhBuD,EAAP,oBAiBMC,EAAoB,WACtB,QAAKD,KACAA,EAAUE,gBAIbC,EAAiBC,uBACnB,SAACC,GACQA,EAAYC,KAIjBD,EAAYC,GAAG,mBAAmB,kBAAMC,YAAW,kBAAMzD,OAAO0D,SAASC,WAAU,MAEnFJ,EAAYC,GAAG,eAAf,uCAA+B,WAAOI,GAAP,SAAArD,EAAA,sDAC3BsD,EAAcD,GADa,2CAA/B,uDAIAL,EAAYC,GAAG,WAAW,SAACM,EAAaC,GAC/BA,GACL/D,OAAO0D,SAASC,eAGxB,CAACnB,IAGCqB,EAAa,uCAAG,WAAOG,GAAP,eAAAzD,EAAA,sDACZ0D,EAAUC,OAAOF,GAEvB5B,EAAmB6B,GAHD,2CAAH,sDAMbE,EAAUb,sBAAW,sBAAC,kCAAA/C,EAAA,sEACE2C,EAAUiB,UADZ,cAClBZ,EADkB,OAGxBF,EAAeE,GAETa,EAAoB,IAAIC,IAAad,EAAa,OALhC,SAOFa,EAAkBE,aAAaC,MAAK,SAAAN,GAAO,OAAIC,OAAOD,EAAQ5D,YAP5D,cAOlBA,EAPkB,iBAQO+D,EAAkBI,YAAYC,aARrC,eAQlBC,EARkB,OAUxBrC,EAAWqC,GAEXtC,EAAmB/B,GAEfA,IAAYhC,EAASE,WAAa8B,IAAYhC,EAASsB,WACvD8C,EAAY2B,GAGhBnC,GAAa,GAlBW,kBAoBjBmC,GApBiB,4CAqBzB,CAAC5B,EAAUU,EAAWlB,IAEnB2C,EAAiB,uCAAG,sBAAApE,EAAA,yDAClB4B,IAAoB7D,EADF,oBAEG0B,OAAO4E,QAAQ/E,GAFlB,gCAIRS,IAJQ,OAKdN,OAAO0D,SAASC,SALF,iCAOX,GAPW,iCAUf,GAVe,2CAAH,qDAajBkB,EAAavB,sBAAW,sBAAC,sBAAA/C,EAAA,sDAC3B2C,EAAU4B,sBACV7C,GAAa,GAEbwB,YAAW,WACPzD,OAAO0D,SAASC,WACjB,GANwB,2CAO5B,CAACnB,EAAUU,EAAWlB,IAEnBR,EAAkBC,mBACpB,iBAAO,CACH0C,UACAU,aACA1B,oBACAX,WACAR,YACAL,UACAO,UACAgB,YACAf,kBACAwC,uBAEJ,CAACR,EAASU,EAAY1B,EAAmBX,EAAUR,EAAWL,EAASO,EAASgB,EAAWf,IAG/F,OAAO,cAACjB,EAAY6D,SAAb,CAAsBjF,MAAO,CAAE0B,mBAA/B,SAAmDK,K,4NEtKxDmD,GAAmC,GAE5BC,GAAe,uCAAG,8BAAA1E,EAAA,4DACf,uFADe,SAEJ2E,KAAMC,IADjB,wFADe,gBAEnBC,EAFmB,EAEnBA,KAERJ,GAAK,KAAWI,EAAK,eAAeC,IAEpCL,GAAK,IAAUI,EAAI,KAASC,IAC5BL,GAAK,KAAW,KAPW,2CAAH,qDAUfM,GAAgB,SAACxE,GAC1B,OAAOoD,OAAOc,GAAMlE,KCLlByE,GAAyB,6CAExB,SAAeC,GAAtB,qC,8CAAO,WAA8B9F,EAAqB8C,GAAnD,uBAAAjC,EAAA,6DACGkF,EAAYH,GAAc,QAE1BI,EAAe,IAAIC,IAAOC,SAASL,GAAwBM,IAAmBrD,GAHjF,SAIoBkD,EAAaI,cAJjC,cAIGC,EAJH,OAMGC,EAAOD,EAAS,GAAKE,KAAKC,IAAI,GAAI,GAC3BH,EAAS,GAAKE,KAAKC,IAAI,GAAI,IAElCC,EAAeJ,EAAS,GAAKN,EAAaO,EAT7C,kBAUIG,GAVJ,4C,sBA8BA,SAAeC,GAAtB,qC,8CAAO,WAA+B1G,EAAqB8C,GAApD,iBAAAjC,EAAA,6DACGmF,EAAe,IAAIC,IAAOC,SAASL,GAAwBM,IAAmBrD,GADjF,SAEoBkD,EAAaI,cAFjC,cAEGC,EAFH,yBAIIA,EAAS,GAAKE,KAAKC,IAAI,GAAI,KAJ/B,4C,sBC1CA,I,UCEMG,GAAO,WAA6C,IAA5CC,EAA2C,uDAA1B,EAAGC,EAAuB,uCACtDC,EAAQC,aAAgBH,GAAQI,MAAM,KAC5C,GAAqB,IAAjBF,EAAMG,OAAc,OAAOF,aAAgBH,GAE/CE,EAAMI,KAAKJ,EAAMK,MAAMC,UAAU,EAAGP,IACpC,IAAMQ,EAAgBP,EAAMQ,KAAK,KACjC,OAAOD,GCREE,GAAoB,SAACC,EAAoBC,GAClD,OAAOA,EAAWD,GCDTE,GAAkB,SAACC,EAAkBC,GAC9C,GAAgB,IAAZD,IAAkBA,EAClB,MAAO,GAGX,IAAME,EAAItB,KAAKuB,MAAMH,EAAO,OACtBI,EAAIxB,KAAKuB,MAAOH,EAAO,MAAkB,MACzCK,EAAIzB,KAAKuB,MAAOH,EAAU,KAAQ,IAExC,MAAmB,QAAfC,EACOC,GAAU,GAALA,EAAS,OAAS,UAGjBA,EAAI,EAAIA,GAAU,GAALA,EAAS,SAAW,WAAa,KAC9CE,EAAI,EAAIA,GAAU,GAALA,EAAS,UAAY,YAAc,KAChDC,EAAI,EAAIA,GAAU,GAALA,EAAS,OAAS,SAAW,KCfhD,OAA0B,iCCA1B,OAA0B,kCCGzC,SAASC,GAAMC,GACX,IAAMC,EAAO7H,OAAO0D,SAASoE,OAC7B,MAAM,GAAN,OAAUD,EAAV,YAAkBD,GAGf,SAASG,GAAYlH,GACxB,GAAa,SAATA,EACA,OAAO8G,GAAMK,IAGjB,GAAa,UAATnH,EACA,OAAO8G,GAAMM,IAGjB,MAAMrI,MAAM,8BAAD,OAA+BiB,ICjBvC,IAAMqH,GAAS,SAACC,EAAYC,GACjBC,OAAOC,KAAKF,GACpBG,SAAQ,SAAAC,GACVL,EAAMK,GAAOJ,EAAWI,OCHnBC,GAAQ,SAACpB,GAClB,OAAO,IAAIqB,SAAQ,SAAAC,GAAO,OAAIlF,YAAW,kBAAMkF,EAAQ,QAAiB,IAAVtB,O,mBC0BrDuB,GAAcC,aAAiB,sBAAD,uCAAwB,+CAAAtI,EAAA,6DAASoB,EAAT,EAASA,QAASjC,EAAlB,EAAkBA,UAAW8C,EAA7B,EAA6BA,SACtFsG,EAAYrJ,EAAaC,GAEzBqJ,EAAe,IAAIpD,IAAOC,SAASkD,EAAUnK,cAAeqK,IAAmBxG,GAHtB,SAIrCuG,EAAaE,UAAUtH,GAJc,cAIzDuH,EAJyD,OAKzDC,EAAc,IAAIxD,IAAOC,SAASkD,EAAUpK,aAAc0K,IAAkB5G,GALnB,SAMtC2G,EAAYF,UAAUtH,GANgB,cAMzD0H,EANyD,OAOzDC,EAAgB,IAAI3D,IAAOC,SAASkD,EAAU1J,eAAgBmK,IAAoB/G,GAPzB,UAQpC8G,EAAcL,UAAUtH,GARY,eAQzD6H,EARyD,yBAUxD,CACHC,SAAU,CACNC,KAAM/D,IAAOgE,MAAMC,YAAYV,EAAa,QAC5CW,IAAKlE,IAAOgE,MAAMC,YAAYP,EAAY,QAC1CS,MAAOnE,IAAOgE,MAAMI,YAAYP,MAduB,4CAAxB,uDAwC9BQ,GAAqBnB,aAAiB,6BAAD,uCAA+B,qDAAAtI,EAAA,yDAASb,EAAT,EAASA,UAAW8C,EAApB,EAAoBA,SAAUb,EAA9B,EAA8BA,QACvG0H,EAAa,EACbH,EAAc,EAEdM,EAAe,EACfS,EAAqB,EAErBC,EAAiB,EACjBC,EAAmB,IAEjBrB,EAAYrJ,EAAaC,IAEjBhB,aAZ+D,wBAanEyK,EAAc,IAAIxD,IAAOC,SAASkD,EAAUpK,aAAc0K,IAAkB5G,GAbT,UActD2G,EAAYF,UAAUtH,GAdgC,eAczE0H,EAdyE,iBAelDF,EAAYiB,UAAUzI,EAASmH,EAAU/J,wBAfS,QAezEmL,EAfyE,mBAkBzEpB,EAAUnK,cAlB+D,wBAmBnEoK,EAAe,IAAIpD,IAAOC,SAASkD,EAAUnK,cAAeqK,IAAmBxG,GAnBZ,UAoBrDuG,EAAaE,UAAUtH,GApB8B,eAoBzEuH,EApByE,iBAqBhDH,EAAaqB,UAAUzI,EAASmH,EAAUjK,iBArBM,WAqBzEsL,EArByE,QAuBrErB,EAAU1J,eAvB2D,kCAwB1C2J,EAAaqB,UAAUzI,EAASmH,EAAU1J,gBAxBA,QAwBrE6K,EAxBqE,mBA4BzEnB,EAAU1J,eA5B+D,wBA6BnEkK,EAAgB,IAAI3D,IAAOC,SAASkD,EAAU1J,eAAgBmK,IAAoB/G,GA7Bf,UA8BpD8G,EAAcL,UAAUtH,GA9B4B,QA8BzE6H,EA9ByE,wCAiCtE,CACHC,SAAU,CACNC,KAAM/D,IAAOgE,MAAMC,YAAYV,EAAa,QAC5CW,IAAKlE,IAAOgE,MAAMC,YAAYP,EAAY,QAC1CS,MAAOnE,IAAOgE,MAAMI,YAAYP,IAEpCa,QAAS,CACLR,IAAK3F,OAAOgG,GACZR,KAAMxF,OAAOiG,IAEjBG,SAAU,CACNZ,KAAMxF,OAAO+F,MA5CwD,4CAA/B,uDAmErCM,GAA2B1B,aAAiB,mCAAD,uCAAqC,qEAAAtI,EAAA,yDAASoB,EAAT,EAASA,QAAS6I,EAAlB,EAAkBA,KAAM9K,EAAxB,EAAwBA,UAAW8C,EAAnC,EAAmCA,SACvHb,EADoF,yCAE9E,IAAI+G,SAAa,SAAA+B,GACpBA,EAAQ,CACJD,KAAM,GACNE,YAAa,GACbC,YAAa,GACbC,MAAM,EACNR,UAAW,EACXS,QAAS,EACTC,aAAc,EACdC,WAAY,EACZC,YAAa,EACbC,oBAAqB,EACrBC,cAAe,GACfC,YAAa,QAfgE,cAoBnFC,EAAeZ,EAAKa,mBAAmB3L,EAAW8C,GAClD8I,EAAkBd,EAAKe,sBAAsB7L,EAAW8C,GArB2B,SAyB/D4I,EAAaI,SAAS7J,GAzByC,cAyBnF8J,EAzBmF,OA0BzFT,EAAcS,EAAYC,OAASzF,KAAKC,IAAI,GAAI,GAChD+E,EAAsB/G,OAAOuH,EAAYE,SAAWzH,OAAOuH,EAAYG,UA3BkB,UA4BnER,EAAaS,iBAAiBlK,GA5BqC,eA4BzFuJ,EA5ByF,OAgCrFH,EAAa,IACbF,EAAU,IAjC2E,UAmCvES,EAAgBlB,UAAUzI,EAAS6I,EAAKsB,kBAAkBpM,IAnCa,eAmCzF0K,EAnCyF,iBAoCzEkB,EAAgBrC,UAAUtH,GApC+C,WAoCzFkJ,EApCyF,OAqCnFkB,EAAa7H,OAAO2G,GAAW5E,KAAKC,IAAI,GAAIsE,EAAKwB,kBAEjDlD,EAAYrJ,EAAaC,IAEjBhB,aAzC2E,wBA0C/EyK,EAAc,IAAIxD,IAAOC,SAASkD,EAAUpK,aAAc0K,IAAkB5G,GA1CG,UA2ClE2G,EAAYF,UAAUtH,GA3C4C,eA2CrFoJ,EA3CqF,iBA4ChE5B,EAAYiB,UAAUzI,EAAS6I,EAAKsB,kBAAkBpM,IA5CU,QA4CrFoL,EA5CqF,sBA+CnFmB,EAAgBtG,IAAOgE,MAAMC,YAAYmB,EAAY,QA/C8B,UAiD/DvI,EAASgC,YAAY0H,aAjD0C,eAiDnFf,EAjDmF,OAkDnFgB,EAAUxG,IAAOgE,MAAMI,YAAYoB,GAEnCiB,EAAmBzG,IAAOgE,MAAMC,YAAYsB,EAAe,QApDwB,kBAsDlF,CACHV,KAAMA,EAAK3J,KACX6J,YAAaF,EAAKE,YAClBC,YAAaH,EAAKG,YAClBC,KAAMJ,EAAKI,KACXR,UAAWlG,OAAOkG,GAClBS,QAAS3G,OAAO6H,GAChBjB,aAAc5G,OAAO4G,GACrBC,WAAY7G,OAAO+H,GACnBd,YAAajH,OAAOiI,GACpBnB,cACAC,sBACAC,cAAehH,OAAOkI,KAlE+D,4CAArC,uDAmF3CC,GAA4BxD,aAAiB,oCAAD,uCAAsC,iDAAAtI,EAAA,yDAASoB,EAAT,EAASA,QAAS2K,EAAlB,EAAkBA,MAAO5M,EAAzB,EAAyBA,UAAW8C,EAApC,EAAoCA,SAC1Hb,EADsF,yCAEhF,IAAI+G,SAAa,SAAA+B,GACpBA,EAAQ,CACJ6B,MAAO,GACP3K,QAAS,GACT4K,IAAK,GACLnC,UAAW,EACXS,QAAS,QARsE,WAavFyB,EAAME,OAbiF,gCAc7DhK,EAASgC,YAAY0H,aAdwC,cAcjFf,EAdiF,OAejFgB,EAAUxG,IAAOgE,MAAMI,YAAYoB,GAf8C,kBAiBhF,CACHmB,MAAOA,EAAMzL,KACb4L,UAAWH,EAAMC,IACjB1B,QAAS3G,OAAOiI,GAChBK,QAAQ,IArB2E,cAyBrF1D,EAAYrJ,EAAaC,GAEzBgN,EAAgB,IAAI/G,IAAOC,SAAS0G,EAAM3K,QAASgL,IAAkBnK,GAGvEqI,EAAU,IA9B6E,UAgCzE6B,EAActC,UAAUzI,EAASmH,EAAUvJ,eAhC8B,eAgC3F6K,EAhC2F,iBAiC3EsC,EAAczD,UAAUtH,GAjCmD,eAiC3FkJ,EAjC2F,OAmCrFkB,EAAa7H,OAAO2G,GAAW5E,KAAKC,IAAI,GAAIoG,EAAMvL,UAnCmC,kBAqCpF,CACHuL,MAAOA,EAAMzL,KACbc,QAAS2K,EAAM3K,QACf4K,IAAKD,EAAMC,IACXnC,UAAWlG,OAAOkG,GAClBS,QAAS3G,OAAO6H,KA1CuE,4CAAtC,uDAyEnDa,GAAeC,aAAY,CAC7BhM,KAAM,UACNiM,aAXgC,CAChCC,SAAS,EACTC,MAAO,GACPvD,SAAU,CAAEC,KAAM,GAAIG,IAAK,GAAIC,MAAO,IACtCO,QAAS,CAAER,IAAK,EAAGH,KAAM,GACzBY,SAAU,CAAEZ,KAAM,GAClBuD,OAAQ,IAMRC,SAAU,CACNC,oBADM,SACchF,EAAOiF,GACvBlF,GAAOC,EAAOiF,EAAOC,WAG7BC,cAAe,SAAAC,GACXA,EACKC,QAAQxD,GAAmByD,SAAS,SAAAtF,GACjCA,EAAM4E,SAAU,KAEnBS,QAAQxD,GAAmB0D,WAAW,SAACvF,EAAOiF,GAC3ClF,GAAOC,EAAOiF,EAAOC,SACrBlF,EAAM4E,SAAU,KAEnBS,QAAQxD,GAAmB2D,UAAU,SAACxF,EAAD,GAAuB,IAAbyF,EAAY,EAAZA,MAC5CzF,EAAM4E,SAAU,EAChB/L,QAAQC,IAAI2M,MAEfJ,QAAQ5E,GAAY6E,SAAS,SAAAtF,GAC1BA,EAAM4E,SAAU,KAEnBS,QAAQ5E,GAAY8E,WAAW,SAACvF,EAAOiF,GACpClF,GAAOC,EAAOiF,EAAOC,SACrBlF,EAAM4E,SAAU,KAEnBS,QAAQ5E,GAAY+E,UAAU,SAACxF,EAAD,GAAuB,IAAbyF,EAAY,EAAZA,MACrCzF,EAAM4E,SAAU,EAChB/L,QAAQC,IAAI2M,MAEfJ,QAAQjD,GAAyBkD,SAAS,SAACtF,EAAOiF,GAC/CjF,EAAM4E,SAAU,KAEnBS,QAAQjD,GAAyBmD,WAAW,SAACvF,EAAOiF,GACjD,GAAKA,EAAOC,QAAZ,CACA,IAAM7C,EAAO4C,EAAOC,QAAQ7C,KAC5BrC,EAAM6E,MAAMxC,GAAQ4C,EAAOC,QAC3BlF,EAAM4E,SAAU,MAEnBS,QAAQjD,GAAyBoD,UAAU,SAACxF,EAAD,GAAuB,IAAbyF,EAAY,EAAZA,MAClDzF,EAAM4E,SAAU,EAChB/L,QAAQC,IAAI2M,MAEfJ,QAAQnB,GAA0BoB,SAAS,SAACtF,EAAOiF,GAChDjF,EAAM4E,SAAU,KAEnBS,QAAQnB,GAA0BqB,WAAW,SAACvF,EAAOiF,GAClD,GAAKA,EAAOC,QAAZ,CACA,IAAMf,EAAQc,EAAOC,QAAQf,MAC7BnE,EAAM8E,OAAOX,GAASc,EAAOC,QAC7BlF,EAAM4E,SAAU,MAEnBS,QAAQnB,GAA0BsB,UAAU,SAACxF,EAAD,GAAuB,IAAbyF,EAAY,EAAZA,MACnDzF,EAAM4E,SAAU,EAChB/L,QAAQC,IAAI2M,SAKbhB,MAAf,QAEeO,GAAwBP,GAAaiB,QAArCV,oBCvVTW,ID2VyBC,cAFd,SAAC5F,GAAD,OAAsBA,EAAM6F,WAEW,SAAAA,GAAO,OAAIA,KC3V1CnB,aAAY,CACjChM,KAAM,sBACNiM,aAJqC,GAKrCI,SAAU,CACNe,iBADM,SACW9F,EAAOiF,GACpBjF,EAAMvB,KAAKwG,EAAOC,UAEtBa,gBAJM,SAIU/F,EAAOiF,GACnB,IAAMe,EAAShG,EAAMiG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAYlB,EAAOC,WAChDc,GACAhG,EAAMoG,OAAOpG,EAAMqG,QAAQL,GAAS,QAMvCM,GAAqB,SAACrB,GAC/B,MAAgC,UAAzBA,EAAOsB,cAA4B,cAAgB,kBAGjDC,GAAsB,SAACC,GAChC,OAAOA,EAAS,YAAc,gBAGrBC,GAAe,SAACC,EAAoCC,GAC7D,OAAOD,EAAoBE,KAAI,SAAAX,GAAC,OAAIA,EAAEU,QAAME,SAASF,IAG5CG,GAAgB,SAACJ,EAAoCC,EAAcI,GAC5E,OAAON,GAAaC,EAAqBC,GAAQ,aAAeI,GAG7D,GAA8CrB,GAAiBD,QAAvDI,GAAR,GAAQA,iBAAkBC,GAA1B,GAA0BA,gBAElBJ,MAAf,QCtCO,SAASsB,GAAkB1P,EAAqB8C,GACnD,IAAMsG,EAAYrJ,EAAaC,GAC/B,OAAO,IAAIiG,IAAOC,SAASkD,EAAU3J,0BAA2BkQ,KAAqB7M,G,ICN7E8M,G,uECeUC,GAAtB,WAsBI,WAAYR,EAAgBS,GAAqB,0BArBjC3O,UAqBgC,OApBhC6J,iBAoBgC,OAnBhCqE,UAmBgC,OAlBhCpE,iBAkBgC,OAjBhC8E,qBAiBgC,OAhBhCC,kBAgBgC,OAfhCC,eAegC,OAdhCC,WAcgC,OAbhCC,sBAagC,OAZhC7D,oBAYgC,OAThCpB,UASgC,OAR7BkF,wBAQ6B,OAPhCC,kBAOgC,EAC5CC,KAAKnP,KAAO2O,EAAS3O,KACrBmP,KAAKtF,YAAc8E,EAAS9E,YAC5BsF,KAAKjB,KAAOA,EACZiB,KAAKrF,YAAc6E,EAAS7E,YAC5BqF,KAAKP,gBAAkBD,EAASC,gBAChCO,KAAKN,aAAeF,EAASE,aAC7BM,KAAKL,UAAYH,EAASG,UAC1BK,KAAKhE,eAAiBwD,EAASxD,eA9BvC,sDAiCI,SAAyBtM,GACrB,OAAOsQ,KAAKN,aAAahQ,GAAWuQ,cAlC5C,gCAqCI,SAA0BvQ,EAAqB8C,GAC3C,IAAMyN,EAAcD,KAAKlE,kBAAkBpM,GAC3C,OAAO,IAAIkG,KAASqK,EAAaD,KAAKP,gBAAiBjN,KAvC/D,kCA0CI,SAA4B9C,GACxB,OAAOsQ,KAAKN,aAAahQ,GAAWwQ,iBA3C5C,mCA8CI,SAA6BxQ,EAAqB8C,GAC9C,IAAM0N,EAAiBF,KAAKG,qBAAqBzQ,GACjD,OAAO,IAAIkG,KAASsK,EAAgBF,KAAKF,mBAAoBtN,KAhDrE,2BAmDI,WACI,OAAO8C,GAAc0K,KAAKL,eApDlC,M,SDfYL,O,6BAAAA,I,YAAAA,Q,wBEgDCc,GAAb,oDACI,WAAYC,GAAiC,IAAD,iCACxC,cAAMA,IAEDC,mBAAL,uCAA0B,WAAO5Q,EAAqB8C,GAA5B,iBAAAjC,EAAA,gKAC6Bb,EAAW8C,GADxC,cAChB+N,EADgB,OAEhBC,EAAa,EAAKlL,gBAFF,kBAIfiL,EAAcC,GAJC,2CAA1B,oCAAAR,KAAA,eAHwC,EADhD,UArCA,oDAMI,WAAYS,GAAiC,IAAD,+BACxC,cAAMnB,GAASoB,YAAaD,IANvB7F,MAAO,EAK4B,EAJnCkF,wBAImC,IAHnCC,kBAGmC,IAFnCF,sBAEmC,EAIxC,EAAKE,aAAeU,EAAe/F,YACnC,EAAKoF,mBAAqBW,EAAeX,mBACzC,EAAKD,iBAAmBY,EAAeZ,iBANC,EANhD,8FAeI,WAAgCnQ,EAAqB8C,GAArD,kFACUsG,EAAYrJ,EAAaC,GACzB4M,EAAQ0D,KAAKzE,sBAAsB7L,EAAW8C,GAFxD,SAG4B8J,EAAMrD,UAAUH,EAAUlK,kBAHtD,cAGQ2R,EAHR,OAIQP,KAAKH,mBACLU,EAAcI,KAAUC,KAAKL,GAAaM,IAAIF,KAAUC,KAAKZ,KAAKH,mBAAmBiB,YAL7F,kBAOWP,EAActK,KAAKC,IAAI,GAAI8J,KAAKhE,iBAP3C,gDAfJ,4HAyBI,WAA4BtM,EAAqB8C,GAAjD,0FACWwN,KAAKM,mBAAmB5Q,EAAW8C,IAD9C,gDAzBJ,oFA6BI,SAAqB9C,EAAqB8C,GACtC,OAAO,IAAIkG,SAAgB,SAAAqI,GAAO,OAAIA,EAAQ,UA9BtD,GAAgCxB,KCbjB,OAA0B,iCCA1B,OAA0B,kCCUnCyB,GAAgBvR,EAAa,OAC7BwR,GAAgBxR,EAAa,OAEtByR,GAAO,IAAId,GAAW,CAC/BvP,KAAM,OACN6J,YAAa,OACbiF,UAAW,OACXhF,YAAawG,GACb1B,gBAAiB2B,IACjBtB,mBAAoBnD,IACpB+C,cAAY,qBACPrR,EAASE,UAAY,CAClB0R,YAAagB,GAAchS,mBAC3BiR,eAAgBe,GAAc5R,eAH1B,eAKPhB,EAASsB,UAAY,CAClBsQ,YAAae,GAAc/R,mBAC3BiR,eAAgBc,GAAc3R,eAP1B,IAUZ2M,eAAgB,IAIPqF,GAAQ,IAAIjB,GAAW,CAChCvP,KAAM,QACN6J,YAAa,QACbiF,UAAW,OACXhF,YAAa2G,GACb7B,gBAAiB8B,IACjBzB,mBAAoB0B,IACpB9B,cAAY,qBACPrR,EAASE,UAAY,CAClB0R,YAAagB,GAAc/R,mBAC3BgR,eAAgBe,GAAc3R,gBAH1B,eAKPjB,EAASsB,UAAY,CAClBsQ,YAAae,GAAc9R,mBAC3BgR,eAAgBc,GAAc1R,gBAP1B,IAUZ0M,eAAgB,KAIL,IAACkF,GAAMG,ICtChBI,GAAgB,SAAUtJ,EAAsBuJ,EAAiBC,GACnE,IAAMC,EAAgB,aAClBF,YACGC,GAEPxJ,EAAMyJ,QAAUA,GAKdC,GAAgBhF,aAAY,CAC9BhM,KAAM,WACNiM,aALgC,CAChC8E,QAAS,MAKT1E,SAAU,CAENU,MAFM,SAEAzF,EAAOiF,GACTqE,GAActJ,EAAO,QAASiF,EAAOC,UAGzCyE,KANM,SAMD3J,EAAOiF,GACRqE,GAActJ,EAAO,OAAQiF,EAAOC,UAExC0E,QATM,SASE5J,EAAOiF,GACXqE,GAActJ,EAAO,UAAWiF,EAAOC,UAE3C2E,QAZM,SAYE7J,EAAOiF,GACXqE,GAActJ,EAAO,UAAWiF,EAAOC,UAG3C4E,MAhBM,SAgBA9J,GACFA,EAAMyJ,QAAU,SAKrB,GAAiDC,GAAchE,QAAvDD,GAAR,GAAQA,MAAOkE,GAAf,GAAeA,KAAMG,GAArB,GAAqBA,MAAOF,GAA5B,GAA4BA,QAASC,GAArC,GAAqCA,QAE7BH,MAAf,QCjDaK,GAAW,uCAAG,WAAO1P,GAAP,iBAAAjC,EAAA,sEACAiC,EAAS0P,cADT,cACjBC,EADiB,OAEjBC,EAAazI,QAAM0I,WAJjB,IAIiC,QAFlB,kBAGhBF,EAAStB,IAAIuB,IAHG,2CAAH,sDCDXE,GAAoB,SAACC,EAAUC,GACxC,IAAIb,EAAO9R,EA0BX,OAxBI0S,EAAI/R,OAAsB,QAAd+R,EAAI/R,OACZ+R,EAAIX,QAAQpD,QAAQ,0BAA4B,IAChDmD,EAAO,uGAGPY,EAAInN,MAAQmN,EAAInN,KAAKwM,UACrBD,EAAOY,EAAInN,KAAKwM,QAAQ3C,SAAS,KAAOsD,EAAInN,KAAKwM,QAAQlL,MAAM,KAAK,GAAGL,OAASkM,EAAInN,KAAKA,MAAQmN,EAAInN,KAAKwM,SAG1GW,EAAInN,MAAQmN,EAAInN,KAAKwM,SAAWW,EAAInN,KAAKwM,QAAQ3C,SAAS,oCAC1D0C,EAAO,8CAGPY,EAAInN,MAAQmN,EAAInN,KAAKwM,SAAWW,EAAInN,KAAKwM,QAAQ3C,SAAS,oBAC1D0C,EAAO,mBAIXY,EAAI/R,MAAqB,OAAb+R,EAAI/R,MACZ+R,EAAIX,QAAQ3C,SAAS,uCACrB0C,EAAO,qCAIRa,EAAS5E,GAAM,CAAE+D,OAAM/D,MAAO2E,MCA5BE,GAAiB5J,aAAiB,yBAAD,uCAA2B,mDAAAtI,EAAA,yDAASiK,EAAT,EAASA,KAAMhI,EAAf,EAAeA,SAAU9C,EAAzB,EAAyBA,UAAWiC,EAApC,EAAoCA,QAA8B6Q,EAAlE,EAAkEA,SAClIhQ,EADgE,uBAEjEgQ,EAAST,GAAQ,CAAEJ,KAAM9R,KAFwC,iCAM/D6S,EAASlQ,EAASgC,YAClB8G,EAAkBd,EAAKe,sBAAsB7L,EAAWgT,GAPO,mBAW1CR,GAAY1P,GAX8B,eAW3D2P,EAX2D,OAY3DQ,EAAWnI,EAAKsB,kBAAkBpM,GAZyB,UAa/C4L,EAAgBsH,QAAQD,EAAUE,YAAUC,WAAY,CAAEX,aAbX,eAajEY,EAbiE,OAcjEP,EACIvE,GAAiB,CACbK,QAASyE,EAAUC,KACnBrB,KAAM,aAAenH,EAAKE,YAC1BqE,KAAM,WAAavE,EAAK3J,QAlBiC,UAqB3DkS,EAAUE,OArBiD,QAsBjET,EAASR,GAAQ,CAAEL,KAAM9R,KAtBwC,kDAwBjEyS,GAAkB,EAAD,GAAME,GAxB0C,yBA0B7DO,GACAP,EAAStE,GAAgB6E,EAAUC,OA3B0B,sCA+B/DvK,GAAM,GA/ByD,eAiCjE2B,EAAY,IAjCqD,UAmCnDkB,EAAgBlB,UAAUzI,EAAS6I,EAAKsB,kBAAkBpM,IAnCP,eAmCrE0K,EAnCqE,yBAqC9DoI,EACHrF,GAAoB,CAChBH,MAAM,eACDxC,EAAK3J,KAAO,CACTuJ,UAAWlG,OAAOkG,SAzCmC,gEAA3B,yDAgHjC8I,IAhEoBrK,aAAiB,4BAAD,uCAA8B,qDAAAtI,EAAA,yDAASiK,EAAT,EAASA,KAAMhI,EAAf,EAAeA,SAAU9C,EAAzB,EAAyBA,UAAWiC,EAApC,EAAoCA,QAA8B6Q,EAAlE,EAAkEA,SACxIhQ,EADsE,uBAEvEgQ,EAAST,GAAQ,CAAEJ,KAAM9R,KAF8C,iCAKrEiJ,EAAYrJ,EAAaC,GAEzBgT,EAASlQ,EAASgC,YAClB2E,EAAc,IAAIxD,IAAOC,SAASkD,EAAUpK,aAAc0K,IAAkBsJ,GARP,mBAYhDR,GAAY1P,GAZoC,eAYjE2P,EAZiE,OAajEQ,EAAWnI,EAAKsB,kBAAkBpM,GAb+B,UAcrDyJ,EAAYyJ,QAAQD,EAAUE,YAAUC,WAAY,CAAEX,aAdD,eAcvEY,EAduE,OAgB1D,cACU,cAEvBP,EAASvE,GAAiB,CAAEK,QAASyE,EAAUC,KAAMrB,KAHxC,cAG8C5C,KAFpC,iBAjBgD,UAoBjEgE,EAAUE,OApBuD,QAqBvET,EAASR,GAAQ,CAAEL,KAAM9R,KArB8C,2EAuBhEyS,GAAkB,EAAD,GAAME,IAvByC,yBAyBnEO,GACAP,EAAStE,GAAgB6E,EAAUC,OA1BgC,sCA8BrEvK,GAAM,GA9B+D,yBAgChDU,EAAYiB,UAAUzI,EAAS6I,EAAKsB,kBAAkBpM,IAhCN,eAgCrEyT,EAhCqE,yBAkCpEX,EACHrF,GAAoB,CAChBH,MAAM,eACDxC,EAAK3J,KAAO,CACTiK,aAAc5G,OAAOiP,SAtCsC,gEAA9B,yDAgElBtK,aAAiB,0BAAD,uCAA4B,mFAAAtI,EAAA,6DAASiK,EAAT,EAASA,KAAM1K,EAAf,EAAeA,MAAO0C,EAAtB,EAAsBA,SAAU9C,EAAhC,EAAgCA,UAAhC,EAAiE8S,SACnI1S,IACDA,EAAQ,KAGNsT,EAAczN,IAAOgE,MAAM0J,WAAWvT,GAGxCwT,EAAY,EACZC,EAAe,EACfC,EAAY,EACZC,EAAY,EAEV3K,EAAYrJ,EAAaC,GAEzB0L,EAAeZ,EAAKa,mBAAmB3L,EAAW8C,GAClDkR,EAAmBtE,GAAkB1P,EAAW8C,GAhBiB,UAkBnD4I,EAAauI,QAlBsC,eAkBjEA,EAlBiE,iBAmB3CvI,EAAawI,YAnB8B,gCAmBf3N,KAAKC,IAAI,GAAI,GAA/D2N,EAnBiE,oBAqB/CrO,GAAe9F,EAAW8C,GArBqB,eAqBnE2D,EArBmE,OAuBjEV,EAAYH,GAAc,QACfA,GAAc,OACzBwO,EAAYxO,GAAc,QAC5B0G,EAAiBxB,EAAKwB,eA1B6C,oBA6BjDZ,EAAa2I,iBA7BoC,QA6BnET,EA7BmE,OA+BnEC,GAAgBpN,EAAcF,KAAKC,IAAI,GAAI8F,GAAkBsH,IAAcnN,EAAcF,KAAKC,IAAI,GAAI8F,IA/BnC,mDAiCnEhL,QAAQC,IAAI,+BAAZ,MAjCmE,WAoCnE+S,EAAoB,EAClBC,EAActO,IAAOgE,MAAM0J,WAAW,KACxCa,EAAe,GAEf1J,EAAKI,KAxC8D,kCAyCjD8I,EAAiBF,UAAUhJ,EAAK2F,qBAAqBzQ,GAAY0T,GAzChB,eAyCnEI,EAzCmE,iBA0CjDpI,EAAa+I,UAAUX,GA1C0B,eA0CnEC,EA1CmE,OA2CnEA,GAAwBxN,KAAKC,IAAI,GAAI,GA3C8B,UA6CxCwN,EAAiBF,UAAUhJ,EAAK2F,qBAAqBzQ,GAAYuU,GA7CzB,eA6C7DG,EA7C6D,iBA8C9ChJ,EAAa+I,UAAUC,GA9CuB,QA8CnEF,EA9CmE,OA+CnEF,EAAoBH,GAAgBK,EAAejO,KAAKC,IAAI,IAAK,IA/CE,yCAiDjDkF,EAAa+I,UAAUf,GAjD0B,eAiDnEK,EAjDmE,OAkDnEA,GAAwBxN,KAAKC,IAAI,GAAI,IAlD8B,UAoD9CkF,EAAa+I,UAAUF,GApDuB,QAoDnEC,EApDmE,OAqD/D1J,EAAK3J,OAASwQ,GAAMxQ,OACpBqT,GAA8BzO,GAElCuO,EAAoBH,GAAgBK,EAAejO,KAAKC,IAAI,IAAK,KAE7DsE,EAAK3J,OAASwQ,GAAMxQ,KACpB4S,GAAwBhO,EACjB+E,EAAK3J,OAASqQ,GAAKrQ,OAC1B4S,EAAwB,IAAZA,EAAmB,IAAOK,GA7DyB,eAkEjExH,EAAQ9B,EAAKe,sBAAsB7L,EAAW8C,GAlEmB,UAmEjD8J,EAAMrD,UAAUH,EAAUlK,kBAnEuB,WAmEnEyV,EAnEmE,QAqEnE7J,EAAKI,KArE8D,wBAsE7D0J,EAAe9J,EAAK2F,qBAAqBzQ,GAtEoB,UAuE5CgU,EAAiBa,SAASD,GAvEkB,eAuE7DC,EAvE6D,iBAyEjDb,EAAiBF,UAAUc,EAAcD,GAzEQ,QAyEnEA,EAzEmE,OA0EnEA,EAAaE,EAAWtO,KAAKC,IAAI,GAAI,KAAQmO,EAAYpO,KAAKC,IAAI,GAAI,IA1EH,2BA4E/DsE,EAAKqF,mBACLwE,EAAY1D,KAAUC,KAAKyD,GAAWxD,IAAIF,KAAUC,KAAKpG,EAAKqF,mBAAmBiB,YAErFuD,GAAwBpO,KAAKC,IAAI,GAAI8F,GAEjCxB,EAAK3J,OAASwQ,GAAMxQ,KAjF2C,kCAkFpCuF,GAAgB1G,EAAW8C,GAlFS,QAkFzDgS,EAlFyD,OAmF/DxT,QAAQC,IAAIuT,GAEZH,EAAYG,EAAe/O,EArFoC,wBAsFxD+E,EAAK3J,OAASqQ,GAAKrQ,OAC1BwT,GAAwBP,GAvFuC,iCA2FhE,CACHtJ,KAAMA,EAAK3J,KACX0S,eACAE,YACAY,YACAI,YAAavQ,OAAOyP,EAAMc,aAC1BZ,eACAP,UAAWA,EAAYrN,KAAKC,IAAI,GAAI8F,GACpC7F,cACA6N,sBApGmE,2DAA5B,0DAyMlCU,IAtF0B7L,aAAiB,0BAAD,uCAA4B,+DAAAtI,EAAA,6DAASiK,EAAT,EAASA,KAAM1K,EAAf,EAAeA,MAAO0C,EAAtB,EAAsBA,SAAU9C,EAAhC,EAAgCA,UAAiC8S,EAAjE,EAAiEA,SAC3I1S,IACDA,EAAQ,KAGNsT,EAAczN,IAAOgE,MAAM0J,WAAWvT,GAExCwT,EAAY,EACZC,EAAe,EACfoB,EAAgB,EAChBC,EAAc,EACdC,EAAc,EAEZ/L,EAAYrJ,EAAaC,GAEzB0L,EAAeZ,EAAKa,mBAAmB3L,EAAW8C,GAC/B4M,GAAkB1P,EAAW8C,GAhByB,UAkB3D4I,EAAauI,QAlB8C,gCAoBvDnO,GAAe9F,EAAW8C,GApB6B,eAoB3E2D,EApB2E,OAwBzEV,EAAYH,GAAc,QACfA,GAAc,OAzBgD,oBA4BzD8F,EAAa2I,iBA5B4C,QA4B3ET,EA5B2E,OAmC3EC,GAAgBpN,EAAcF,KAAKC,IAAI,GAAIsE,EAAKwB,gBAAkBsH,IAAcnN,EAAcF,KAAKC,IAAI,GAAIsE,EAAKwB,iBAnCrC,mDAqC3EhL,QAAQC,IAAI,+BAAZ,MArC2E,eAwC/E0T,EAAgBG,WAAWhV,IAAU,EAAIyT,GACrCwB,EAAiB7Q,OAAOkP,GAAenN,KAAKC,IAAI,GAAI,IAEpDsE,EAAK3J,OAASwQ,GAAMxQ,OACpB8T,GAAgClP,GAIpCkP,GADAC,EAA8B,GAAhBD,EAGdE,EAAgC,GAAlBrK,EAAKO,WAEbjL,GAASiV,EAAiBF,GAC5BrC,EAAS5E,GAAM,CAAE+D,KAAM9R,EAA2BgV,EAAYG,QAAQ,GAAGlE,eAIvExE,EAAQ9B,EAAKe,sBAAsB7L,EAAW8C,GAzD2B,UA0DzD8J,EAAMrD,UAAUH,EAAUlK,kBA1D+B,sBA4DvDqH,KAAKC,IAAI,GAAIsE,EAAKwB,gBAEtCxB,EAAK3J,OAASwQ,GAAMxQ,MACI4E,EA/DmD,kBAkExE,CACH+E,KAAMA,EAAK3J,KACX0S,eACAoB,gBACAC,cACAC,cACAvB,UAAWA,EAAYrN,KAAKC,IAAI,GAAIsE,EAAKwB,gBACzC7F,gBAzE2E,2DAA5B,yDAsF9B0C,aAAiB,oBAAD,uCAAsB,+DAAAtI,EAAA,6DAAST,EAAT,EAASA,MAAO6B,EAAhB,EAAgBA,QAAS6I,EAAzB,EAAyBA,KAAM9K,EAA/B,EAA+BA,UAAW8C,EAA1C,EAA0CA,SAAUyS,EAApD,EAAoDA,SAAUC,EAA9D,EAA8DA,QAAyB1C,EAAvF,EAAuFA,SAC5I2C,EAAmBxT,EACnByT,EAAmBH,EAAW,KAAO,KACrCI,EAAa1P,IAAOgE,MAAM0I,WAAWvS,EAAO0K,EAAKwB,gBACjD0G,EAASlQ,EAASgC,YAClB4G,EAAeZ,EAAKa,mBAAmB3L,EAAWgT,GALG,SAO5BtH,EAAakI,YAPe,cAOrDgC,EAPqD,OAQrDC,EAAatP,KAAKuP,MAAMF,GAAoB,EAAIF,IARK,oBAYhClD,GAAY1P,GAZoB,WAYjD2P,EAZiD,QAcnD+C,EAdmD,kCAepC9J,EAAaqK,QAAQJ,EAAYE,EAAYJ,EAAkB,CAAErV,MAAOuV,EAAYlD,aAfhD,QAenDuD,EAfmD,gDAiBpCtK,EAAaqK,QAAQJ,EAAYE,EAAYJ,EAAkB,CAAEhD,aAjB7B,QAiBnDuD,EAjBmD,sBAmBvDlD,EACIvE,GAAiB,CACbK,QAASoH,EAAO1C,KAChBrB,KAAM,WAAanH,EAAKE,YACxBqE,KAAM,QAAUvE,EAAK3J,QAvB0B,UA0BjD6U,EAAOzC,OA1B0C,eA2BvDT,EAASR,GAAQ,CAAEL,KAAM9R,KACzB2S,EAASV,GAAK,CAAEH,KAAM9R,KA5BiC,UA6BjD4I,GAAM,IA7B2C,yBA8BjD+J,EAASjI,GAAyB,CAAE5I,UAAS6I,OAAM9K,YAAW8C,cA9Bb,eA+BvDgQ,EAASV,GAAK,CAAEH,KAAM9R,KA/BiC,+EAkChDyS,GAAkB,EAAD,GAAME,IAlCyB,yBAoCnDkD,GACAlD,EAAStE,GAAgBwH,EAAO1C,OArCmB,8EAAtB,0DAqF5B2C,IA3Ce9M,aAAiB,uBAAD,uCAAyB,qDAAAtI,EAAA,6DAAST,EAAT,EAASA,MAAO6B,EAAhB,EAAgBA,QAAS6I,EAAzB,EAAyBA,KAAM9K,EAA/B,EAA+BA,UAAW8C,EAA1C,EAA0CA,SAA1C,EAAoD0S,QAAyB1C,EAA7E,EAA6EA,SACxIoD,EAAkBjU,EAClBkU,EAAclQ,IAAOgE,MAAM0I,WAAWvS,EAAO,QAC7C4S,EAASlQ,EAASgC,YAClB4G,EAAeZ,EAAKa,mBAAmB3L,EAAWgT,GAJS,kBAQtCR,GAAY1P,GAR0B,cAQvD2P,EARuD,iBAUtC/G,EAAa0K,SAASF,EAAiBC,EAAa,CAAE1D,aAVhB,eAU7D4D,EAV6D,OAY7DvD,EACIvE,GAAiB,CACbK,QAASyH,EAAe/C,KACxBrB,KAAM,eAAiBnH,EAAKE,YAC5BqE,KAAM,iBAAmBvE,EAAK3J,QAhBuB,UAmBvDkV,EAAe9C,OAnBwC,eAoB7DT,EAASR,GAAQ,CAAEL,KAAM9R,KACzB2S,EAASV,GAAK,CAAEH,KAAM9R,KArBuC,UAsBvD4I,GAAM,IAtBiD,yBAuBvD+J,EAASjI,GAAyB,CAAE5I,UAAS6I,OAAM9K,YAAW8C,cAvBP,eAwB7DgQ,EAASV,GAAK,CAAEH,KAAM9R,KAxBuC,8EA2BtDyS,GAAkB,EAAD,GAAME,IA3B+B,yBA6BzDuD,GACAvD,EAAStE,GAAgB6H,EAAe/C,OA9BiB,6EAAzB,yDA2ClBnK,aAAiB,qBAAD,uCAAuB,mDAAAtI,EAAA,yDAASoB,EAAT,EAASA,QAAS6I,EAAlB,EAAkBA,KAAM9K,EAAxB,EAAwBA,UAAW8C,EAAnC,EAAmCA,SAAUwT,EAA7C,EAA6CA,UAA4BxD,EAAzE,EAAyEA,SACjIhQ,EADwD,uBAEzDgQ,EAAST,GAAQ,CAAEJ,KAAM9R,KAFgC,iCAMvD6S,EAASlQ,EAASgC,YAClB4G,EAAeZ,EAAKa,mBAAmB3L,EAAWgT,GAPK,mBAWlCR,GAAY1P,GAXsB,eAWnD2P,EAXmD,iBAaxC/G,EAAa6K,OAAOtU,GAAuB,IAAdqU,EAAoB,CAAE7D,aAbX,eAazD+D,EAbyD,OAcnDC,EAAiB,eAAiB3L,EAAK3J,OAAsB,IAAdmV,EAAqB,aAAe,IACzFxD,EACIvE,GAAiB,CACbK,QAAS4H,EAASlD,KAClBrB,KAAM,aAAenH,EAAKE,YAC1BqE,KAAMoH,KAnB2C,UAsBnDD,EAASjD,OAtB0C,eAuBzDT,EAASR,GAAQ,CAAEL,KAAM9R,KAvBgC,UAwBnD4I,GAAM,KAxB6C,eAyBzD+J,EAASV,GAAK,CAAEH,KAAM9R,KAzBmC,UA0BnD4I,GAAM,IA1B6C,yBA2BnD+J,EAASjI,GAAyB,CAAE5I,UAAS6I,OAAM9K,YAAW8C,cA3BX,yBA4BnDgQ,EAAS5J,GAAY,CAAEjH,UAASjC,YAAW8C,cA5BQ,eA6BzDgQ,EAASV,GAAK,CAAEH,KAAM9R,KA7BmC,qDAgCzDyS,GAAkB,EAAD,GAAME,GAhCkC,yBAkCrD0D,GACA1D,EAAStE,GAAgBgI,EAASlD,OAnCmB,6EAAvB,0DAwDpCoD,GAAevJ,aAAY,CAC7BhM,KAAM,UACNiM,aAb6B,CAC7BC,SAAS,GAaTG,SAAU,CACNmJ,iBADM,SACWlO,EAAOiF,GACpBjF,EAAMiF,EAAOC,QAAQ7C,MAAQ4C,EAAOC,UAG5CC,cAAe,SAAAC,GACXA,EACKC,QAAQ0F,GAAgBzF,SAAS,SAAAtF,GAC9BA,EAAM4E,SAAU,KAEnBS,QAAQ0F,GAAgBxF,WAAW,SAACvF,EAAOiF,IApBnC,SAACjF,EAAmBkF,GACrC,IAAM7C,EAAO6C,EAAQ7C,KACf8L,EAAQ,2BAAQnO,EAAMqC,IAAU6C,GACtClF,EAAMqC,GAAQ8L,EACdnO,EAAM4E,SAAU,EAiBJwJ,CAAapO,EAAOiF,EAAOC,SAC3BlF,EAAM4E,SAAU,KAEnBS,QAAQ0F,GAAgBvF,UAAU,SAACxF,EAAD,GAAuB,IAAbyF,EAAY,EAAZA,MACzCzF,EAAM4E,SAAU,EAChB/L,QAAQC,IAAI2M,SAKbwI,MAAf,QC9eaI,IDgfuBJ,GAAavI,QAAlCwI,iBAIgBtI,cAFd,SAAC5F,GAAD,OAAsBA,EAAMsO,WAEW,SAAAA,GAAO,OAAIA,KCpfrC5N,aAC1B,qBAD0C,uCAG1C,iGAAAtI,EAAA,6DAASb,EAAT,EAASA,UAAW8C,EAApB,EAAoBA,SACViD,EAAYH,GAAc,QACdA,GAAc,QAC1BwD,EAAYrJ,EAAaC,GAEzBgX,EAAkB,IAAI/Q,IAAOC,SAASkD,EAAUjK,gBAAiB8X,KAAiBnU,GAL5F,SAM+BA,EAASoU,iBANxC,cAMUC,EANV,iBAOoCrU,EAASsU,SAASD,GAPtD,eAOUE,EAPV,OAOqEC,UAC3DjO,EAAe,IAAIpD,IAAOC,SAASkD,EAAUnK,cAAeqK,IAAmBxG,GAC/E2G,EAAc,IAAIxD,IAAOC,SAASkD,EAAUpK,aAAc0K,IAAkB5G,GATtF,UAW8BgD,GAAe9F,EAAW8C,GAXxD,eAWU2D,EAXV,iBAc+BgD,EAAY8N,cAd3C,gCAc4DhR,KAAKC,IAAI,GAAI,GAA/D+Q,EAdV,oBAe8BlO,EAAamO,oBAf3C,gCAekEjR,KAAKC,IAAI,GAAI,GAArEiR,EAfV,UAoBUC,EAAmBC,GAASrI,KAAI,SAAAxE,GAAI,OAAIA,EAAK8F,mBAAmB5Q,EAAW8C,MApBrF,UAqBgCkG,QAAQ4O,IAAIF,GArB5C,eAqBUG,EArBV,OAsBUC,EAAkBD,EAAcE,QAAO,SAACC,EAAeC,GAAhB,OAAkCD,EAAgBC,IAAe,GAtBlH,UAwB+BvR,GAAgB1G,EAAW8C,GAxB1D,eAwBUgS,EAxBV,OAyB6BA,EAAe/O,EAGlCmS,EAAuBP,GAASrI,KAAI,SAAAxE,GAAI,OAAIA,EAAKqN,eAAenY,EAAW8C,MA5BrF,UA6B+BkG,QAAQ4O,IAAIM,GA7B3C,eA6BUE,EA7BV,OA8BUC,EAAcD,EAAaL,QAAO,SAACO,EAAcC,GAAf,OAAgCD,EAAeC,IAAc,GAE/FC,EAA2Bb,GAASrI,KAAI,SAAAxE,GAAI,OAAIA,EAAK2N,cAAczY,EAAW8C,MAhCxF,UAiCmCkG,QAAQ4O,IAAIY,GAjC/C,eAiCUE,EAjCV,OAkCUC,EAAaD,EAAiBX,QAAO,SAACa,EAAaC,GAAd,OAA8BD,EAAcC,IAAa,GAG9FC,EAAMT,GAFOd,EAAcoB,GAK3BI,EAAatB,EAAahR,EAC1BuS,EAAYzB,EAAc9Q,EAzCpC,UA2CwBuQ,EAAgBiC,QA3CxC,eA2CUA,EA3CV,OA4CUC,EAAgBD,EAAME,WA5ChC,UA+CwB9P,EAAamO,oBA/CrC,eA+CU4B,EA/CV,OAgDUC,EAAgBH,EAAgBE,EAChCE,EAAc/S,KAAKC,IAAI,EAAI6S,EAAe,IAAS,EACnDE,EAAahT,KAAKC,IAAI,EAAI6S,EAAe,MAAW,EAlD9D,UAoD+BrC,EAAgBwC,QApD/C,eAoDUC,EApDV,OAqDUC,EAAaT,EAAMU,QAEnBC,EAAiBvB,EAAcZ,EAC/BoC,EAAStT,KAAKhF,IAAIqY,GAAkBrT,KAAKhF,IAAI,EAAI8X,GAAiB,EAC5D7U,OAAOyB,IAAOgE,MAAMC,YAAYuP,EAAc,SAAW,IAzDzE,kBA2DW,CACHA,aAAcjV,OAAOyB,IAAOgE,MAAMC,YAAYuP,EAAc,SAC5DlC,cACAyB,YACA7B,eACAM,aACA6B,cACAxB,kBACAyB,aACAR,aACAM,gBACA5S,cACA4Q,mBACAqC,aACAZ,MACAe,WA1ER,4CAH0C,wDA0GxCC,GAAW3M,aAAY,CACzBhM,KAAM,MACNiM,aA1BiB,CACjBC,SAAS,GA0BTG,SAAU,CACNuM,gBADM,SACUtR,EAAOiF,GACnBlF,GAAOC,EAAOiF,EAAOC,WAG7BC,cAAe,SAAAC,GACXA,EACKC,QAAQgJ,GAAe/I,SAAS,SAACtF,EAAOiF,GACrCjF,EAAM4E,SAAU,KAEnBS,QAAQgJ,GAAe9I,WAAW,SAACvF,EAAOiF,GACvClF,GAAOC,EAAOiF,EAAOC,SACrBlF,EAAM4E,SAAU,KAEnBS,QAAQgJ,GAAe7I,UAAU,SAACxF,EAAD,GAAuB,IAAbyF,EAAY,EAAZA,MACxCzF,EAAM4E,SAAU,EAChB/L,QAAQC,IAAI2M,SAOb4L,MAAf,Q,IAEmCA,GAAS3L,QAA7B4L,gBAEY1L,cANV,SAAC5F,GAAD,OAAsBA,EAAMuR,OAMO,SAAAA,GAAG,OAAIA,K,eCzI5CC,OAVf,WACI,OACI,qBAAKC,UAAU,cAAf,SACI,qBAAKA,UAAU,wBAAf,SACI,cAACC,GAAA,EAAD,CAAkBC,KAAM,IAAKC,MAAM,iBCG7CC,GAAmB3C,GAmCV4C,OAjCf,WACI,IAAMC,EAAcC,aAAkC,SAAAhS,GAAK,OAAIA,EAAMsO,QAAQ1J,WACvEqN,EAAYD,aAAqC,SAAAhS,GAAK,OAAIA,EAAMsO,WAChE4D,EAAoBF,aAA8D,SAAAhS,GAAK,OAAIA,EAAM6F,QAAQhB,SAE/G,EAA0BjL,mBAAyBiY,IAAnD,mBAAOhN,EAAP,KAAcsN,EAAd,KAyBA,OAvBAC,qBAAU,WACN,IAeMC,EAdQnD,GACToD,SAAQ,SAAAjQ,GACL,OAAI4P,EAAU5P,EAAK3J,OAASuZ,EAAU5P,EAAK3J,MAAM0S,aACtClL,OAAOqS,OAAOlQ,EAAM4P,EAAU5P,EAAK3J,OAEvC2J,KAEViQ,SAAQ,SAAAjQ,GACL,OAAI6P,EAAkB7P,EAAK3J,MAChBwH,OAAOqS,OAAOlQ,EAAM6P,EAAkB7P,EAAK3J,OAE/C2J,KAGyBmQ,SAASC,MAAK,SAACra,EAAGsa,GACtD,OAAOta,EAAC,aAAmBsa,EAAC,cAAoB,EAAIA,EAAC,aAAmBta,EAAC,aAAmB,EAAI,KAGpG+Z,EAASE,KACV,CAACJ,EAAWC,EAAmBH,IAE3B,CAAElN,QAAOD,QAASmN,I,iDC3Cd,OAA0B,sC,oBCQnCY,I,OAAmB,SAACC,EAAqBC,GAAtB,6BAA+C,4BAAAza,EAAA,yDAC9D0a,EAAalT,GAAYgT,EAAYrM,gBAEvC1O,OAAOC,SAHyD,0CAKtDD,OAAOC,SAASC,QAAQ,CAC1BC,OAAQ,oBACRC,OAAQ,CACJ2O,KAAM,QACN/L,QAAS,CACLrB,QAASqZ,EACTla,OAAQia,EACRha,SlCpBM,EkCqBNma,MAAOD,MAbyC,uDAkB5Dja,QAAQC,IAAR,MAlB4D,2DAyEzDka,OAlDf,WACI,MAAgCpZ,mBAAS,MAAzC,mBAAOqZ,EAAP,KAAiBC,EAAjB,KACMC,EAAyBtb,OAAOC,SAEhCP,EAAYya,aAAiC,SAAAhS,GAC/C,OAAQA,EAAMuR,KAAOvR,EAAMuR,IAAIha,WAAcpB,KAG3CwK,EAAYrJ,EAAaC,GAEzBf,EAAgBmK,EAAUnK,cAC1BD,EAAeoK,EAAUpK,aAEzB6c,EAAc,SAACC,GACjBH,EAAYD,EAAW,KAAOI,EAAMC,gBAGlCC,EAAOC,QAAQP,GAErB,OACI,sBAAKxB,UAAU,iBAAiBgC,aAAc,SAAAC,GAAC,OAAIN,EAAYM,IAAIC,aAAc,SAAAD,GAAC,OAAIN,EAAYM,IAAlG,UACI,qBAAKjC,UAAU,gBAAf,SACI,uCAGJ,cAACmC,GAAA,EAAD,CAAQnC,UAAU,mBAAmB8B,KAAMA,EAAMN,SAAUA,EAAUY,YAAU,EAA/E,SACK,gBAAGC,EAAH,EAAGA,gBAAH,OACG,cAACC,GAAA,EAAD,2BAAUD,GAAV,IAA2BE,QAAS,IAApC,SACI,qBAAKvC,UAAU,UAAf,SACK0B,GACG,sBAAK1B,UAAU,aAAf,UACI,qBAAKA,UAAU,YACf,mBAAGA,UAAU,mBAAb,iCACA,qBAAKA,UAAU,YACf,qBAAKA,UAAU,eAAewC,QAAStB,GAAiB,OAAQpc,GAAhE,SACI,uCAEJ,qBAAKkb,UAAU,eAAewC,QAAStB,GAAiB,QAASnc,GAAjE,SACI,uD,OCbzB0d,OA/Cf,WACI,MAAqFhb,IAA7E8C,EAAR,EAAQA,QAASU,EAAjB,EAAiBA,WAAY7C,EAA7B,EAA6BA,UAAWsa,EAAxC,EAAwCA,KAAMna,EAA9C,EAA8CA,gBAAiBwC,EAA/D,EAA+DA,kBAE/D,GADiB7C,cACmBC,mBAASC,IAA7C,mBAAOua,EAAP,KAAoBta,EAApB,KAEI6M,EAAsBqL,aAAwC,SAAAhS,GAC9D,OAAOA,EAAM2G,uBAGb0N,EAAa,iBACbC,EAAiBtY,EACjBuY,EAAc,GAwBlB,OAtBIH,IACAC,EAAa,aACbC,EAAY5X,GAGZiK,GAAuBA,EAAoBnI,OAAS,IACpD6V,EAAU,UAAM1N,EAAoBnI,OAA1B,aACV8V,EAAY,cAGZF,GAAepa,IAAoB7D,IACnCke,EAAa,gBACbE,EAAc,CAAEC,gBAAiB,oBACjCF,EAAY,WACR9X,MAIR4V,qBAAU,WACNtY,EAAaD,KACd,CAACsa,EAAMta,IAGN,sBAAK4X,UAAU,iBAAiBgD,MAAOF,EAAaN,QAASK,EAA7D,UACI,4BAAID,IACH1N,EAAoBnI,OAAS,GAC1B,qBAAKiT,UAAU,0BAAf,SACI,cAACC,GAAA,EAAD,CAAkBC,KAAM,GAAIC,MAAM,kBCjDzC8C,I,OAAe,KACfC,GAAsB,ICc7BC,GAAYC,cAAW,SAAAC,GAAK,YAAK,CACnCC,QAAM,mBACDD,EAAME,YAAYC,GAAG,MAAQ,CAC1BC,MAAO,OACPC,QAAS,kBAHX,+BAKc,YALd,2BAMU,YANV,2BAOU,eAPV,+BAQc,QARd,uBASM,IATN,GAWNC,OAAQ,CACJvB,WAAYiB,EAAMO,YAAYC,OAAO,SAAU,CAC3CC,OAAQT,EAAMO,YAAYE,OAAOC,MACjCC,SAAUd,KAEde,WAAYhB,IAEhBiB,YAAa,CACT9B,WAAYiB,EAAMO,YAAYC,OAAO,SAAU,CAC3CC,OAAQT,EAAMO,YAAYE,OAAOK,QACjCH,SAAUd,KAEde,WAAY,OA0BLG,OAtBf,YAAyD,IAAvCC,EAAsC,EAAtCA,mBAAoBC,EAAkB,EAAlBA,MAC5BC,EAAUpB,KACVqB,EAAoBC,aAAc,sBAGxC,OAFmBA,aAAc,sBAG7B,qBAAKzE,UAAS,UAAKuE,EAAQZ,OAAb,aAAwBW,GAASC,EAAQL,aAAvD,SACI,cAACQ,GAAA,EAAD,CAAQC,SAAS,SAAS3E,UAAWuE,EAAQjB,OAAQsB,UAAW,EAAhE,SACI,eAACC,GAAA,EAAD,CAASC,gBAAc,EAAC9E,UAAU,cAAlC,UACI,qBAAKwC,QAAS6B,EAAoBrE,UAAU,yBAA5C,SACI,qBAAK+E,IAAKC,GAAUC,IAAI,OAE5B,sBAAKjF,UAAU,wBAAf,WACMwE,GAAqB,cAAC,GAAD,IACvB,cAAC,GAAD,e,iDCzDpBU,GAAY,CAAC,QAAS,WAE1B,SAASC,KAA2Q,OAA9PA,GAAW1W,OAAOqS,QAAU,SAAUvM,GAAU,IAAK,IAAI6Q,EAAI,EAAGA,EAAIC,UAAUtY,OAAQqY,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIxW,KAAO0W,EAAc7W,OAAO8W,UAAUC,eAAeC,KAAKH,EAAQ1W,KAAQ2F,EAAO3F,GAAO0W,EAAO1W,IAAY,OAAO2F,IAA2BmR,MAAMtP,KAAMiP,WAEhT,SAASM,GAAyBL,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkE1W,EAAKwW,EAAnE7Q,EAEzF,SAAuC+Q,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2D1W,EAAKwW,EAA5D7Q,EAAS,GAAQsR,EAAapX,OAAOC,KAAK4W,GAAqB,IAAKF,EAAI,EAAGA,EAAIS,EAAW9Y,OAAQqY,IAAOxW,EAAMiX,EAAWT,GAAQQ,EAAShR,QAAQhG,IAAQ,IAAa2F,EAAO3F,GAAO0W,EAAO1W,IAAQ,OAAO2F,EAFxMuR,CAA8BR,EAAQM,GAAuB,GAAInX,OAAOsX,sBAAuB,CAAE,IAAIC,EAAmBvX,OAAOsX,sBAAsBT,GAAS,IAAKF,EAAI,EAAGA,EAAIY,EAAiBjZ,OAAQqY,IAAOxW,EAAMoX,EAAiBZ,GAAQQ,EAAShR,QAAQhG,IAAQ,GAAkBH,OAAO8W,UAAUU,qBAAqBR,KAAKH,EAAQ1W,KAAgB2F,EAAO3F,GAAO0W,EAAO1W,IAAU,OAAO2F,EAMne,SAAS2R,GAAUC,EAAMC,GACvB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQZ,GAAyBQ,EAAMjB,IAE3C,OAAoB,gBAAoB,MAAOC,GAAS,CACtDqB,MAAO,6BACPC,WAAY,+BACZhD,MAAO,OACPiD,OAAQ,OACRC,QAAS,YACTC,IAAKR,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DQ,GAAIP,GACHD,GAAS,KAAmB,gBAAoB,IAAK,CACtDQ,GAAI,YACU,gBAAoB,OAAQ,CAC1C7D,MAAO,CACL8D,OAAQ,OACRC,SAAU,UACVC,KAAM,sBACNC,YAAa,GAEftZ,EAAG,k8HAIP,IAAIuZ,GAA0B,aAAiBhB,ICtC3C,IDuCW,ICvCC,CAAC,QAAS,YAE1B,SAAS,KAA2Q,OAA9P,GAAWzX,OAAOqS,QAAU,SAAUvM,GAAU,IAAK,IAAI6Q,EAAI,EAAGA,EAAIC,UAAUtY,OAAQqY,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIxW,KAAO0W,EAAc7W,OAAO8W,UAAUC,eAAeC,KAAKH,EAAQ1W,KAAQ2F,EAAO3F,GAAO0W,EAAO1W,IAAY,OAAO2F,IAA2BmR,MAAMtP,KAAMiP,WAEhT,SAAS,GAAyBC,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkE1W,EAAKwW,EAAnE7Q,EAEzF,SAAuC+Q,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2D1W,EAAKwW,EAA5D7Q,EAAS,GAAQsR,EAAapX,OAAOC,KAAK4W,GAAqB,IAAKF,EAAI,EAAGA,EAAIS,EAAW9Y,OAAQqY,IAAOxW,EAAMiX,EAAWT,GAAQQ,EAAShR,QAAQhG,IAAQ,IAAa2F,EAAO3F,GAAO0W,EAAO1W,IAAQ,OAAO2F,EAFxM,CAA8B+Q,EAAQM,GAAuB,GAAInX,OAAOsX,sBAAuB,CAAE,IAAIC,EAAmBvX,OAAOsX,sBAAsBT,GAAS,IAAKF,EAAI,EAAGA,EAAIY,EAAiBjZ,OAAQqY,IAAOxW,EAAMoX,EAAiBZ,GAAQQ,EAAShR,QAAQhG,IAAQ,GAAkBH,OAAO8W,UAAUU,qBAAqBR,KAAKH,EAAQ1W,KAAgB2F,EAAO3F,GAAO0W,EAAO1W,IAAU,OAAO2F,EAMne,SAAS4S,GAAWhB,EAAMC,GACxB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQ,GAAyBJ,EAAM,IAE3C,OAAoB,gBAAoB,MAAO,GAAS,CACtDK,MAAO,6BACPC,WAAY,+BACZhD,MAAO,OACPiD,OAAQ,OACRC,QAAS,YACTC,IAAKR,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DQ,GAAIP,GACHD,GAAS,KAAmB,gBAAoB,IAAK,CACtDQ,GAAI,YACU,gBAAoB,OAAQ,CAC1C7D,MAAO,CACL8D,OAAQ,OACRC,SAAU,UACVC,KAAM,sBACNC,YAAa,GAEftZ,EAAG,y5CAIP,IAAI,GAA0B,aAAiBwZ,ICtC3C,IDuCW,ICvCC,CAAC,QAAS,YAE1B,SAAS,KAA2Q,OAA9P,GAAW1Y,OAAOqS,QAAU,SAAUvM,GAAU,IAAK,IAAI6Q,EAAI,EAAGA,EAAIC,UAAUtY,OAAQqY,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIxW,KAAO0W,EAAc7W,OAAO8W,UAAUC,eAAeC,KAAKH,EAAQ1W,KAAQ2F,EAAO3F,GAAO0W,EAAO1W,IAAY,OAAO2F,IAA2BmR,MAAMtP,KAAMiP,WAEhT,SAAS,GAAyBC,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkE1W,EAAKwW,EAAnE7Q,EAEzF,SAAuC+Q,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2D1W,EAAKwW,EAA5D7Q,EAAS,GAAQsR,EAAapX,OAAOC,KAAK4W,GAAqB,IAAKF,EAAI,EAAGA,EAAIS,EAAW9Y,OAAQqY,IAAOxW,EAAMiX,EAAWT,GAAQQ,EAAShR,QAAQhG,IAAQ,IAAa2F,EAAO3F,GAAO0W,EAAO1W,IAAQ,OAAO2F,EAFxM,CAA8B+Q,EAAQM,GAAuB,GAAInX,OAAOsX,sBAAuB,CAAE,IAAIC,EAAmBvX,OAAOsX,sBAAsBT,GAAS,IAAKF,EAAI,EAAGA,EAAIY,EAAiBjZ,OAAQqY,IAAOxW,EAAMoX,EAAiBZ,GAAQQ,EAAShR,QAAQhG,IAAQ,GAAkBH,OAAO8W,UAAUU,qBAAqBR,KAAKH,EAAQ1W,KAAgB2F,EAAO3F,GAAO0W,EAAO1W,IAAU,OAAO2F,EAMne,SAAS6S,GAAYjB,EAAMC,GACzB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQ,GAAyBJ,EAAM,IAE3C,OAAoB,gBAAoB,MAAO,GAAS,CACtDK,MAAO,6BACPC,WAAY,+BACZhD,MAAO,OACPiD,OAAQ,OACRC,QAAS,YACTC,IAAKR,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DQ,GAAIP,GACHD,GAAS,KAAmB,gBAAoB,IAAK,CACtDQ,GAAI,YACU,gBAAoB,OAAQ,CAC1C7D,MAAO,CACL8D,OAAQ,OACRC,SAAU,UACVC,KAAM,mBACNC,YAAa,GAEftZ,EAAG,osGAIP,IAAI,GAA0B,aAAiByZ,ICtC3C,IDuCW,ICvCC,CAAC,QAAS,YAE1B,SAAS,KAA2Q,OAA9P,GAAW3Y,OAAOqS,QAAU,SAAUvM,GAAU,IAAK,IAAI6Q,EAAI,EAAGA,EAAIC,UAAUtY,OAAQqY,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIxW,KAAO0W,EAAc7W,OAAO8W,UAAUC,eAAeC,KAAKH,EAAQ1W,KAAQ2F,EAAO3F,GAAO0W,EAAO1W,IAAY,OAAO2F,IAA2BmR,MAAMtP,KAAMiP,WAEhT,SAAS,GAAyBC,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkE1W,EAAKwW,EAAnE7Q,EAEzF,SAAuC+Q,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2D1W,EAAKwW,EAA5D7Q,EAAS,GAAQsR,EAAapX,OAAOC,KAAK4W,GAAqB,IAAKF,EAAI,EAAGA,EAAIS,EAAW9Y,OAAQqY,IAAOxW,EAAMiX,EAAWT,GAAQQ,EAAShR,QAAQhG,IAAQ,IAAa2F,EAAO3F,GAAO0W,EAAO1W,IAAQ,OAAO2F,EAFxM,CAA8B+Q,EAAQM,GAAuB,GAAInX,OAAOsX,sBAAuB,CAAE,IAAIC,EAAmBvX,OAAOsX,sBAAsBT,GAAS,IAAKF,EAAI,EAAGA,EAAIY,EAAiBjZ,OAAQqY,IAAOxW,EAAMoX,EAAiBZ,GAAQQ,EAAShR,QAAQhG,IAAQ,GAAkBH,OAAO8W,UAAUU,qBAAqBR,KAAKH,EAAQ1W,KAAgB2F,EAAO3F,GAAO0W,EAAO1W,IAAU,OAAO2F,EAMne,SAAS8S,GAAWlB,EAAMC,GACxB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQ,GAAyBJ,EAAM,IAE3C,OAAoB,gBAAoB,MAAO,GAAS,CACtDK,MAAO,6BACPC,WAAY,+BACZhD,MAAO,OACPiD,OAAQ,OACRC,QAAS,YACTC,IAAKR,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DQ,GAAIP,GACHD,GAAS,KAAmB,gBAAoB,IAAK,CACtDQ,GAAI,YACU,gBAAoB,OAAQ,CAC1C7D,MAAO,CACL8D,OAAQ,OACRC,SAAU,UACVC,KAAM,sBACNC,YAAa,GAEftZ,EAAG,srGAIP,IAAI,GAA0B,aAAiB0Z,IAChC,ICjCA,SAASC,KACpB,OACI,sBAAKtH,UAAU,aAAf,UACI,cAACuH,GAAA,EAAD,CAAMC,KAAK,4BAA4BxE,MAAO,CAAEyE,cAAe,QAAUlT,OAAO,SAAhF,SACI,cAACmT,GAAA,EAAD,CAASvH,MAAM,UAAUwH,UAAWC,OAGxC,cAACL,GAAA,EAAD,CAAMC,KAAK,oCAAoCxE,MAAO,CAAE6E,eAAgB,QAAUtT,OAAO,SAAzF,SACI,cAACmT,GAAA,EAAD,CAASvH,MAAM,UAAUwH,UAAWG,OAGxC,cAACP,GAAA,EAAD,CAAMC,KAAK,iCAAiCxE,MAAO,CAAEyE,cAAe,QAAUlT,OAAO,SAArF,SACI,cAACmT,GAAA,EAAD,CAASf,QAAQ,YAAYxG,MAAM,UAAUwH,UAAWI,OAG5D,cAACR,GAAA,EAAD,CAAMC,KAAK,gCAAgCxE,MAAO,CAAEyE,cAAe,QAAUlT,OAAO,SAApF,SACI,cAACmT,GAAA,EAAD,CAASvH,MAAM,UAAUwH,UAAWK,UCtBrC,WAA0B,kCCA1B,OAA0B,iCCA1B,OAA0B,wCCA1B,OAA0B,sC,UCA1B,I,OAAA,IAA0B,yC,oBC+I1BC,OA7Hf,WACI,IxCnBoBC,EwCmBpB,EAAmB/f,qBAAZggB,EAAP,oBACMpgB,EAAUD,IACRsL,EAAUiN,KAAVjN,MAEFgV,EAAY1e,uBAAY,SAACI,EAAeue,GAC1C,IAAMC,EAAcxe,EAASye,SAASC,QAAQ,IAAK,IACnD,OAAIF,EAAY1T,QAAQ,cAAgB,GAAc,cAATyT,IAGzCC,EAAY1T,QAAQ,UAAY,GAAc,UAATyT,IAGrCC,EAAY1T,QAAQ,UAAY,GAAc,UAATyT,GAGrCC,EAAY1T,QAAQ,eAAiB,GAAc,eAATyT,MAI/C,IAEH,OACI,sBAAKrI,UAAU,eAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,cAACuH,GAAA,EAAD,CAAMC,KAAK,0BAAX,SACI,qBAAKvC,IAAI,GAAGF,IAAK0D,GAAYhF,MAAM,QAAQiD,OAAO,YAGrD3e,GACG,qBAAKiY,UAAU,cAAf,SACI,cAACuH,GAAA,EAAD,CAAMC,KAAI,uDAAkDzf,GAAWwM,OAAO,SAA9E,SACI,6BxClDJ2T,EwCkDgBngB,ExCjDhCmgB,EAAInb,OAAS,GAAWmb,EACtB,GAAN,OAAUA,EAAIQ,MAAM,EAAG,GAAvB,cAA+BR,EAAIQ,MAAMR,EAAInb,OAAS,cwCsD9C,qBAAKiT,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACI,cAACuH,GAAA,EAAD,CACII,UAAWgB,KACXC,GAAG,aACHT,SAAU,SAACU,EAAY/e,GACnB,OAAOse,EAAUte,EAAU,cAE/BkW,UAAW8I,KAAW,mBAAoB,CAAEC,OAAQZ,IANxD,SAQI,sBAAKnI,UAAU,iBAAf,UACI,qBAAKiF,IAAI,GAAGF,IAAKiE,KACjB,+CAIR,cAACzB,GAAA,EAAD,CACII,UAAWgB,KACXC,GAAG,SACHT,SAAU,SAACU,EAAY/e,GACnB,OAAOse,EAAUte,EAAU,UAE/BkW,UAAW8I,KAAW,mBAAoB,CAAEC,OAAQZ,IANxD,SAQI,sBAAKnI,UAAU,iBAAf,UACI,qBAAKiF,IAAI,GAAGF,IAAKkE,KACjB,2CAIR,cAAC1B,GAAA,EAAD,CACII,UAAWgB,KACX9B,GAAG,WACH+B,GAAG,SACHT,SAAU,SAACU,EAAY/e,GACnB,OAAOse,EAAUte,EAAU,UAE/BkW,UAAW8I,KAAW,mBAAoB,CAAEC,OAAQZ,IAPxD,SASI,sBAAKnI,UAAU,iBAAf,UACI,qBAAKiF,IAAI,GAAGF,IAAKmE,KACjB,0CAIR,sBAAKlJ,UAAU,iBAAf,UACI,+CACC5M,EAAMgC,KAAI,SAACxE,EAAMwU,GAAP,OACP,cAACmC,GAAA,EAAD,CAAMI,UAAWgB,KAASC,GAAE,iBAAYhY,EAAK3J,MAAgB+Y,UAAW,OAAxE,SACMpP,EAAK+I,aAGH,8BACK/I,EAAKE,YACN,uBAAMkP,UAAU,gBAAhB,UAAiCpP,EAAK+I,cAAgBlN,GAAyB,IAApBmE,EAAK+I,aAAoB,GAApF,UAJJ,cAACwP,GAAA,EAAD,CAAUC,QAAQ,OAAO3F,MAAO,WAFkB2B,SAalE,cAACmC,GAAA,EAAD,CACII,UAAWgB,KACXC,GAAG,cACHT,SAAU,SAACU,EAAY/e,GACnB,OAAOse,EAAUte,EAAU,eAE/BkW,UAAW8I,KAAW,mBAAoB,CAAEC,OAAQZ,IANxD,SAQI,sBAAKnI,UAAU,iBAAf,UACI,qBAAKiF,IAAI,GAAGF,IAAKsE,KACjB,qDAKhB,qBAAKrJ,UAAU,qBAAf,SACI,eAACuH,GAAA,EAAD,CAAMC,KAAK,+BAA+BjT,OAAO,SAAjD,UACI,qBAAK0Q,IAAI,GAAGF,IAAKuE,KACjB,0CAGR,cAAChC,GAAD,QCrINnE,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACnCkG,OAAO,eACFlG,EAAME,YAAYC,GAAG,MAAQ,CAC1BC,MAAOR,GACPuG,WAAY,IAGpBC,YAAa,CACThG,MAAOR,GACPyG,YAAa,OA+BNC,OAtBf,YAAoE,IAA/CC,EAA8C,EAA9CA,WAAYvF,EAAkC,EAAlCA,mBACvBE,EAAUpB,KAEhB,OACI,cAAC0G,GAAA,EAAD,CACIT,QAAQ,YACRU,OAAO,OACPhI,KAAM8H,EACNG,QAAS1F,EACT7B,QAAS6B,EACTE,QAAS,CACLyF,MAAOzF,EAAQkF,aAEnBQ,WAAY,CACRC,aAAa,GAVrB,SAaI,cAAC,GAAD,OC7BGC,OARf,WACI,OACI,cAACN,GAAA,EAAD,CAAQT,QAAQ,YAAYU,OAAO,OAAnC,SACI,cAAC,GAAD,OCiHNM,ICvHS,IDoBenb,aAAiB,0BAAD,uCAA4B,iDAAAtI,EAAA,yDAASiC,EAAT,EAASA,SAAUb,EAAnB,EAAmBA,QAASjC,EAA5B,EAA4BA,UAAgC8S,EAA5D,EAA4DA,SAC7HhQ,EADiE,uBAElEgQ,EAAST,GAAQ,CAAEJ,KAAM9R,KAFyC,iCAMhEiJ,EAAYrJ,EAAaC,GACzBgT,EAASlQ,EAASgC,YAClByf,EAAe,IAAIte,IAAOC,SAASkD,EAAUnK,cAAe4K,IAAoBmJ,GARhB,mBAY3CR,GAAY1P,GAZ+B,eAY5D2P,EAZ4D,iBAchD8R,EAAarR,QAAQ9J,EAAU1J,eAAgBuG,IAAOkN,UAAUC,WAAY,CAAEX,aAd9B,eAclEY,EAdkE,OAgBrD,mBACU,mBAEvBP,EAASvE,GAAiB,CAAEK,QAASyE,EAAUC,KAAMrB,KAHxC,mBAG8C5C,KAFpC,sBAjB2C,UAoB5DgE,EAAUE,OApBkD,QAqBlET,EAASR,GAAQ,CAAEL,KAAM9R,KArByC,2EAuB3DyS,GAAkB,EAAD,GAAME,IAvBoC,yBAyB9DO,GACAP,EAAStE,GAAgB6E,EAAUC,OA1B2B,sCA8BhEvK,GAAM,GA9B0D,yBAgCzCwb,EAAa7Z,UAAUzI,EAASmH,EAAU1J,gBAhCD,eAgChE8kB,EAhCgE,yBAkC/D1R,EACHrF,GAAoB,CAChB7C,SAAU,CACNR,MAAO5F,OAAOggB,QArC4C,gEAA5B,yDAmDpBrb,aAAiB,sBAAD,uCAAwB,uDAAAtI,EAAA,yDAASqO,EAAT,EAASA,OAAQ9O,EAAjB,EAAiBA,MAAO0C,EAAxB,EAAwBA,SAAU9C,EAAlC,EAAkCA,UAAWiC,EAA7C,EAA6CA,QAA0B6Q,EAAvE,EAAuEA,SAChIhQ,EADyD,uBAE1DgQ,EAAST,GAAQ,CAAEJ,KAAM9R,KAFiC,iCAMxDiJ,EAAYrJ,EAAaC,GACzBgT,EAASlQ,EAASgC,YAClB4O,EAAcxE,EAASjJ,IAAOgE,MAAM0I,WAAWvS,EAAO,QAAU6F,IAAOgE,MAAM0J,WAAWvT,GACxFwJ,EAAgB,IAAI3D,IAAOC,SAASkD,EAAU1J,eAAgBmK,IAAoBmJ,GAT1B,mBAcnCR,GAAY1P,GAduB,WAcpD2P,EAdoD,QAgBtDvD,EAhBsD,kCAiBvCtF,EAAc6a,KAAK/Q,EAAa,CAAEjB,aAjBK,QAiBtDiS,EAjBsD,gDAmBvC9a,EAAc+a,OAAOjR,EAAa,CAAEjB,aAnBG,QAmBtDiS,EAnBsD,sBAsBpDjO,EAAiBvH,EAAS,WAAa,aAC7C4D,EAASvE,GAAiB,CAAEK,QAAS8V,EAAOpR,KAAMrB,KAAMhD,GAAoBC,GAASG,KAAMoH,KAvBjC,UAwBpDiO,EAAOnR,OAxB6C,QAyB1DT,EAASR,GAAQ,CAAEL,KAAM9R,KAzBiC,2EA2BnDyS,GAAkB,EAAD,GAAME,IA3B4B,yBA6BtD4R,GACA5R,EAAStE,GAAgBkW,EAAOpR,OA9BsB,4BAkC9DR,EAASV,GAAK,CAAEH,KAAM9R,KAlCwC,UAmCxD4I,GAAM,IAnCkD,yBAoCxD+J,EAAS5J,GAAY,CAAEjH,UAASjC,YAAW8C,cApCa,eAqC9DgQ,EAASV,GAAK,CAAEH,KAAM9R,KArCwC,mFAAxB,yDAgDvB,uCAAG,+CAAAU,EAAA,yDAASqO,EAAT,EAASA,OAAQ9O,EAAjB,EAAiBA,MAAO0C,EAAxB,EAAwBA,SAAU9C,EAAlC,EAAkCA,UAC9CoJ,EAAYrJ,EAAaC,GAEzB0T,EAAcxE,EAASjJ,IAAOgE,MAAM0I,WAAWvS,EAAO,QAAU6F,IAAOgE,MAAM0J,WAAWvT,GAE1FwkB,EAAY,EAEVhb,EAAgB,IAAI3D,IAAOC,SAASkD,EAAU1J,eAAgBmK,IAAoB/G,IAEpFoM,EATc,iCAUWtF,EAAcib,YAAYnR,GAVrC,OAURoR,EAVQ,OAWdF,EAAYE,EAAave,KAAKC,IAAI,GAAI,IAXxB,yCAaUoD,EAAcmb,YAAYrR,GAbpC,QAaRsR,EAbQ,OAcdJ,EAAYI,EAAYze,KAAKC,IAAI,GAAI,GAdvB,iCAiBXoe,GAjBW,4CAAH,uDAoBNK,GAAkB9b,aAAiB,2BAAD,uCAA6B,yCAAAtI,EAAA,yDAASqO,EAAT,EAASA,OAAQ9O,EAAjB,EAAiBA,MAAO0C,EAAxB,EAAwBA,SAAU9C,EAAlC,EAAkCA,UAA6B8S,EAA/D,EAA+DA,SAClIhQ,EADmE,uBAEpEgQ,EAAST,GAAQ,CAAEJ,KAAM9R,KAF2C,6BAMnEC,EANmE,yCAO7D,IAAI4I,SAAa,SAAAC,GAAO,OAC3BA,EAAQ,CACJ2b,UAAW,SATiD,uBAchDN,GAAc,CAAEpV,SAAQ9O,QAAO0C,WAAU9C,cAdO,cAclE4kB,EAdkE,yBAgBjE,CACHA,cAjBoE,4CAA7B,yDA2BlCM,GAAgB/b,aAAiB,yBAAD,uCAA2B,uCAAAtI,EAAA,yDAASqO,EAAT,EAASA,OAAQpM,EAAjB,EAAiBA,SAAU9C,EAA3B,EAA2BA,UAA2B8S,EAAtD,EAAsDA,SACrHhQ,EAD+D,uBAEhEgQ,EAAST,GAAQ,CAAEJ,KAAM9R,KAFuC,0CAM5CmkB,GAAc,CAAEpV,SAAQ9O,MAAO,IAAK0C,WAAU9C,cANF,cAM9DmlB,EAN8D,yBAQ7D,CACHA,cATgE,2CAA3B,yDAyBvCC,GAAYjY,aAAY,CAC1BhM,KAAM,WACNiM,aAR6B,CAC7BC,SAAS,EACTuX,UAAW,GACXO,UAAW,GAMX3X,SAAU,CACN6X,iBADM,SACW5c,EAAOiF,GACpBlF,GAAOC,EAAOiF,EAAOC,WAG7BC,cAAe,SAAAC,GACXA,EACKC,QAAQmX,GAAgBlX,SAAS,SAAAtF,GAC9BA,EAAM4E,SAAU,KAEnBS,QAAQmX,GAAgBjX,WAAW,SAACvF,EAAOiF,GACxClF,GAAOC,EAAOiF,EAAOC,SACrBlF,EAAM4E,SAAU,KAEnBS,QAAQmX,GAAgBhX,UAAU,SAACxF,EAAD,GAAuB,IAAbyF,EAAY,EAAZA,MACzCzF,EAAM4E,SAAU,EAChB/L,QAAQC,IAAI2M,MAEfJ,QAAQoX,GAAcnX,SAAS,SAAAtF,GAC5BA,EAAM4E,SAAU,KAEnBS,QAAQoX,GAAclX,WAAW,SAACvF,EAAOiF,GACtClF,GAAOC,EAAOiF,EAAOC,SACrBlF,EAAM4E,SAAU,KAEnBS,QAAQoX,GAAcjX,UAAU,SAACxF,EAAD,GAAuB,IAAbyF,EAAY,EAAZA,MACvCzF,EAAM4E,SAAU,EAChB/L,QAAQC,IAAI2M,SAKbkX,MAAf,QE3MeE,IF6MqBF,GAAUjX,QAA/BkX,iBAIiBhX,cAFf,SAAC5F,GAAD,OAAsBA,EAAMmC,YAEY,SAAAA,GAAQ,OAAIA,KE/NvD2a,aAAe,CACzBC,QAAS,CACLlX,QAASmX,GACT1O,QAAS2O,GACT1L,IAAK2L,GACLvW,oBAAqBwW,GACrBzlB,SAAU0lB,GACVjb,SAAUkb,IAEdC,WAAY,SAAAC,GAAoB,OAAIA,EAAqB,CAAEC,mBAAmB,QCb5EC,GAA6B,CAAC,2CAGhCC,GAAqB,SAAUjU,GAC3BgU,GAA2B3W,SAAS2C,IACpCoT,GAAMxS,SAAS5E,GAAM,CAAE+D,KAAM9R,EAA0B+N,MAAOgE,KAElE5Q,QAAQ8kB,WAAWlU,IAEvBiU,GAAmBE,eAAgB,EAGA,GAA/B/kB,QAAQ4M,MAAMmY,gBACd/kB,QAAQ8kB,WAAa9kB,QAAQ4M,MAC7B5M,QAAQ4M,MAAQiY,I,cCKLG,OAff,WACI,IAAQC,EAAoBC,eAApBD,gBACFpmB,EAAWsa,aAAwC,SAAAhS,GAAK,OAAIA,EAAMtI,YAClE2S,EAAW1Q,cASjB,OAPAyY,qBAAU,WACF1a,EAAS+R,UACTqU,EAAgBE,KAAKC,UAAUvmB,EAAS+R,UACxCY,EAASP,SAEd,CAACpS,EAAS+R,UAEN,yBCNLmL,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACnCkG,OAAO,eACFlG,EAAME,YAAYC,GAAG,MAAQ,CAC1BC,MAAOR,GACPuG,WAAY,IAGpBiD,QAAS,CACL/I,QAASL,EAAMqJ,QAAQ,GACvBtK,WAAYiB,EAAMO,YAAYC,OAAO,SAAU,CAC3CC,OAAQT,EAAMO,YAAYE,OAAOC,MACjCC,SAAUd,KAEdwD,OAAQ,OACRiG,SAAU,OACV1I,WAAYhB,IAEhB2J,aAAc,CACVxK,WAAYiB,EAAMO,YAAYC,OAAO,SAAU,CAC3CC,OAAQT,EAAMO,YAAYE,OAAOK,QACjCH,SAAUd,KAEde,WAAY,OAwCL4I,OApCf,YAAiD,IAA7B5kB,EAA4B,EAA5BA,SACVsc,EAAUpB,KAEhB,EAAoChb,oBAAS,GAA7C,mBAAOyhB,EAAP,KAAmBkD,EAAnB,KAEMC,EAAkBtI,aAAc,sBAGhCJ,GAFgBI,aAAc,sBAET,WACvBqI,GAAelD,KAGnB,OACI,sBAAK5J,UAAU,iBAAf,UACI,cAAC,GAAD,IACA,cAAC,GAAD,CAAQsE,OAAQyI,EAAiB1I,mBAAoBA,IACrD,sBAAKrE,UAAWuE,EAAQgF,OAAxB,UACI,cAACyD,GAAA,EAAD,CAAQC,MAAI,EAAZ,SACI,cAAC,GAAD,CAAcrD,WAAYA,EAAYvF,mBAAoBA,MAE9D,cAAC2I,GAAA,EAAD,CAAQE,QAAM,EAAd,SACI,cAAC,GAAD,SAGR,sBAAKlN,UAAS,UAAKuE,EAAQkI,QAAb,YAAwBM,GAAmBxI,EAAQqI,cAAjE,WACK,EAKA3kB,S,wEC3DFklB,OAVf,SAAkB5G,GACd,IAAQte,EAAqCse,EAArCte,SAAU/B,EAA2BqgB,EAA3BrgB,MAAOoZ,EAAoBiH,EAApBjH,MAAU8N,EAAnC,aAA6C7G,EAA7C,IAEA,OACI,6CAAK8G,KAAK,WAAWC,OAAQpnB,IAAUoZ,EAAOuH,GAAE,0BAAqBvH,GAAS,uCAA+BA,IAAa8N,GAA1H,IAAiIpK,MAAO,CAAE2J,SAAU,UAApJ,SACKzmB,IAAUoZ,GAAS,cAACiO,GAAA,EAAD,CAAKC,EAAG,EAAR,SAAYvlB,QCc7BwlB,OAdf,YAA6C,IAAzB7c,EAAwB,EAAxBA,KACZoS,EAAQ,CAAE0D,OAAQ,OAAQjD,MAAO,QAMrC,OAJI7S,EAAKI,OACLgS,EAAQ,CAAE0D,OAAQ,OAAQjD,MAAO,SAIjC,cAAC8J,GAAA,EAAD,CAAKG,QAAQ,OAAOC,WAAW,SAASC,eAAe,SAASnK,MAAO,OAAvE,SACI,qBAAKsB,IAAKnU,EAAKG,YAAaiS,MAAOA,O,sEChB3C,GAAY,CAAC,QAAS,WAE1B,SAAS,KAA2Q,OAA9P,GAAWvU,OAAOqS,QAAU,SAAUvM,GAAU,IAAK,IAAI6Q,EAAI,EAAGA,EAAIC,UAAUtY,OAAQqY,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIxW,KAAO0W,EAAc7W,OAAO8W,UAAUC,eAAeC,KAAKH,EAAQ1W,KAAQ2F,EAAO3F,GAAO0W,EAAO1W,IAAY,OAAO2F,IAA2BmR,MAAMtP,KAAMiP,WAEhT,SAAS,GAAyBC,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkE1W,EAAKwW,EAAnE7Q,EAEzF,SAAuC+Q,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2D1W,EAAKwW,EAA5D7Q,EAAS,GAAQsR,EAAapX,OAAOC,KAAK4W,GAAqB,IAAKF,EAAI,EAAGA,EAAIS,EAAW9Y,OAAQqY,IAAOxW,EAAMiX,EAAWT,GAAQQ,EAAShR,QAAQhG,IAAQ,IAAa2F,EAAO3F,GAAO0W,EAAO1W,IAAQ,OAAO2F,EAFxM,CAA8B+Q,EAAQM,GAAuB,GAAInX,OAAOsX,sBAAuB,CAAE,IAAIC,EAAmBvX,OAAOsX,sBAAsBT,GAAS,IAAKF,EAAI,EAAGA,EAAIY,EAAiBjZ,OAAQqY,IAAOxW,EAAMoX,EAAiBZ,GAAQQ,EAAShR,QAAQhG,IAAQ,GAAkBH,OAAO8W,UAAUU,qBAAqBR,KAAKH,EAAQ1W,KAAgB2F,EAAO3F,GAAO0W,EAAO1W,IAAU,OAAO2F,EAMne,SAASsZ,GAAK1H,EAAMC,GAClB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQ,GAAyBJ,EAAM,IAE3C,OAAoB,gBAAoB,MAAO,GAAS,CACtDK,MAAO,6BACPC,WAAY,+BACZhD,MAAO,OACPiD,OAAQ,OACRC,QAAS,YACTC,IAAKR,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DQ,GAAIP,GACHD,GAAS,KAAmB,gBAAoB,IAAK,CACtDQ,GAAI,YACU,gBAAoB,OAAQ,CAC1C7D,MAAO,CACLgE,KAAM,OACN8G,YAAa,EACbC,cAAe,QACfC,eAAgB,QAChBlH,OAAQ,sBACRmH,cAAe,EACfC,iBAAkB,GAEpBvgB,EAAG,8GACHwgB,UAAW,wCAIf,IAAI,GAA0B,aAAiBN,IAChC,I,OCmBAO,OAlDf,YAAsG,IAA1EtM,EAAyE,EAAzEA,KAAMuM,EAAmE,EAAnEA,YAAahT,EAAsD,EAAtDA,SAAUiT,EAA4C,EAA5CA,iBACrD,EAA0BnmB,mBAASkT,GAAnC,mBAAOnV,EAAP,KAAcqoB,EAAd,KAUA,OARA5N,qBAAU,WACN,IAAI6N,EAAgB,KAIpB,OAHAC,aAAaD,GAEbA,EAAW3kB,YAAW,kBAAMykB,EAAiBpoB,KAAQ,KAC9C,kBAAMuoB,aAAaD,MAC3B,CAACtoB,IAGA,cAACwoB,GAAA,EAAD,CAAO7H,GAAG,QAAQ/E,KAAMA,EAAMiI,QAASsE,EAAaM,cAAY,EAAhE,SACI,eAACC,GAAA,EAAD,CAAO5O,UAAU,uBAAjB,UACI,qBAAKA,UAAU,aAAf,SACI,cAAC6O,GAAA,EAAD,CAAYrM,QAAS6L,EAArB,SACI,cAAC3G,GAAA,EAAD,CAASvH,MAAM,UAAUwH,UAAWmH,SAI5C,mBAAG9O,UAAU,cAAb,sBAEA,eAACuN,GAAA,EAAD,CAAKvN,UAAU,eAAf,UACI,cAAC+O,GAAA,EAAD,CAAYC,QAAQ,WAApB,SACI,mBAAGhP,UAAU,cAAb,wBAEJ,eAACiP,GAAA,EAAD,CAAa7F,QAAQ,WAAWjJ,MAAM,UAAU+O,WAAS,EAAzD,UACI,cAACC,GAAA,EAAD,CACItI,GAAG,WACH3gB,MAAOA,EACPkpB,SAAU,SAACnN,GAAD,OAAYsM,EAAStM,EAAE1N,OAAOrO,QACxCgpB,WAAS,EACT/Z,KAAK,SACL6K,UAAU,aACVqP,aACI,cAACC,GAAA,EAAD,CAAgB3K,SAAS,MAAzB,SACI,mBAAG3E,UAAU,UAAb,mBAIZ,qBAAKA,UAAU,YAAf,SACI,mBAAGA,UAAU,iBAAb,2FCrDxB,GAAY,CAAC,QAAS,WAE1B,SAAS,KAA2Q,OAA9P,GAAWvR,OAAOqS,QAAU,SAAUvM,GAAU,IAAK,IAAI6Q,EAAI,EAAGA,EAAIC,UAAUtY,OAAQqY,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIxW,KAAO0W,EAAc7W,OAAO8W,UAAUC,eAAeC,KAAKH,EAAQ1W,KAAQ2F,EAAO3F,GAAO0W,EAAO1W,IAAY,OAAO2F,IAA2BmR,MAAMtP,KAAMiP,WAEhT,SAAS,GAAyBC,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkE1W,EAAKwW,EAAnE7Q,EAEzF,SAAuC+Q,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2D1W,EAAKwW,EAA5D7Q,EAAS,GAAQsR,EAAapX,OAAOC,KAAK4W,GAAqB,IAAKF,EAAI,EAAGA,EAAIS,EAAW9Y,OAAQqY,IAAOxW,EAAMiX,EAAWT,GAAQQ,EAAShR,QAAQhG,IAAQ,IAAa2F,EAAO3F,GAAO0W,EAAO1W,IAAQ,OAAO2F,EAFxM,CAA8B+Q,EAAQM,GAAuB,GAAInX,OAAOsX,sBAAuB,CAAE,IAAIC,EAAmBvX,OAAOsX,sBAAsBT,GAAS,IAAKF,EAAI,EAAGA,EAAIY,EAAiBjZ,OAAQqY,IAAOxW,EAAMoX,EAAiBZ,GAAQQ,EAAShR,QAAQhG,IAAQ,GAAkBH,OAAO8W,UAAUU,qBAAqBR,KAAKH,EAAQ1W,KAAgB2F,EAAO3F,GAAO0W,EAAO1W,IAAU,OAAO2F,EAMne,SAASgb,GAAYpJ,EAAMC,GACzB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQ,GAAyBJ,EAAM,IAE3C,OAAoB,gBAAoB,MAAO,GAAS,CACtDK,MAAO,6BACPC,WAAY,+BACZhD,MAAO,OACPiD,OAAQ,OACRC,QAAS,YACTC,IAAKR,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DQ,GAAIP,GACHD,GAAS,KAAmB,gBAAoB,IAAK,CACtDQ,GAAI,YACU,gBAAoB,OAAQ,CAC1C7D,MAAO,CACLgE,KAAM,OACN8G,YAAa,EACbC,cAAe,OACfC,eAAgB,QAChBlH,OAAQ,sBACRmH,cAAe,EACfC,iBAAkB,GAEpBvgB,EAAG,0kGACHwgB,UAAW,wCAIf,IAAI,GAA0B,aAAiBoB,IAChC,ICcAC,OAzCf,YAA6E,ICdnDC,EDcJ7e,EAAsD,EAAtDA,KAAMyK,EAAgD,EAAhDA,SAAUiT,EAAsC,EAAtCA,iBAClC,EAAwBnmB,oBAAS,GAAjC,mBAAO2Z,EAAP,KAAa4N,EAAb,KAMMrB,EAAc,WAChBqB,GAAQ,IAGRC,EAAUC,cAOd,OChCsBH,ED2BZ,WACF3N,GACC6N,EAAQ3iB,KAAK,WC5BtB2T,qBAAU,WACN,IAAMkP,EAAY,SAACjO,GACO,KAAlBA,EAAMkO,SAAgBL,KAI9B,OAFArpB,OAAO2pB,iBAAiB,UAAWF,GAE5B,WACHzpB,OAAO4pB,oBAAoB,UAAWH,MAE3C,IDuBC,sBAAK7P,UAAU,cAAf,UACI,cAACuH,GAAA,EAAD,CAAMI,UAAWgB,KAASC,GAAG,SAAS5I,UAAU,cAAhD,SACI,cAAC0H,GAAA,EAAD,CAASvH,MAAM,UAAUwH,UAAWmH,OAGxC,sBAAK9O,UAAU,mBAAf,UACI,cAAC,GAAD,CAAUpP,KAAMA,IAChB,qBAAKoP,UAAU,mBAAf,SACI,4BAAIpP,EAAKE,mBAIjB,sBAAKkP,UAAU,gBAAf,UACI,cAAC6O,GAAA,EAAD,CAAYrM,QA7BL,WACfkN,GAAQ,IA4BA,SACI,cAAChI,GAAA,EAAD,CAASvH,MAAM,UAAUwH,UAAWsI,OAExC,cAAC,GAAD,CAAkBnO,KAAMA,EAAMuM,YAAaA,EAAahT,SAAUA,EAAUiT,iBAAkBA,W,UE+D/F4B,OAjGf,YAA4C,IAAtBtf,EAAqB,EAArBA,KACZgI,EAAW1Q,cACjB,EAA0DT,IAAlDmB,EAAR,EAAQA,SAAUb,EAAlB,EAAkBA,QAASO,EAA3B,EAA2BA,QAASyC,EAApC,EAAoCA,kBAE9BolB,EAAgB5P,aAAkC,SAAAhS,GAAK,uBAAIA,EAAMsO,QAAQ1J,eAAlB,YAEvDgK,EAAmBoD,aAAiC,SAAAhS,GACtD,OAAOA,EAAMuR,IAAI3C,oBAGfjI,EAAsBqL,aAAwC,SAAAhS,GAChE,OAAOA,EAAM2G,uBAGXkb,EAAe7P,aAAuC,SAAAhS,GACxD,OAAOA,EAAMsO,SAAWtO,EAAMsO,QAAQjM,EAAK3J,SAGzC4K,EAAc0O,aAA2C,SAAAhS,GAC3D,OAAOA,EAAM6F,QAAQhB,OAAS7E,EAAM6F,QAAQhB,MAAMxC,EAAK3J,SAnBpB,SAsBxBopB,EAtBwB,8EAsBvC,WAAwBjU,GAAxB,SAAAzV,EAAA,sEACcoE,IADd,sEAG6B,IAArB6F,EAAKQ,aAA4C,IAAvBR,EAAKU,cAHvC,uBAIQsH,EAAST,GAAQ,CAAEJ,KAAM9R,KAJjC,0CAQU2S,EAASmD,GAAW,CAAEhU,UAAS6I,OAAM9K,UAAWwC,EAASM,WAAUwT,eAR7E,4CAtBuC,sBA4CvC,OACI,eAACmR,GAAA,EAAD,CAAKG,QAAQ,OAAO4C,cAAc,SAAlC,UACI,eAAC/C,GAAA,EAAD,CAAKG,QAAQ,OAAOE,eAAe,eAAe2C,SAAS,OAA3D,UACI,qBACIvQ,UAAU,sCACVwC,QAAS,WACDvN,GAAaC,EAAqB,eAAiBtE,EAAK3J,OAC5DopB,GAAS,IAJjB,SAOI,4BAAI/a,GAAcJ,EAAqB,eAAiBtE,EAAK3J,KAAM,aAEvE,qBACI+Y,UAAU,sCACVwC,QAAS,WACDvN,GAAaC,EAAqB,eAAiBtE,EAAK3J,KAAO,eACnEopB,GAAS,IAJjB,SAOI,4BAAI/a,GAAcJ,EAAqB,eAAiBtE,EAAK3J,KAAO,aAAc,8BAI1F,cAACupB,GAAA,EAAD,CAAOC,UAAU,QAAQC,IAAI,EAAMC,cAAY,EAACC,eAAa,EAAOrO,QAAS,IAA7E,SACI,eAACgL,GAAA,EAAD,CAAKvN,UAAU,YAAf,UACI,sBAAKA,UAAU,WAAf,UACI,mBAAGA,UAAU,qBAAb,6BACA,mBAAGA,UAAU,gCAAb,SAA8CmQ,EAAgB,cAAChH,GAAA,EAAD,CAAU1F,MAAM,UAAnB,UAAmChX,GAAKmE,EAAKQ,YAAa,GAA1D,cAE/D,sBAAK4O,UAAU,WAAf,UACI,mBAAGA,UAAU,qBAAb,+BACA,mBAAGA,UAAU,gCAAb,SAA8CmQ,EAAgB,cAAChH,GAAA,EAAD,CAAU1F,MAAM,UAAnB,UAAmChX,GAAKmE,EAAKU,cAAe,GAA5D,cAE/D,sBAAK0O,UAAU,WAAf,UACI,mBAAGA,UAAU,qBAAb,qCACA,mBAAGA,UAAU,gCAAb,SAA8CmQ,EAAgB,cAAChH,GAAA,EAAD,CAAU1F,MAAM,UA7CzF5R,EChDsB,SAACoL,EAAsB4T,GACtD,GAAqB,IAAjBA,EACA,MAAO,GAGX,IAAMpjB,EAAUJ,GAAkB4P,EAAc4T,GAChD,OAAIpjB,EAAU,EACH,eAEJD,GAAgBC,GD0CZqjB,CAAoB3T,EAAkBtL,EAAYR,qBAF9C,QA+CC,sBAAK2O,UAAU,WAAf,UACI,mBAAGA,UAAU,qBAAb,iBACA,mBAAGA,UAAU,qBAAb,SAAmCmQ,EAAgB,cAAChH,GAAA,EAAD,CAAU1F,MAAM,UAAnB,UAAmChX,GAAyB,IAApBmE,EAAK+I,aAAoB,GAAjE,UAGpD,sBAAKqG,UAAU,WAAf,UACI,mBAAGA,UAAU,qBAAb,0BACA,mBAAGA,UAAU,qBAAb,SAAmCmQ,EAAgB,cAAChH,GAAA,EAAD,CAAU1F,MAAM,UAhD5EjW,GAAgB4iB,EAAavV,YAAa,qBE+K1CkW,OArNf,YAA+D,IAAvCngB,EAAsC,EAAtCA,KAAMyK,EAAgC,EAAhCA,SACpBzC,EAAW1Q,cACjB,EAA0DT,IAAlDmB,EAAR,EAAQA,SAAUb,EAAlB,EAAkBA,QAASO,EAA3B,EAA2BA,QAASyC,EAApC,EAAoCA,kBAEpC,EAAgC5C,mBAAS,IAAzC,mBAAO6oB,EAAP,KAAiBC,EAAjB,KACA,EAA8B9oB,oBAAS,GAAvC,mBAAOmT,EAAP,KAAgB4V,EAAhB,KAEMf,EAAgB5P,aAAkC,SAAAhS,GAAK,uBAAIA,EAAMsO,QAAQ1J,eAAlB,YAC7D,EAAkChL,oBAAS,GAA3C,mBAEM+M,GAFN,UAE4BqL,aAAwC,SAAAhS,GAChE,OAAOA,EAAM2G,wBAXyC,SAkB3Cic,IAlB2C,2EAkB1D,8BAAAxqB,EAAA,sEACcoE,IADd,sEAGqB,KAAbimB,EAHR,gBAIQpY,EAAST,GAAQ,CAAEJ,KAAM9R,KAJjC,2BAMemrB,MAAMJ,GANrB,iBAOQpY,EAAST,GAAQ,CAAEJ,KAAM9R,KAPjC,6BAQe2K,EAAKQ,YAAc,GAAKR,EAAKU,cAAgB,GAR5D,qBAS8BlL,OAAO4E,QAAQ/E,GAT7C,wBAWkBorB,EAAc5kB,GAAKnC,OAAO0mB,GAAW,IAXvD,UAakBpY,EACFkC,GAAU,CACN5U,MAAOmrB,EACPhW,WACAzK,OACA9K,UAAWwC,EACXM,WACAb,UACAuT,aArBpB,QAwBYgW,IAxBZ,uCA2BcD,EAAc5kB,GAAKnC,OAAO0mB,GAAW,IA3BnD,UA4BcpY,EAEFkC,GAAU,CACN5U,MAAOmrB,EACPhW,WACAzK,OACA9K,UAAWwC,EACXM,WACAb,UACAuT,aArChB,QAwCQgW,IAxCR,6CAlB0D,sBA8D1D,IAAMA,EAAa,WACfL,EAAY,KAGVM,EAAe7nB,uBAAY,WAC7B,OAAOkH,EAAKJ,UAAY,IACzB,CAACI,EAAKJ,YAYHghB,EClGK,SAAqBtrB,EAAYurB,GAC5C,MAA4CtpB,mBAASjC,GAArD,mBAAOwrB,EAAP,KAAuBC,EAAvB,KAYA,OAVAhR,qBAAU,WACN,IAAMiR,EAAU/nB,YAAW,WACvB8nB,EAAkBzrB,KACnBurB,GAEH,OAAO,WACHhD,aAAamD,MAElB,CAAC1rB,IAEGwrB,EDqFqBG,CAAYb,EAAU,KAElDrQ,qBAAU,WACN/H,EAASU,GAAgB,CAAE1I,OAAM1K,MAAO8qB,EAAUpoB,WAAU9C,UAAWwC,OACxE,CAACkpB,IAEJ,IAAMM,EAAc,uCAAG,sBAAAnrB,EAAA,sEACToE,IADS,mEAGnB6N,EAASC,GAAe,CAAE9Q,UAAS6I,OAAMhI,WAAU9C,UAAWwC,KAH3C,2CAAH,qDAgBd6N,EAAemF,EAAU,OAAS1K,EAAKuF,aAE7C,OACI,eAACoX,GAAA,EAAD,CAAKG,QAAQ,OAAO4C,cAAc,SAAlC,UACI,eAAC/C,GAAA,EAAD,CAAKG,QAAQ,OAAOE,eAAe,eAAe2C,SAAS,OAA3D,UACmB,UAAd3f,EAAK3J,MACF,cAACgoB,GAAA,EAAD,CAAajP,UAAU,YAAYoJ,QAAQ,WAAWjJ,MAAM,UAAU+O,WAAS,EAA/E,SACI,sBAAKlP,UAAU,gBAAf,UACI,uBAAO7K,KAAK,WAAW4c,QAASzW,EAASkH,QAAS,kBAAM0O,GAAY5V,MACpE,8CAIZ,cAAC2T,GAAA,EAAD,CAAajP,UAAU,kBAAkBoJ,QAAQ,WAAWjJ,MAAM,UAAU+O,WAAS,EAArF,SACI,cAACC,GAAA,EAAD,CACI6C,YAAY,SACZ7c,KAAK,SACLjP,MAAO8qB,EACP5B,SAAU,SAAAnN,GAAC,OAAIgP,EAAYhP,EAAE1N,OAAOrO,QACpC+rB,WAAY,EACZjS,UAAU,aACVqP,aACI,cAACC,GAAA,EAAD,CAAgB3K,SAAS,MAAzB,SACI,qBAAK3E,UAAU,kBAAkBwC,QAvD9C,WACX,IAAI0P,EAAc5W,EAA6B,IAAnB1K,EAAKW,YAAqBX,EAAKK,QAEvDihB,IACAA,EAASzlB,GAAKylB,IAGlBjB,GAAaiB,GAAU,IAAIhb,aAgDH,SACI,4CAMnBqa,KAAkBjW,EACf,qBACI0E,UAAU,sCACVwC,QAAO,sBAAE,sBAAA7b,EAAA,0DACDsO,GAAaC,EAAqB,QAAUtE,EAAK3J,MADhD,iEAECkqB,IAFD,2CAFb,SAOI,4BAAI7b,GAAcJ,EAAqB,QAAUtE,EAAK3J,KAAM,YAGhE,qBACI+Y,UAAU,sCACVwC,QAAO,sBAAE,sBAAA7b,EAAA,0DACDsO,GAAaC,EAAqB,WAAatE,EAAK3J,MADnD,iEAEC6qB,IAFD,2CAFb,SAOI,4BAAIxc,GAAcJ,EAAqB,WAAatE,EAAK3J,KAAM,gBAQrEsqB,MAAmBjW,GACjB,qBAAK0E,UAAU,YAAf,SACI,mBAAGA,UAAU,iBAAb,0KAOZ,cAACwQ,GAAA,EAAD,CAAOC,UAAU,OAAOC,IAAI,EAAMC,cAAY,EAACC,eAAa,EAAOrO,QAAS,IAA5E,SACI,eAACgL,GAAA,EAAD,CAAKvN,UAAU,YAAf,UACI,sBAAKA,UAAU,WAAf,UACI,mBAAGA,UAAU,qBAAb,0BACA,mBAAGA,UAAU,qBAAb,SACKmQ,EACG,cAAChH,GAAA,EAAD,CAAU1F,MAAM,UAEhB,qCACKhX,GAAK6O,EAAU1K,EAAKW,YAAcX,EAAKK,QAAS,GADrD,IAC0DkF,UAMtE,sBAAK6J,UAAU,WAAf,UACI,mBAAGA,UAAU,qBAAb,0BACA,mBAAGA,UAAU,gCAAb,SAA8CmQ,EAAgB,cAAChH,GAAA,EAAD,CAAU1F,MAAM,UAAnB,UAAmChX,GAAKmE,EAAKiJ,UAAW,GAAxD,cAG/D,sBAAKmG,UAAU,WAAf,UACI,mBAAGA,UAAU,qBAAb,iBACA,mBAAGA,UAAU,qBAAb,SAAmCmQ,EAAgB,cAAChH,GAAA,EAAD,CAAU1F,MAAM,UAAnB,UAAmChX,GAAyB,IAApBmE,EAAK+I,aAAoB,GAAjE,UAGpD,sBAAKqG,UAAU,WAAf,UACI,mBAAGA,UAAU,qBAAb,0BACA,mBAAGA,UAAU,qBAAb,SAAmCmQ,EAAgB,cAAChH,GAAA,EAAD,CAAU1F,MAAM,UAnL5EjW,GAAgBoD,EAAKiK,YAAa,YAsL7B,sBAAKmF,UAAU,WAAf,UACI,mBAAGA,UAAU,qBAAb,8BACA,mBAAGA,UAAU,qBAAb,0BAGJ,sBAAKA,UAAS,WAAd,UACI,mBAAGA,UAAU,qBAAb,6BACA,mBAAGA,UAAU,gCAAb,SAA8CmQ,EAAgB,cAAChH,GAAA,EAAD,CAAU1F,MAAM,UAAnB,UAAmChX,GAAKmE,EAAKqJ,aAAc,GAA3D,uB,OEhJpEtE,OA5Df,YAAqC,IAArB/E,EAAoB,EAApBA,KAGZ,GAFoBnJ,IAAZM,QAEwBI,mBAAS,KAAzC,mBAAOkT,EAAP,KAAiB8W,EAAjB,KAEA,EAAwBhqB,mBAAS,GAAjC,mBAAOiqB,EAAP,KAAaC,EAAb,KAEMlC,EAAgB5P,aAAkC,SAAAhS,GAAK,uBAAIA,EAAMsO,QAAQ1J,eAAlB,YAMvDmf,EAAa,SAACC,GAAD,OAAqB,WACpCF,EAAQE,KAGZ,OACI,cAACjQ,GAAA,EAAD,CAAMoO,IAAI,EAAMC,cAAY,EAACC,eAAa,EAA1C,SACI,cAAC4B,GAAA,EAAD,CAAMxS,UAAU,YAAhB,SACI,cAACyS,GAAA,EAAD,CAAU3Q,MAAM,EAAhB,SACI,cAACQ,GAAA,EAAD,CAAMoO,IAAI,EAAV,SACI,sBAAK1Q,UAAU,YAAf,UACI,cAAC,GAAD,CAAYpP,KAAMA,EAAMyK,SAAUA,EAAUiT,iBAd3C,SAACpoB,GACtB,OAAOisB,EAAYjsB,MAeC,eAACqnB,GAAA,EAAD,CAAKkD,UAAU,MAAMzQ,UAAU,sBAA/B,UACI,sBAAKA,UAAU,kBAAf,UACI,mBAAGA,UAAU,wBAAb,wBACA,mBAAGA,UAAU,wBAAb,SAAsCmQ,EAAgB,cAAChH,GAAA,EAAD,IAAH,WAAsB1c,GAAKmE,EAAKrE,YAAa,SAEpG,sBAAKyT,UAAU,kBAAf,UACI,mBAAGA,UAAU,wBAAb,0BACA,mBAAGA,UAAU,wBAAb,SAAsCmQ,EAAgB,cAAChH,GAAA,EAAD,IAAH,WAAsB1c,GAAKmE,EAAKrE,YAAa,YAIxG,sBAAKyT,UAAU,iBAAf,UACI,qBAAKA,UAAW8I,KAAW,qBAAsB,CAAEC,OAAgB,GAARqJ,IAAc5P,QAAS8P,EAAW,GAA7F,SACI,uCAEJ,qBAAKtS,UAAW8I,KAAW,qBAAsB,CAAEC,OAAgB,GAARqJ,IAAc5P,QAAS8P,EAAW,GAA7F,SACI,4CAIR,cAAC,GAAD,CAAUpsB,MAAOksB,EAAM9S,MAAO,EAA9B,SACI,cAAC,GAAD,CAAc1O,KAAMA,EAAMyK,SAAUA,MAGxC,cAAC,GAAD,CAAUnV,MAAOksB,EAAM9S,MAAO,EAA9B,SACI,cAAC,GAAD,CAAY1O,KAAMA,kB,6EC1D3C,SAAS8hB,GAAT,GAA6C,IAAD,EAApB9hB,EAAoB,EAApBA,KACrBuf,EAAa,WAAIvf,EAAK8I,iBAAT,SAEnB,OACI,cAAC8W,GAAA,EAAD,CAAOC,UAAU,KAAKC,IAAI,EAA1B,SACI,eAAC9B,GAAA,EAAD,CAAO5O,UAAU,iBAAjB,UACI,sBAAKA,UAAU,YAAf,UACI,cAAC,GAAD,CAAUpP,KAAMA,IAChB,sBAAKoP,UAAU,YAAf,UACI,mBAAGA,UAAU,kBAAb,SAAgCpP,EAAKE,cACpCF,EAAKI,MACF,8BACI,cAACuW,GAAA,EAAD,CAAMC,KAAM5W,EAAKoF,MAAOzB,OAAO,SAA/B,SACI,mBAAGyL,UAAU,kBAAb,qCAOpB,sBAAKA,UAAU,WAAf,UACI,mBAAGA,UAAU,kBAAb,mBACA,mBAAGA,UAAU,6BAAb,SACI,qCC3Bb,ID2Ba,IACwBmQ,EAAgB,cAAChH,GAAA,EAAD,CAAU1F,MAAM,SAAYhX,GAAKmE,EAAK8I,UAAW,WAKjG,sBAAKsG,UAAU,WAAf,UACI,mBAAGA,UAAU,kBAAb,iBACA,mBAAGA,UAAU,kBAAb,SAAgCmQ,EAAgB,cAAChH,GAAA,EAAD,CAAU1F,MAAM,SAAnB,UAAkChX,GAAyB,IAApBmE,EAAK+I,aAAoB,GAAhE,UAGjD,sBAAKqG,UAAU,WAAf,UACI,mBAAGA,UAAU,kBAAb,uBACA,mBAAGA,UAAU,kBAAb,SACKmQ,EACG,cAAChH,GAAA,EAAD,CAAU1F,MAAM,SAEhB,IAAIkP,KAAKC,aAAa,QAAS,CAC3B5P,MAAO,WACP6P,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,IACxBC,OAAOpiB,EAAK6J,gBAI3B,cAAC8M,GAAA,EAAD,CAAMI,UAAWgB,KAASC,GAAE,iBAAYhY,EAAK3J,MAA7C,SACI,qBAAK+Y,UAAU,iBAAf,SACI,sCAASpP,EAAKE,wBAQ/B,SAASmiB,GAAT,GAA8C,IAAD,EAApBriB,EAAoB,EAApBA,KACtBuf,EAAa,WAAIvf,EAAK8I,iBAAT,SAEnB,OACI,eAACwZ,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAWC,MAAM,OAAjB,UACI,cAAC,GAAD,CAAUxiB,KAAMA,IAChB,sBAAKoP,UAAU,YAAf,UACI,mBAAGA,UAAU,kBAAb,SAAgCpP,EAAKE,cACpCF,EAAKI,MACF,cAACuW,GAAA,EAAD,CAAMpH,MAAM,UAAUqH,KAAM5W,EAAKoF,MAAOzB,OAAO,SAA/C,SACI,mBAAGyL,UAAU,kBAAb,mCAKhB,cAACmT,GAAA,EAAD,CAAWC,MAAM,SAAjB,SACI,mBAAGpT,UAAU,kBAAb,SACI,qCACI,sBAAMA,UAAU,gBAAhB,SClFb,MDiFS,IAC+DmQ,EAAgB,cAAChH,GAAA,EAAD,CAAU1F,MAAM,SAAYhX,GAAKmE,EAAK8I,UAAW,UAIxI,cAACyZ,GAAA,EAAD,CAAWC,MAAM,QAAjB,SACI,mBAAGpT,UAAU,kBAAb,SAAgCmQ,EAAgB,cAAChH,GAAA,EAAD,CAAU1F,MAAM,SAAnB,UAAkChX,GAAyB,IAApBmE,EAAK+I,aAAoB,GAAhE,SAEjD,cAACwZ,GAAA,EAAD,CAAWC,MAAM,QAAjB,SACI,mBAAGpT,UAAU,kBAAb,SACKmQ,EACG,cAAChH,GAAA,EAAD,CAAU1F,MAAM,SAEhB,IAAIkP,KAAKC,aAAa,QAAS,CAC3B5P,MAAO,WACP6P,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,IACxBC,OAAOpiB,EAAK6J,eAI3B,cAAC0Y,GAAA,EAAD,UACI,cAAC5L,GAAA,EAAD,CAAMI,UAAWgB,KAASC,GAAE,iBAAYhY,EAAK3J,MAA7C,SACI,qBAAK+Y,UAAU,iBAAf,SACI,8CERTqT,OAhGf,WACI,IAAQjgB,EAAUiN,KAAVjN,MACFkgB,EAAgB7O,aAAc,sBAE9B8O,EAAehT,aAAkC,SAAAhS,GAAK,OAAIA,EAAMuR,IAAI3M,WACpE5G,EAAcgU,aAAiC,SAAAhS,GACjD,OAAOA,EAAMuR,IAAIvT,eAGfqR,EAAkB2C,aAAiC,SAAAhS,GACrD,OAAOA,EAAMuR,IAAIlC,mBAGrB,OACI,sBAAKoC,UAAU,mBAAf,UACI,cAACwT,GAAA,EAAD,CAAM9C,IAAI,EAAV,SACI,sBAAK1Q,UAAU,wBAAf,UACI,qBAAKA,UAAU,+BAAf,SACI,mBAAGA,UAAU,8BAAb,4BAGJ,eAACwS,GAAA,EAAD,CAAMiB,WAAS,EAACC,MAAI,EAACC,GAAI,GAAIjH,QAAS,EAAG1M,UAAU,gCAAnD,UACI,cAACwS,GAAA,EAAD,CAAMkB,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACI,eAACrG,GAAA,EAAD,CAAKsG,UAAU,SAAf,UACI,mBAAG7T,UAAU,sCAAb,8BACA,mBAAGA,UAAU,sCAAb,SACKuT,EACG,cAACpK,GAAA,EAAD,CAAU1F,MAAM,UAEhB,IAAIkP,KAAKC,aAAa,QAAS,CAC3B5P,MAAO,WACP6P,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,IACxBC,OAAOpV,UAM1B,cAAC4U,GAAA,EAAD,CAAMkB,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACI,eAACrG,GAAA,EAAD,CAAKsG,UAAU,SAAf,UACI,mBAAG7T,UAAU,sCAAb,wBACA,mBAAGA,UAAU,sCAAb,SAAoDuT,EAAe,cAACpK,GAAA,EAAD,CAAU1F,MAAM,UAAnB,WAAoChX,GAAKF,EAAa,eAKhI+mB,GACE,cAACd,GAAA,EAAD,CAAMiB,WAAS,EAACC,MAAI,EAApB,SACI,cAACI,GAAA,EAAD,CAAgB9T,UAAU,8BAA1B,SACI,eAAC+T,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,eAACd,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAWC,MAAM,SAAjB,SACI,mBAAGpT,UAAU,oCAAb,oBAEJ,cAACmT,GAAA,EAAD,CAAWC,MAAM,SAAjB,SACI,mBAAGpT,UAAU,oCAAb,qBAEJ,cAACmT,GAAA,EAAD,CAAWC,MAAM,SAAjB,SACI,mBAAGpT,UAAU,oCAAb,mBAEJ,cAACmT,GAAA,EAAD,CAAWC,MAAM,QAAjB,SACI,mBAAGpT,UAAU,oCAAb,yBAEJ,cAACmT,GAAA,EAAD,CAAWC,MAAM,eAGzB,cAACa,GAAA,EAAD,UACK7gB,EAAMgC,KAAI,SAAAxE,GAAI,OACX,cAACqiB,GAAD,CAA+BriB,KAAMA,GAAjBA,EAAK3J,uBAUxDqsB,GACG,qBAAKtT,UAAU,kCAAf,SACI,cAACwS,GAAA,EAAD,CAAMiB,WAAS,EAACC,MAAI,EAAChH,QAAS,EAA9B,SACKtZ,EAAMgC,KAAI,SAAAxE,GAAI,OACX,cAAC4hB,GAAA,EAAD,CAAMkB,MAAI,EAACC,GAAI,GAAf,SACI,cAACjB,GAAD,CAA8B9hB,KAAMA,GAAjBA,EAAK3J,OADJ2J,EAAK3J,iB,OCpD1CitB,OAnCf,WACI,IAAM/W,EAAmBoD,aAAiC,SAAAhS,GACtD,OAAOA,EAAMuR,IAAI3C,oBAGfqC,EAAae,aAAiC,SAAAhS,GAChD,OAAOA,EAAMuR,IAAIN,cAGf2U,EAAkBtsB,mBAAQ,WAC5B,GAAIsV,GAAoBqC,EAAY,CAChC,IAAM/R,EAAUJ,GAAkB8P,EAAkBqC,GACpD,OAAOhS,GAAgBC,MAE5B,CAAC0P,EAAkBqC,IAEtB,OACI,cAAC+N,GAAA,EAAD,CAAKvN,UAAU,eAAf,SACI,4BACK7C,EACGgX,EACI,qCACI,iCAASA,IADb,qBAIA,8CAGJ,cAAChL,GAAA,EAAD,CAAU1F,MAAM,eCdvB5K,GAAiB5J,aAAiB,uBAAD,uCAAyB,2DAAAtI,EAAA,yDAAS+L,EAAT,EAASA,MAAO9J,EAAhB,EAAgBA,SAAUb,EAA1B,EAA0BA,QAASjC,EAAnC,EAAmCA,UAAgC8S,EAAnE,EAAmEA,SACjIhQ,EAD8D,uBAE/DgQ,EAAST,GAAQ,CAAEJ,KAAM9R,KAFsC,iCAK7DiJ,EAAYrJ,EAAaC,GAEzBgT,EAASlQ,EAASgC,YAClB2E,EAAc,IAAIxD,IAAOC,SAASkD,EAAUpK,aAAc0K,IAAkBsJ,GAC5E3J,EAAe,IAAIpD,IAAOC,SAASkD,EAAUnK,cAAeqK,IAAmB0J,GATlB,mBAaxCR,GAAY1P,GAb4B,WAazD2P,EAbyD,OAejD,QAAV7F,EAf2D,kCAgBzCnD,EAAYyJ,QAAQ9J,EAAU/J,uBAAwB4G,IAAOkN,UAAUC,WAAY,CAAEX,aAhB5C,QAgB3DY,EAhB2D,kBAmBjD,SAAVzG,EAnB2D,kCAoBzCvD,EAAa6J,QAAQ9J,EAAUjK,gBAAiB8G,IAAOkN,UAAUC,WAAY,CAAEX,aApBtC,QAoB3DY,EApB2D,sBAuBzDpB,EAAO,YAAwB,QAAVrF,EAAkB,UAAY,aACnD6J,EAA2B,QAAV7J,EAAkB,kBAAoB,oBAE7DkG,EAASvE,GAAiB,CAAEK,QAASyE,EAAUC,KAAMrB,OAAM5C,KAAMoH,KA1BF,UA2BzDpD,EAAUE,OA3B+C,QA4B/DT,EAASR,GAAQ,CAAEL,KAAM9R,KA5BsC,2EA8BxDyS,GAAkB,EAAD,GAAME,IA9BiC,yBAgC3DO,GACAP,EAAStE,GAAgB6E,EAAUC,OAjCwB,sCAqC7DvK,GAAM,GArCuD,yBAuCtCU,EAAYiB,UAAUzI,EAASmH,EAAU/J,wBAvCH,eAuC7DmL,EAvC6D,iBAwCpCnB,EAAaqB,UAAUzI,EAASmH,EAAUjK,iBAxCN,eAwC7DsL,EAxC6D,yBA0C5DqI,EACHrF,GAAoB,CAChB9C,QAAS,CACLR,IAAK3F,OAAOgG,GACZR,KAAMxF,OAAOiG,QA9C0C,gEAAzB,yDA4DjC6jB,GAAcnlB,aAAiB,oBAAD,uCAAsB,uDAAAtI,EAAA,yDAAS6M,EAAT,EAASA,OAAQtN,EAAjB,EAAiBA,MAAO0C,EAAxB,EAAwBA,SAAUb,EAAlC,EAAkCA,QAASjC,EAA3C,EAA2CA,UAA6B8S,EAAxE,EAAwEA,SAChIhQ,EADwD,uBAEzDgQ,EAAST,GAAQ,CAAEJ,KAAM9R,KAFgC,iCAKvDiJ,EAAYrJ,EAAaC,GACzBgT,EAASlQ,EAASgC,YAClB6F,EAAU,IAAI1E,IAAOC,SAASkD,EAAUjK,gBAAiB8X,KAAiBjE,GAC1Eub,EAAgB,IAAItoB,IAAOC,SAASkD,EAAU/J,uBAAwBmvB,KAAuBxb,GARtC,mBAalCR,GAAY1P,GAbsB,WAanD2P,EAbmD,OAe1C,UAAX/E,EAfqD,kCAgBrC6gB,EAAcE,MAAMxoB,IAAOgE,MAAM0I,WAAWvS,EAAO,QAAS6B,EAAS,CAAEwQ,aAhBlC,QAgBrDic,EAhBqD,gDAkBrC/jB,EAAQgkB,QAAQ1oB,IAAOgE,MAAM0I,WAAWvS,EAAO,SAAS,EAAM,CAAEqS,aAlB3B,QAkBrDic,EAlBqD,sBAoBnDjY,EAA4B,UAAX/I,EAAqB,UAAY,YACxDoF,EAASvE,GAAiB,CAAEK,QAAS8f,EAAQpb,KAAMrB,KAAMlD,GAAmBrB,GAAS2B,KAAMoH,KArBlC,UAsBnDiY,EAAQnb,OAtB2C,QAuBzDT,EAASR,GAAQ,CAAEL,KAAM9R,KAvBgC,2EAyBlDyS,GAAkB,EAAD,GAAME,IAzB2B,yBA2BrD4b,GACA5b,EAAStE,GAAgBkgB,EAAQpb,OA5BoB,4BA+B7DR,EAASV,GAAK,CAAEH,KAAM9R,KA/BuC,UAgCvD4I,GAAM,IAhCiD,yBAiCvD+J,EAAS5J,GAAY,CAAEjH,UAASjC,YAAW8C,cAjCY,yBAkCvDgQ,EAASgE,GAAe,CAAE9W,YAAW8C,cAlCkB,eAmC7DgQ,EAASV,GAAK,CAAEH,KAAM9R,KAnCuC,mFAAtB,yD,OC6M5ByuB,OAhRf,WACI,IAAM9b,EAAW1Q,cACjB,EAAmET,IAA3DmB,EAAR,EAAQA,SAAUb,EAAlB,EAAkBA,QAASwC,EAA3B,EAA2BA,QAASjC,EAApC,EAAoCA,QAASyC,EAA7C,EAA6CA,kBAE7C,EAAwB5C,mBAAS,GAAjC,mBAAOiqB,EAAP,KAAaC,EAAb,KACA,EAAgClqB,mBAAiB,IAAjD,mBAAO6oB,EAAP,KAAiBC,EAAjB,KAEMsC,EAAehT,aAAkC,SAAAhS,GAAK,OAAIA,EAAMuR,IAAI3M,WACpEoM,EAAegB,aAAiC,SAAAhS,GAClD,OAAOA,EAAMuR,IAAIP,gBAEfH,EAAcmB,aAAiC,SAAAhS,GACjD,OAAOA,EAAMuR,IAAIV,eAEfuV,EAAcpU,aAAiC,SAAAhS,GACjD,OAAOA,EAAM6F,QAAQvE,UAAYtB,EAAM6F,QAAQvE,SAASI,OAEtD2kB,EAAcrU,aAAiC,SAAAhS,GACjD,OAAOA,EAAM6F,QAAQvE,UAAYtB,EAAM6F,QAAQvE,SAASC,QAEtDQ,EAAiBiQ,aAAiC,SAAAhS,GACpD,OAAOA,EAAM6F,QAAQ3D,SAAWlC,EAAM6F,QAAQ3D,QAAQR,OAEpDM,EAAmBgQ,aAAiC,SAAAhS,GACtD,OAAOA,EAAM6F,QAAQ3D,SAAWlC,EAAM6F,QAAQ3D,QAAQX,QAEpDqP,EAAgBoB,aAAiC,SAAAhS,GACnD,OAAOA,EAAMuR,IAAIX,iBAEfE,EAAakB,aAAiC,SAAAhS,GAChD,OAAOA,EAAMuR,IAAIT,cAEfR,EAAa0B,aAAiC,SAAAhS,GAChD,OAAOA,EAAMuR,IAAIjB,cAGf3J,EAAsBqL,aAAwC,SAAAhS,GAChE,OAAOA,EAAM2G,uBAWX4c,EAAc,uCAAG,WAAOpf,GAAP,SAAA/L,EAAA,sEACToE,IADS,mFAGb6N,EAASC,GAAe,CAAE9Q,UAAS2K,QAAO9J,WAAU9C,UAAWwC,KAHlD,2CAAH,sDAMdusB,EAAa,uCAAG,WAAOrhB,GAAP,SAAA7M,EAAA,sEACRoE,IADQ,sEAED,KAAbimB,GAA4C,IAAzB9V,WAAW8V,GAFhB,gBAGdpY,EAAST,GAAQ,CAAEJ,KAAiB,UAAXvE,EAAqBvN,EAAwBA,KAHxD,wCAKR2S,EAASwb,GAAY,CAAErsB,UAASyL,SAAQtN,MAAO4uB,OAAO9D,GAAWpoB,WAAU9C,UAAWwC,KAL9E,QAMd2oB,EAAY,IANE,4CAAH,sDAUbM,EAAe7nB,uBACjB,SAAAgJ,GACI,MAAc,QAAVA,EAAwBpC,EAAiB,EAC/B,SAAVoC,EAAyBnC,EAAmB,EACzC,IAEX,CAACD,IAGCgiB,EAAa,SAACC,GAAD,OAAqB,WACpCF,EAAQE,GACRtB,EAAY,MAGV8D,EAAqBtoB,GAAKnC,OAAOsqB,GAAc,GAC/CI,EAAoBvoB,GAAkB,IAAb4S,EAAkB,GAC3C4V,EAA0BxoB,GAAqB,IAAhB0S,EAAqB,GACpD+V,EAAkBzoB,GAAMnC,OAAO2qB,GAA2B,IAAO3qB,OAAOyqB,GAAqB,GAEnG,OACI,qBAAK/U,UAAU,aAAf,SACI,cAACwT,GAAA,EAAD,CAAM9C,IAAI,EAAV,SACI,qBAAK1Q,UAAU,aAAf,SACI,eAACwS,GAAA,EAAD,CAAMxS,UAAU,kBAAkByT,WAAS,EAAChD,UAAU,SAAS/D,QAAS,EAAxE,UACI,cAAC8F,GAAA,EAAD,CAAMkB,MAAI,EAAV,SACI,sBAAK1T,UAAU,oBAAf,UACI,mBAAGA,UAAU,0BAAb,iCACA,cAAC,GAAD,SAIR,cAACwS,GAAA,EAAD,CAAMkB,MAAI,EAAV,SACI,qBAAK1T,UAAU,qBAAf,SACI,eAACwS,GAAA,EAAD,CAAMiB,WAAS,EAAC/G,QAAS,EAAzB,UACI,cAAC8F,GAAA,EAAD,CAAMkB,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGuB,GAAI,EAAGC,GAAI,EAArC,SACI,sBAAKpV,UAAU,iBAAf,UACI,mBAAGA,UAAU,2BAAb,iBACA,mBAAGA,UAAU,2BAAb,SACKX,EAAa,qCAAG,IAAIsT,KAAKC,aAAa,SAASI,OAAO1oB,OAAO0qB,IAAhD,OAA2E,cAAC7L,GAAA,EAAD,CAAU1F,MAAM,iBAKrH,cAAC+O,GAAA,EAAD,CAAMkB,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGuB,GAAI,EAAGC,GAAI,EAApC,SACI,sBAAKpV,UAAU,iBAAf,UACI,mBAAGA,UAAU,2BAAb,gCACA,mBAAGA,UAAU,2BAAb,SACKnB,EACG,IAAI8T,KAAKC,aAAa,QAAS,CAC3B5P,MAAO,WACP6P,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,IACxBC,OAAOnU,GAEV,cAACsK,GAAA,EAAD,CAAU1F,MAAM,iBAMhC,cAAC+O,GAAA,EAAD,CAAMkB,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGuB,GAAI,EAAGC,GAAI,EAApC,SACI,sBAAKpV,UAAU,mBAAf,UACI,mBAAGA,UAAU,2BAAb,2BACA,mBAAGA,UAAU,2BAAb,SAAyCT,EAAe,qCAAG9S,GAAKnC,OAAOiV,GAAe,GAA9B,WAA4C,cAAC4J,GAAA,EAAD,CAAU1F,MAAM,wBAOxI,sBAAKzD,UAAU,kBAAf,WACMjY,GACE,sBAAKiY,UAAU,iCAAf,UACI,qBAAKA,UAAU,gCAAgCwC,QAASjY,EAAxD,SACI,iDAEJ,mBAAGyV,UAAU,8BAAb,0DAGPjY,GACG,gCACI,sBAAKiY,UAAU,yBAAf,UACI,sBAAKA,UAAU,oCAAf,UACI,qBAAKwC,QAAS8P,EAAW,GAAItS,UAAW8I,KAAW,8BAA+B,CAAEC,QAASqJ,IAA7F,SACI,wCAEJ,qBAAK5P,QAAS8P,EAAW,GAAItS,UAAW8I,KAAW,8BAA+B,CAAEC,OAAQqJ,IAA5F,SACI,6CAIR,sBAAKpS,UAAU,wBAAf,UACI,cAACmP,GAAA,EAAD,CACIha,KAAK,SACL6c,YAAY,SACZhS,UAAU,0BACV9Z,MAAO8qB,EACP5B,SAAU,SAAAnN,GAAC,OAAIgP,EAAYhP,EAAE1N,OAAOrO,QACpC+rB,WAAY,EACZ5C,aACI,cAACC,GAAA,EAAD,CAAgB3K,SAAS,MAAzB,SACI,qBAAKnC,QA9H1C,WAEPyO,EADS,IAATmB,EACYuC,EAEAC,IA0HsD5U,UAAU,8BAAhC,SACI,0CAMN,IAAToS,GACG,qBAAKpS,UAAU,uBAAf,SACKjY,GAAWwpB,EAAa,OACrB,qBACIvR,UAAU,2BACVwC,QAAS,WACDvN,GAAaC,EAAqB,YACtC2f,EAAc,UAJtB,SAOI,4BAAIvf,GAAcJ,EAAqB,UAAW,kBAGtD,qBACI8K,UAAU,2BACVwC,QAAS,WACDvN,GAAaC,EAAqB,oBACtC4c,EAAe,QAJvB,SAOI,4BAAIxc,GAAcJ,EAAqB,kBAAmB,iBAMhE,IAATkd,GACG,qBAAKpS,UAAU,uBAAf,SACKjY,GAAWwpB,EAAa,QACrB,qBACIvR,UAAU,2BACVwC,QAAS,WACDvN,GAAaC,EAAqB,cACtC2f,EAAc,YAJtB,SAOI,4BAAIvf,GAAcJ,EAAqB,YAAa,oBAGxD,qBACI8K,UAAU,2BACVwC,QAAS,WACDvN,GAAaC,EAAqB,sBACtC4c,EAAe,SAJvB,SAOI,4BAAIxc,GAAcJ,EAAqB,oBAAqB,oBAOhF,qBAAK8K,UAAU,8BAAf,SACKjY,KAAcwpB,EAAa,QAAmB,IAATa,IAAiBb,EAAa,SAAoB,IAATa,IAC3E,8NAQZ,sBAAKpS,UAAU,kBAAf,UACI,sBAAKA,UAAU,WAAf,UACI,mBAAGA,UAAU,gBAAb,0BACA,mBAAGA,UAAU,iBAAb,SAA+BuT,EAAe,cAACpK,GAAA,EAAD,CAAU1F,MAAM,SAAY,qCAAGhX,GAAKnC,OAAOqqB,GAAc,GAA7B,gBAG9E,sBAAK3U,UAAU,WAAf,UACI,mBAAGA,UAAU,gBAAb,iCACA,mBAAGA,UAAU,iBAAb,SAA+BuT,EAAe,cAACpK,GAAA,EAAD,CAAU1F,MAAM,SAAY,qCAAGsR,EAAH,iBAG9E,sBAAK/U,UAAU,WAAf,UACI,mBAAGA,UAAU,gBAAb,gCACA,mBAAGA,UAAU,iBAAb,SAA+BuT,EAAe,cAACpK,GAAA,EAAD,CAAU1F,MAAM,SAAY,qCAAGyR,EAAH,iBAG9E,sBAAKlV,UAAU,WAAf,UACI,mBAAGA,UAAU,gBAAb,+BACA,mBAAGA,UAAU,iBAAb,SAA+BuT,EAAe,cAACpK,GAAA,EAAD,CAAU1F,MAAM,SAAY,qCAAGwR,EAAH,YAG9E,sBAAKjV,UAAU,WAAf,UACI,mBAAGA,UAAU,gBAAb,8BACA,mBAAGA,UAAU,iBAAb,SAA+BuT,EAAe,cAACpK,GAAA,EAAD,CAAU1F,MAAM,SAAY,qCAAGhX,GAA2B,IAAtBnC,OAAO8U,GAAoB,GAAnC,+B,OChIvGiW,OA1If,WACI,IAAM9B,EAAehT,aAAkC,SAAAhS,GAAK,OAAIA,EAAMuR,IAAI3M,WACpE2M,EAAMS,aAAoC,SAAAhS,GAAK,OAAIA,EAAMuR,OAEzDkV,EAAoBvoB,GAAsB,IAAjBqT,EAAIT,WAAkB,GAErD,OACI,qBAAKW,UAAU,iBAAf,SACI,qBAAKA,UAAU,uBAAf,SACI,cAACwT,GAAA,EAAD,CAAM9C,IAAI,EAAV,SACI,eAAC8B,GAAA,EAAD,CAAMiB,WAAS,EAAC/G,QAAS,EAAzB,UACI,cAAC8F,GAAA,EAAD,CAAMkB,MAAI,EAAC0B,GAAI,EAAGD,GAAI,EAAGvB,GAAI,EAAGD,GAAI,GAApC,SACI,sBAAK3T,UAAU,iBAAf,UACI,mBAAGA,UAAU,aAAb,wBACA,mBAAGA,UAAU,aAAb,SACKuT,EACG,cAACpK,GAAA,EAAD,CAAU1F,MAAM,UAEhB,IAAIkP,KAAKC,aAAa,QAAS,CAC3B5P,MAAO,WACP6P,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,IACxBC,OAAOlT,EAAIhB,kBAM9B,cAAC0T,GAAA,EAAD,CAAMkB,MAAI,EAAC0B,GAAI,EAAGD,GAAI,EAAGvB,GAAI,EAAGD,GAAI,GAApC,SACI,sBAAK3T,UAAU,iBAAf,UACI,mBAAGA,UAAU,aAAb,wBACA,mBAAGA,UAAU,aAAb,SAA2BuT,EAAe,cAACpK,GAAA,EAAD,CAAU1F,MAAM,UAAnB,WAAoChX,GAAKqT,EAAIvT,YAAa,WAIzG,cAACimB,GAAA,EAAD,CAAMkB,MAAI,EAAC0B,GAAI,EAAGD,GAAI,EAAGvB,GAAI,EAAGD,GAAI,GAApC,SACI,sBAAK3T,UAAU,iBAAf,UACI,mBAAGA,UAAU,aAAb,gCACA,mBAAGA,UAAU,aAAb,SACKuT,EACG,cAACpK,GAAA,EAAD,CAAU1F,MAAM,UAEhB,IAAIkP,KAAKC,aAAa,QAAS,CAC3B5P,MAAO,WACP6P,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,IACxBC,OAAOlT,EAAIjB,mBAM9B,cAAC2T,GAAA,EAAD,CAAMkB,MAAI,EAAC0B,GAAI,EAAGD,GAAI,EAAGvB,GAAI,EAAGD,GAAI,GAApC,SACI,sBAAK3T,UAAU,iBAAf,UACI,mBAAGA,UAAU,aAAb,mCACA,mBAAGA,UAAU,aAAb,SACKuT,EACG,cAACpK,GAAA,EAAD,CAAU1F,MAAM,UADP,UAGN,IAAIkP,KAAKC,aAAa,QAAS,CAC9BE,sBAAuB,EACvBC,sBAAuB,IACxBC,OAAOlT,EAAIvC,YANL,gGAQP,IAAIoV,KAAKC,aAAa,QAAS,CAC7BE,sBAAuB,EACvBC,sBAAuB,IACxBC,OAAOlT,EAAIzC,qBAM9B,cAACmV,GAAA,EAAD,CAAMkB,MAAI,EAAC0B,GAAI,EAAGD,GAAI,EAAGvB,GAAI,EAAGD,GAAI,GAApC,SACI,sBAAK3T,UAAU,iBAAf,UACI,mBAAGA,UAAU,aAAb,8BACA,mBAAGA,UAAU,aAAb,SACKuT,EACG,cAACpK,GAAA,EAAD,CAAU1F,MAAM,UAEhB,IAAIkP,KAAKC,aAAa,QAAS,CAC3B5P,MAAO,WACP6P,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,IACxBC,OAAOlT,EAAIlC,wBAM9B,cAAC4U,GAAA,EAAD,CAAMkB,MAAI,EAAC0B,GAAI,EAAGD,GAAI,EAAGvB,GAAI,EAAGD,GAAI,GAApC,SACI,sBAAK3T,UAAU,iBAAf,UACI,mBAAGA,UAAU,aAAb,yBACA,mBAAGA,UAAU,aAAb,SAA2BuT,EAAe,cAACpK,GAAA,EAAD,CAAU1F,MAAM,UAAnB,UAAmC,IAAIkP,KAAKC,aAAa,SAASI,OAAO1oB,OAAO0qB,IAAhF,YAW/C,cAACxC,GAAA,EAAD,CAAMkB,MAAI,EAAC0B,GAAI,EAAGD,GAAI,EAAGvB,GAAI,EAAGD,GAAI,GAApC,SACI,sBAAK3T,UAAU,iBAAf,UACI,mBAAGA,UAAU,aAAb,8BACA,mBAAGA,UAAU,aAAb,SACKuT,EACG,cAACpK,GAAA,EAAD,CAAU1F,MAAM,UAEhB,IAAIkP,KAAKC,aAAa,QAAS,CAC3B5P,MAAO,WACP6P,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,IACxBC,OAAOlT,EAAIlB,YAM9B,cAAC4T,GAAA,EAAD,CAAMkB,MAAI,EAAC0B,GAAI,EAAGD,GAAI,EAAGvB,GAAI,EAAGD,GAAI,GAApC,SACI,sBAAK3T,UAAU,iBAAf,UACI,mBAAGA,UAAU,aAAb,2BACA,mBAAGA,UAAU,aAAb,SAA2BuT,EAAe,cAACpK,GAAA,EAAD,CAAU1F,MAAM,UAAnB,UAAmChX,GAAKnC,OAAOwV,EAAIP,cAAe,GAAlE,0B,OC9HxD+V,OARf,WACI,OACI,qBAAKtV,UAAU,iBAAf,SACI,kD,mBCkOGuV,OA9Nf,WACI,IAAMhC,EAAehT,aAAkC,SAAAhS,GAAK,OAAIA,EAAMuR,IAAI3M,WACpE5G,EAAcgU,aAAiC,SAAAhS,GACjD,OAAOA,EAAMuR,IAAIvT,eAEf8S,EAAakB,aAAiC,SAAAhS,GAChD,OAAOA,EAAMuR,IAAIT,cAEfuV,EAAcrU,aAAiC,SAAAhS,GACjD,OAAOA,EAAM6F,QAAQvE,UAAYtB,EAAM6F,QAAQvE,SAASC,QAGtDklB,EAAoBvoB,GAAkB,IAAb4S,EAAkB,GAC3C0V,EAAqBtoB,GAAKnC,OAAOsqB,GAAc,GAC/CY,EAAmB/oB,GAAKF,EAAa,GAE3C,EAAoCpE,mBAAS4sB,GAA7C,mBAAOU,EAAP,KAAmBC,EAAnB,KACA,EAAsCvtB,mBAAS6sB,GAA/C,mBAAOW,EAAP,KAAoBC,EAApB,KACA,EAA8CztB,mBAASqtB,GAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KACA,EAAkD3tB,mBAASqtB,GAA3D,mBAAOO,EAAP,KAA0BC,EAA1B,KACA,EAAwB7tB,mBAAS,IAAjC,mBAAO8tB,EAAP,KAAaC,EAAb,KAEA,EAAkD/tB,mBAAS,KAA3D,mBAAOguB,EAAP,KAA0BC,EAA1B,KACA,EAA8CjuB,mBAAS,KAAvD,mBAAOkuB,EAAP,KAAwBC,EAAxB,KAEMC,EAAwB,WAC1B,IAAMC,EAAOlsB,OAAOmrB,IAAe,EAC7BgB,EAAQvb,WAAW2a,IAAoB,EAE7C,OAAOppB,GADQ+pB,EAAOC,EACF,IAUxB,EAAkDtuB,mBAASouB,KAA3D,mBAAOG,EAAP,KAA0BC,EAA1B,KAwBA,OAtBAhW,qBAAU,WACN,IAAMiW,EAAuBL,IAC7BI,EAAqBC,KACtB,CAACnB,EAAYI,IAYhBlV,qBAAU,WACN,IAAMkW,EAXa,WACnB,IAAI3wB,EAAQgV,WAAWya,GAAe,IACtCzvB,EAAQmG,KAAKC,IAAIpG,EAAQ,EAAG,QAAiB,GAAK,EAElD,IADA,IAAI+K,EAAU3G,OAAOmrB,GACZrQ,EAAI,EAAGA,EAAW,EAAP6Q,EAAU7Q,IAC1BnU,GAAWA,EAAU/K,EAEzB,OAAO+K,EAIY6lB,GACnBV,EAAqB3pB,GAAKoqB,EAAY,IACtC,IAAME,EAAqBF,GAAc3b,WAAW6a,IAAsB,GAC1EO,EAAmB7pB,GAAKsqB,EAAoB,MAC7C,CAACd,EAAMN,EAAaI,EAAmBN,IAGtC,qBAAKzV,UAAU,kBAAf,SACI,cAACwT,GAAA,EAAD,CAAM9C,IAAI,EAAV,SACI,qBAAK1Q,UAAU,kBAAf,SACI,eAACwS,GAAA,EAAD,CAAMxS,UAAU,uBAAuByT,WAAS,EAAChD,UAAU,SAAS/D,QAAS,EAA7E,UACI,cAAC8F,GAAA,EAAD,CAAMkB,MAAI,EAAV,SACI,sBAAK1T,UAAU,yBAAf,UACI,mBAAGA,UAAU,+BAAb,wBACA,mBAAGA,UAAU,kCAAb,wCAGR,cAACwS,GAAA,EAAD,CAAMkB,MAAI,EAAV,SACI,qBAAK1T,UAAU,0BAAf,SACI,eAACwS,GAAA,EAAD,CAAMiB,WAAS,EAAC/G,QAAS,EAAzB,UACI,cAAC8F,GAAA,EAAD,CAAMkB,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGuB,GAAI,EAAGC,GAAI,EAArC,SACI,sBAAKpV,UAAU,sBAAf,UACI,mBAAGA,UAAU,gCAAb,wBACA,mBAAGA,UAAU,gCAAb,SAA8CuT,EAAe,cAACpK,GAAA,EAAD,CAAU1F,MAAM,UAAnB,WAAoC+R,UAGtG,cAAChD,GAAA,EAAD,CAAMkB,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGuB,GAAI,EAAGC,GAAI,EAApC,SACI,sBAAKpV,UAAU,sBAAf,UACI,mBAAGA,UAAU,gCAAb,yBACA,mBAAGA,UAAU,gCAAb,SACKuT,EAAe,cAACpK,GAAA,EAAD,CAAU1F,MAAM,UAAa,qCAAG,IAAIkP,KAAKC,aAAa,SAASI,OAAO1oB,OAAO0qB,IAAhD,cAIzD,cAACxC,GAAA,EAAD,CAAMkB,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGuB,GAAI,EAAGC,GAAI,EAApC,SACI,sBAAKpV,UAAU,wBAAf,UACI,mBAAGA,UAAU,gCAAb,gCACA,mBAAGA,UAAU,gCAAb,SAA8CuT,EAAe,cAACpK,GAAA,EAAD,CAAU1F,MAAM,UAAa,qCAAGsR,EAAH,0BAO9G,qBAAK/U,UAAU,uBAAf,SACI,gCACI,qBAAKA,UAAU,8BAAf,SACI,eAACwS,GAAA,EAAD,CAAMiB,WAAS,EAAC/G,QAAS,EAAzB,UACI,cAAC8F,GAAA,EAAD,CAAMkB,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACI,sBAAK5T,UAAU,uCAAf,UACI,mBAAGA,UAAU,6CAAb,0BACA,cAACmP,GAAA,EAAD,CACIha,KAAK,SACL6c,YAAY,SACZhS,UAAU,+BACV9Z,MAAOuvB,EACPrG,SAAU,SAAAnN,GAAC,OAAIyT,EAAczT,EAAE1N,OAAOrO,QACtC+rB,WAAY,EACZ5C,aACI,cAACC,GAAA,EAAD,CAAgB3K,SAAS,MAAzB,SACI,qBAAKnC,QAAS,kBAAMkT,EAAcX,IAAqB/U,UAAU,8BAAjE,SACI,+CAOxB,cAACwS,GAAA,EAAD,CAAMkB,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACI,sBAAK5T,UAAU,uCAAf,UACI,mBAAGA,UAAU,6CAAb,qBACA,cAACmP,GAAA,EAAD,CACIha,KAAK,SACL6c,YAAY,SACZhS,UAAU,+BACV9Z,MAAOyvB,EACPvG,SAAU,SAAAnN,GAAC,OAAI2T,EAAe3T,EAAE1N,OAAOrO,QACvC+rB,WAAY,EACZ5C,aACI,cAACC,GAAA,EAAD,CAAgB3K,SAAS,MAAzB,SACI,qBAAKnC,QAAS,kBAAMoT,EAAeZ,IAAoBhV,UAAU,8BAAjE,SACI,mDAOxB,cAACwS,GAAA,EAAD,CAAMkB,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACI,sBAAK5T,UAAU,uCAAf,UACI,mBAAGA,UAAU,6CAAb,wCACA,cAACmP,GAAA,EAAD,CACIha,KAAK,SACL6c,YAAY,SACZhS,UAAU,+BACV9Z,MAAO2vB,EACPzG,SAAU,SAAAnN,GAAC,OAAI6T,EAAmB7T,EAAE1N,OAAOrO,QAC3C+rB,WAAY,EACZ5C,aACI,cAACC,GAAA,EAAD,CAAgB3K,SAAS,MAAzB,SACI,qBAAKnC,QAAS,kBAAMsT,EAAmBN,IAAmBxV,UAAU,8BAApE,SACI,mDAOxB,cAACwS,GAAA,EAAD,CAAMkB,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACI,sBAAK5T,UAAU,uCAAf,UACI,mBAAGA,UAAU,6CAAb,0CACA,cAACmP,GAAA,EAAD,CACIha,KAAK,SACL6c,YAAY,SACZhS,UAAU,+BACV9Z,MAAO6vB,EACP3G,SAAU,SAAAnN,GAAC,OAAI+T,EAAqB/T,EAAE1N,OAAOrO,QAC7C+rB,WAAY,EACZ5C,aACI,cAACC,GAAA,EAAD,CAAgB3K,SAAS,MAAzB,SACI,qBAAKnC,QAAS,kBAAMwT,EAAqBR,IAAmBxV,UAAU,8BAAtE,SACI,wDAShC,sBAAKA,UAAU,8BAAf,UACI,mBAAGA,UAAU,oCAAb,mBAAqDiW,EAArD,eAAgEA,EAAO,EAAI,IAAM,MACjF,cAACe,GAAA,EAAD,CAAQhX,UAAU,yBAAyBiX,IAAK,EAAGC,IAAK,IAAKhxB,MAAO+vB,EAAM7G,SAAU,SAACnN,EAAGkV,GAAJ,OAAsBjB,EAAQiB,SAEtH,sBAAKnX,UAAU,uBAAf,UACI,sBAAKA,UAAU,WAAf,UACI,mBAAGA,UAAU,gBAAb,qCACA,mBAAGA,UAAU,iBAAb,SAA+BuT,EAAe,cAACpK,GAAA,EAAD,CAAU1F,MAAM,SAAY,yCAAIiT,UAElF,sBAAK1W,UAAU,WAAf,UACI,mBAAGA,UAAU,gBAAb,4BACA,mBAAGA,UAAU,iBAAb,SAA+BuT,EAAe,cAACpK,GAAA,EAAD,CAAU1F,MAAM,SAAY,yCAtKpF,WACtB,IAAM+S,EAAOlsB,OAAOmrB,IAAe,EAC7BgB,EAAQvb,WAAWsa,GAEzB,OAAO/oB,GADQ+pB,EAAOC,EACF,GAkK0FW,WAElF,sBAAKpX,UAAU,WAAf,UACI,mBAAGA,UAAU,gBAAb,qCACA,mBAAGA,UAAU,iBAAb,SAA+BuT,EAAe,cAACpK,GAAA,EAAD,CAAU1F,MAAM,SAAY,qCAAG0S,EAAH,gBAE9E,sBAAKnW,UAAU,WAAf,UACI,mBAAGA,UAAU,gBAAb,8BACA,mBAAGA,UAAU,iBAAb,SAA+BuT,EAAe,cAACpK,GAAA,EAAD,CAAU1F,MAAM,SAAY,yCAAI4S,UAElF,sBAAKrW,UAAU,WAAf,UACI,mBAAGA,UAAU,gBAAb,wCACA,mBAAGA,UAAU,iBAAb,SAA+BuT,EAAe,cAACpK,GAAA,EAAD,CAAU1F,MAAM,SAAY,mCAAGpX,KAAKuB,MAAMtD,OAAO+rB,GAAmB,+BC3N3I,I,OAAA,IAA0B,kCCyZ1B,ICzZA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,IlCyZA,CA/Va,CACxBpvB,KAAM,OACN2L,QAAQ,EACRD,IAAK+E,GACL3P,QAAS,GACTZ,SAAU,IAwBc,CACxBF,KAAM,OACNc,QAAS,6CACT4K,IAAK4E,GACLpQ,SAAU,GA6Qe,CACzBF,KAAM,QACNc,QAAS,6CACT4K,IAAK0kB,GACLlwB,SAAU,MmClWRmwB,GAAoBC,GA4BXC,OA1Bf,WACI,IAAMC,EAAiBlX,aAAkC,SAAAhS,GAAK,OAAIA,EAAM6F,QAAQjB,WAC1EukB,EAAqBnX,aAA+D,SAAAhS,GAAK,OAAIA,EAAM6F,QAAQf,UAEjH,EAA4BlL,mBAA0BmvB,IAAtD,mBAAOjkB,EAAP,KAAeskB,EAAf,KAmBA,OAjBAhX,qBAAU,WACN,IASMC,EAPS2W,GAAU1W,SAAQ,SAAAnO,GAC7B,OAAIglB,EAAmBhlB,EAAMzL,MAClBwH,OAAOqS,OAAOpO,EAAOglB,EAAmBhlB,EAAMzL,OAElDyL,KAG8BqO,SAASC,MAAK,SAACra,EAAGsa,GACvD,OAAOta,EAAC,QAAcsa,EAAC,SAAe,EAAIA,EAAC,QAActa,EAAC,QAAc,EAAI,KAGhFgxB,EAAU/W,KACX,CAAC8W,EAAoBD,IAEjB,CAAEpkB,SAAQF,QAASskB,IC2GfG,OA/Hf,WACI,IAAMhf,EAAW1Q,cAEjB,EAAqET,IAA7D8C,EAAR,EAAQA,QAAS3B,EAAjB,EAAiBA,SAAUW,EAA3B,EAA2BA,kBAAmBjB,EAA9C,EAA8CA,QAASF,EAAvD,EAAuDA,UACjDL,EAAUD,IAEhB,EAA0CK,oBAAS,GAAnD,mBAAO0vB,EAAP,KAAsBC,EAAtB,KAEMvE,EAAehT,aAAkC,SAAAhS,GAAK,OAAIA,EAAMuR,IAAI3M,WACpE4kB,EAAcxX,aAAkC,SAAAhS,GAAK,OAAKwT,QAAQxT,EAAMuR,IAAIvT,gBAE1E6G,EAAUiN,KAAVjN,MACAC,EAAWmkB,KAAXnkB,OAZG,SAcI2kB,EAdJ,8EAcX,WAA2BC,GAA3B,eAAAtxB,EAAA,yDACQuxB,EAAetvB,EAEE,QAAjBqvB,GACAE,EAAQD,GAGS,YAAjBD,IAA8BlwB,IAAWK,EAPjD,mBAQQgwB,EAAYF,IACRH,EATZ,iDAWQI,EAAQD,GAXhB,OAcyB,cAAjBD,GAAgClwB,GAAWK,GAC3CgL,EAAMgC,KAAI,SAAAxE,GACNgI,EAASjI,GAAyB,CAAE5I,UAAS6I,OAAMhI,WAAU9C,UAAWwC,QAI3D,eAAjB2vB,GAAiClwB,GAAWK,GAC5CiL,EAAO+B,KAAI,SAAA1C,GACPkG,EAASnG,GAA0B,CAAE1K,UAAS2K,QAAO9J,WAAU9C,UAAWwC,QAtBtF,4CAdW,sBAyCX,IAAM6vB,EAAUzuB,uBACZ,SAAAwuB,GACItf,EAASgE,GAAe,CAAE9W,UAAWwC,EAASM,SAAUsvB,KACxD9kB,EAAMgC,KAAI,SAAAxE,GACNgI,EAASU,GAAgB,CAAE1I,OAAM1K,MAAO,KAAM0C,SAAUsvB,EAAcpyB,UAAWwC,QAErF+K,EAAO+B,KAAI,SAAA1C,GACPkG,EAASnG,GAA0B,CAAE1K,QAAS,GAAI2K,QAAO9J,WAAU9C,UAAWwC,UAGtF,CAACF,IAGCgwB,EAAc1uB,uBAChB,SAAAwuB,GACItf,EAASxI,GAAmB,CAAEtK,UAAWwC,EAASP,UAASa,SAAUsvB,OAEzE,CAAC9vB,IA+BL,OA5BAuY,qBAAU,WACFpX,IACAgB,IAAUI,MAAK,WACXmtB,GAAiB,MAGrBA,GAAiB,KAEtB,IAEHnX,qBAAU,WACFkX,IACAG,EAAY,OACZA,EAAY,WACZA,EAAY,aACZA,EAAY,iBAEjB,CAACH,IAEJlX,qBAAU,WACFvY,IACA4vB,EAAY,OACZA,EAAY,WACZA,EAAY,aACZA,EAAY,iBAEjB,CAAC5vB,IAEAmrB,EAAqB,cAAC,GAAD,IAGrB,cAAC,GAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO8E,OAAK,EAACC,KAAK,aAAlB,SACI,cAAC,GAAD,MAGJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,IAAD,CAAU1P,GAAG,iBAGjB,cAAC,IAAD,CAAO0P,KAAK,SAAZ,SACI,cAAC,GAAD,MAGJ,eAAC,IAAD,CAAOA,KAAK,SAAZ,UACKllB,EAAMgC,KAAI,SAAAxE,GACP,OACI,cAAC,IAAD,CAAOynB,OAAK,EAAiBC,KAAI,iBAAY1nB,EAAK3J,MAAlD,SACI,cAAC,GAAD,CAAM2J,KAAMA,KADEA,EAAK3J,SAK/B,cAAC,GAAD,OAGJ,cAAC,IAAD,CAAOqxB,KAAK,cAAZ,SACI,cAAC,GAAD,MAGJ,cAAC,IAAD,CAAO3Q,UAAW2N,WClGnBiD,OA/Bf,WACI,IAaA,EAA8BpwB,oBAAS,GAAvC,mBAAOgL,EAAP,KAAgBqlB,EAAhB,KAMA,OAJA7X,qBAAU,WACNtV,KAAkBV,MAAK,kBAAM6tB,GAAW,QACzC,IAECrlB,EAAgB,cAAC,GAAD,IAGhB,cAAC,KAAD,UACI,cAAC,GAAD,O,0LCTNgQ,GAAYC,cAAW,SAAAC,GAAK,YAAK,CACnCoV,MAAI,mBACCpV,EAAME,YAAYC,GAAG,MAAQ,CAC1BkV,SAAU,qBAFd,yBAIU,KAJV,GAMJC,KAAM,CACFlV,MAAO,QAEXzP,MAAO,CACH+O,gBAAiB,WAErB7K,KAAM,CACF6K,gBAAiB,WAErB5K,QAAS,CACL4K,gBAAiB,WAErB3K,QAAS,CACL2K,gBAAiB,WAErB6V,WAAY,CACRzY,MAAO,UACP0Y,WAAY,uBAEhBC,WAAY,CACRpV,QAAS,mBACTkK,eAAgB,gBAChBzN,MAAO,WAEX4Y,MAAO,CACH9U,WAAY,QAEhB+U,OAAQ,CACJtV,QAAS,UACTyK,UAAW,eACX/L,WAAYiB,EAAMO,YAAYC,OAAO,YAAa,CAC9CG,SAAUX,EAAMO,YAAYI,SAASiV,WAEzC9Y,MAAO,WAEX+Y,WAAY,CACR/K,UAAW,kBAEfgL,SAAU,CACNzV,QAAS,IAEb0V,UAAW,CACPC,SAAU,GACVlZ,MAAO,UACPmZ,aAAc,GAElBC,cAAe,CACXpZ,MAAO,WAEXqZ,OAAQ,CACJ9V,QAAS,EACT+V,cAAe,QAEnBC,UAAW,CACPC,UAAW,IAEfC,UAAW,CACPC,WAAY,WACZC,UAAW,IACXnN,SAAU,OACVoN,WAAY,kBACZrW,QAAS,EACTsW,aAAc,OAuEPC,GAnEMC,sBAAsE,SAAC3T,EAAOK,GAC/F,IAAMrC,EAAUpB,KACRgX,EAAkB7N,eAAlB6N,cACR,EAAgChyB,oBAAS,GAAzC,mBAAOiyB,EAAP,KAAiBC,EAAjB,KACA,EAA4BlyB,oBAAS,GAArC,mBAAOmyB,EAAP,KAAeC,EAAf,KAEMC,EAAoB9wB,uBAAY,WAClC2wB,GAAY,SAAAI,GAAW,OAAKA,OAC7B,IAEGC,EAAgBhxB,uBAAY,WAC9BywB,EAAc5T,EAAMM,MACrB,CAACN,EAAMM,GAAIsT,IAiBd,OACI,cAAC,KAAD,CAAiBvT,IAAKA,EAAK5G,UAAWuE,EAAQkU,KAA9C,SACI,eAACkC,GAAA,EAAD,CAAM3a,UAAW8I,KAAWvE,EAAQoU,KAAMpU,EAAQgC,EAAMvO,QAAQF,WAAhE,UACI,eAAC8iB,GAAA,EAAD,CAAarW,QAAS,CAAEkU,KAAMlU,EAAQuU,YAAtC,UAlBI,SAAChhB,GACb,OAAQA,GACJ,IAAK,QACD,OAAO,cAAC,KAAD,CAAWqI,MAAM,YAC5B,IAAK,OACD,OAAO,cAAC,KAAD,CAAUA,MAAM,YAC3B,IAAK,UACD,OAAO,cAAC,KAAD,CAAaA,MAAM,YAC9B,IAAK,UACD,OAAO,cAAC,KAAD,CAAaA,MAAM,YAC9B,QACI,OAAO,yBAQF0a,CAAQtU,EAAMvO,QAAQF,UACvB,cAACgjB,GAAA,EAAD,CAAY1R,QAAQ,YAAYpJ,UAAWuE,EAAQqU,WAAnD,SACKrS,EAAMvO,QAAQD,OAEnB,sBAAKiI,UAAWuE,EAAQwU,MAAxB,UACKxS,EAAMvO,QAAQhE,OACX,cAAC6a,GAAA,EAAD,CAAY,aAAW,YAAY7O,UAAW8I,KAAWvE,EAAQyU,OAAT,eAAoBzU,EAAQ2U,WAAakB,IAAa5X,QAASgY,EAAvH,SACI,cAAC,KAAD,CAAgBra,MAAM,cAG9B,cAAC0O,GAAA,EAAD,CAAY7O,UAAWuE,EAAQyU,OAAQxW,QAASkY,EAAhD,SACI,cAAC,KAAD,CAAWva,MAAM,oBAI7B,cAAC4a,GAAA,EAAD,CAAUrK,GAAI0J,EAAU7X,QAAQ,OAAOqO,eAAa,EAApD,SACI,eAAChC,GAAA,EAAD,CAAO5O,UAAWuE,EAAQ4U,SAA1B,UACI,cAAC,mBAAD,CAAiBphB,KAAMwU,KAAKC,UAAUjG,EAAMvO,QAAQhE,OAAQgnB,OAAQ,kBAAMT,GAAU,IAApF,SACI,eAACU,GAAA,EAAD,CAAQ/a,KAAK,QAAQF,UAAWuE,EAAQiV,OAAxC,UACI,cAAC,KAAD,CAAiBxZ,UAAW8I,KAAWvE,EAAQ6U,UAAT,eAAuB7U,EAAQgV,cAAgBe,MADzF,yBAKJ,sBAAKta,UAAWuE,EAAQmV,UAAxB,UACI,cAACoB,GAAA,EAAD,8BACA,cAACA,GAAA,EAAD,CAAY9a,UAAWuE,EAAQqV,UAA/B,SAA2CrN,KAAKC,UAAUjG,EAAMvO,QAAQhE,MAAO,KAAM,qBCjJjHknB,IAASC,OACL,cAAC,KAAD,CACIC,SAAU,EACVC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhB9O,QAAS,SAAC7d,EAAKoJ,GAAN,OAA0B,cAAC,GAAD,CAAc6O,GAAIjY,EAAKoJ,QAASuU,KAAKiP,MAAMxjB,MAC9EyjB,iBAAkB,IAPtB,SASI,cAAC,IAAD,CAAUrQ,MAAOA,GAAjB,SACI,cAAC,EAAD,UACI,cAAC,GAAD,UAIZsQ,SAASC,eAAe,W","file":"static/js/main.1e3c46c6.chunk.js","sourcesContent":["export const TOKEN_DECIMALS = 9;\n\nexport enum Networks {\n    AVAX_TEST = 43113,\n    AVAX_MAIN = 43114,\n}\n\nexport const DEFAULD_NETWORK = Networks.AVAX_MAIN;\n","import { Networks } from \"./blockchain\";\n\nconst AVAX_MAINNET = {\n    DAO_ADDRESS: \"0x813C38214799535c1375606188aD7E8Fd1762651\",\n\n    NORO_ADDRESS: \"0x8810dc193bA78b0dB831687EBB8d79f24a8b5E81\",\n    SNORO_ADDRESS: \"0x6905C5AD100370f75f42305CbfbD7925E9720a59\",\n\n    TREASURY_ADDRESS: \"0xE62bec7F3Dba623223cb3Bd23f901dA3fAC42893\",\n\n    STAKING_ADDRESS: \"0x39F38285d3DE182faB1fb767C97dC24f7052adeC\",\n    STAKING_DISTRIBUTOR_ADDRESS: \"0x01120bb9890e3F3A8f97a433554f7243Fa722541\",\n    STAKING_HELPER_ADDRESS: \"0xa276eCf241346a98308aB980E52995c530B6f905\",\n    STAKING_WARMUP_ADDRESS: \"0xc24AAa9F6bb31D64181b11F745b7e81924Cb9C40\",\n\n    BONDEPOSITORY_BEND: \"0x192F7F5de2D495B129fFb81C42299eD0C98A5A60\",\n    BONDEPOSITORY_AVAX: \"0x8929c7417790A3312aaeb3E5af901f1F0c68721f\",\n    // BONDEPOSITORY_AVAX: \"0x131bac8Ea93C2465bADF496d3304D195d4E9f623\",\n\n    TIME_BONDING_CALC_ADDRESS: \"0x62D16266fa36Ab4a5b7FDd7DCCC79EE0a5a8E165\",\n    WSNORO_ADDRESS: \"0xcC822C19F8e0ed505F32580E42FA3e7DcF0F1013\",\n\n    BEND_ADDRESS: \"0x3160591776e34C319F2Ad28Ba8c1F4829adc3907\",\n    WAVAX_ADDRESS: \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\",\n    ZAPIN_ADDRESS: \"\",\n};\n\nconst AVAX_TESTNET = {\n    DAO_ADDRESS: \"0x8c8eC00fb235dE3922182b47d2E8f8e69268039a\",\n\n    NORO_ADDRESS: \"0x9eda14D32a04e124f5CaE9C7038Ca1e1E3469F48\",\n    SNORO_ADDRESS: \"0x0A1537b01e4Ce77d407aa5c6e9C1DbeBF6E4263F\",\n\n    TREASURY_ADDRESS: \"0xF0D05745A4585a0cA4Eba2947d68dCb24C1cf87E\",\n\n    STAKING_ADDRESS: \"0x612b24aB07cEC3478Dcf306B8895DF6DE967b002\",\n    STAKING_DISTRIBUTOR_ADDRESS: \"0xA62Fc0C89F750eD9968803C77D243c0e4ffaADE0\",\n    STAKING_HELPER_ADDRESS: \"0x357E42FBda72D5d4c10c3Dd35c29720D837b0504\",\n    STAKING_WARMUP_ADDRESS: \"0x56Cbb166dD50312Cacd2de18bf738B6BA0a41Eb3\",\n\n    BONDEPOSITORY_BEND: \"0x5ce727ece75bF3D76B66710e4775cF66ef69F234\",\n    BONDEPOSITORY_AVAX: \"0x34CF4660E1857fc7b8F6ab17f36C81ceADE74bd1\",\n\n    TIME_BONDING_CALC_ADDRESS: \"0xff34432D718a53b6D93c8a873Eec6d96EC5845C1\",\n    WSNORO_ADDRESS: \"0xA33d7cAEeCE2E3176d51239CE4F78d68B24b226A\",\n\n    BEND_ADDRESS: \"0x19a1165A79AFAAeFd805969B32a0640d4Db9f131\",\n    WAVAX_ADDRESS: \"0xd00ae08403B9bbb9124bB305C09058E32C39A48c\",\n    ZAPIN_ADDRESS: \"\",\n};\n\nexport const getAddresses = (networkID: number) => {\n    if (networkID === Networks.AVAX_MAIN) return AVAX_MAINNET;\n    if (networkID === Networks.AVAX_TEST) return AVAX_TESTNET;\n\n    throw Error(\"Network don't support\");\n};\n","export const messages = {\n    please_connect: \"Please connect your wallet to the Avalanche network to use Wonderland.\",\n    please_connect_wallet: \"Please connect your wallet.\",\n    try_mint_more: (value: string) => `You're trying to mint more than the maximum payout available! The maximum mint payout is ${value} SAB.`,\n    try_withdraw_more: (value: string) => `You're trying to withdraw more than the maximum withdraw amount available! The maximum withdraw amount is ${value} SAB.`,\n    before_minting: \"Before minting, enter a value.\",\n    existing_mint:\n        \"You have an existing mint. Minting will reset your vesting period and forfeit any pending claimable rewards. We recommend claiming rewards first or using a fresh wallet. Do you still wish to proceed?\",\n    existing_withdraw: \"You have an existing mint. Withdraw will reset your minting information. Please redeem the existing mint, then withdraw\",\n    before_stake: \"Before staking, enter a value.\",\n    before_unstake: \"Before un staking, enter a value.\",\n    tx_successfully_send: \"Your transaction was successfully sent\",\n    your_balance_updated: \"Your balance was successfully updated\",\n    nothing_to_claim: \"You have nothing to claim\",\n    something_wrong: \"Something went wrong\",\n    switch_to_avalanche: \"Switch to the Avalanche network?\",\n    slippage_too_small: \"Slippage too small\",\n    slippage_too_big: \"Slippage too big\",\n    your_balance_update_soon: \"Your balance will update soon\",\n    before_wrap: \"Before wrapping, enter a value.\",\n    before_unwrap: \"Before un wrapping, enter a value.\",\n};\n","import { Networks } from \"../constants/blockchain\";\n\nconst switchRequest = () => {\n    return window.ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: \"0xa86a\" }],\n    });\n};\n\nconst addChainRequest = () => {\n    return window.ethereum.request({\n        method: \"wallet_addEthereumChain\",\n        params: [\n            {\n                chainId: \"0xa86a\",\n                chainName: \"Avalanche Mainnet\",\n                rpcUrls: [\"https://api.avax.network/ext/bc/C/rpc\"],\n                blockExplorerUrls: [\"https://cchain.explorer.avax.network/\"],\n                nativeCurrency: {\n                    name: \"AVAX\",\n                    symbol: \"AVAX\",\n                    decimals: 18,\n                },\n            },\n        ],\n    });\n};\n\nexport const swithNetwork = async () => {\n    if (window.ethereum) {\n        try {\n            await switchRequest();\n        } catch (error: any) {\n            if (error.code === 4902) {\n                try {\n                    await addChainRequest();\n                    await switchRequest();\n                } catch (addError) {\n                    console.log(error);\n                }\n            }\n            console.log(error);\n        }\n    }\n};\n","import React, { useState, ReactElement, useContext, useMemo, useCallback } from \"react\";\nimport Web3Modal from \"web3modal\";\nimport { StaticJsonRpcProvider, JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { getMainnetURI, getTestnetURI } from \"./helpers\";\nimport { DEFAULD_NETWORK } from \"../../constants\";\nimport { Networks } from \"../../constants\";\nimport { messages } from \"../../constants/messages\";\nimport { useDispatch } from \"react-redux\";\nimport { swithNetwork } from \"../../helpers/switch-network\";\n\ntype onChainProvider = {\n    connect: () => Promise<Web3Provider>;\n    disconnect: () => void;\n    checkWrongNetwork: () => Promise<boolean>;\n    provider: JsonRpcProvider;\n    address: string;\n    connected: Boolean;\n    web3Modal: Web3Modal;\n    chainID: number;\n    web3?: any;\n    providerChainID: number;\n    hasCachedProvider: () => boolean;\n};\n\nexport type Web3ContextData = {\n    onChainProvider: onChainProvider;\n} | null;\n\nconst Web3Context = React.createContext<Web3ContextData>(null);\n\nexport const useWeb3Context = () => {\n    const web3Context = useContext(Web3Context);\n    if (!web3Context) {\n        throw new Error(\"useWeb3Context() can only be used inside of <Web3ContextProvider />, \" + \"please declare it at a higher level.\");\n    }\n    const { onChainProvider } = web3Context;\n    return useMemo(() => {\n        return { ...onChainProvider };\n    }, [web3Context]);\n};\n\nexport const useAddress = () => {\n    const { address } = useWeb3Context();\n    return address;\n};\n\nexport const Web3ContextProvider: React.FC<{ children: ReactElement }> = ({ children }) => {\n    const dispatch = useDispatch();\n\n    const [connected, setConnected] = useState(false);\n    const [chainID, setChainID] = useState(DEFAULD_NETWORK);\n    const [providerChainID, setProviderChainID] = useState(DEFAULD_NETWORK);\n    const [address, setAddress] = useState(\"\");\n\n    const [uri, setUri] = useState(getMainnetURI());\n    const [provider, setProvider] = useState<JsonRpcProvider>(new StaticJsonRpcProvider(uri));\n\n    const [web3Modal] = useState<Web3Modal>(\n        new Web3Modal({\n            cacheProvider: true,\n            providerOptions: {\n                walletconnect: {\n                    package: WalletConnectProvider,\n                    options: {\n                        rpc: {\n                            [Networks.AVAX_MAIN]: getMainnetURI(),\n                            [Networks.AVAX_TEST]: getTestnetURI(),\n                        },\n                    },\n                },\n            },\n        }),\n    );\n\n    const hasCachedProvider = (): boolean => {\n        if (!web3Modal) return false;\n        if (!web3Modal.cachedProvider) return false;\n        return true;\n    };\n\n    const _initListeners = useCallback(\n        (rawProvider: JsonRpcProvider) => {\n            if (!rawProvider.on) {\n                return;\n            }\n\n            rawProvider.on(\"accountsChanged\", () => setTimeout(() => window.location.reload(), 1));\n\n            rawProvider.on(\"chainChanged\", async (chain: number) => {\n                changeNetwork(chain);\n            });\n\n            rawProvider.on(\"network\", (_newNetwork, oldNetwork) => {\n                if (!oldNetwork) return;\n                window.location.reload();\n            });\n        },\n        [provider],\n    );\n\n    const changeNetwork = async (otherChainID: number) => {\n        const network = Number(otherChainID);\n\n        setProviderChainID(network);\n    };\n\n    const connect = useCallback(async () => {\n        const rawProvider = await web3Modal.connect();\n\n        _initListeners(rawProvider);\n\n        const connectedProvider = new Web3Provider(rawProvider, \"any\");\n\n        const chainId = await connectedProvider.getNetwork().then(network => Number(network.chainId));\n        const connectedAddress = await connectedProvider.getSigner().getAddress();\n\n        setAddress(connectedAddress);\n\n        setProviderChainID(chainId);\n\n        if (chainId === Networks.AVAX_MAIN || chainId === Networks.AVAX_TEST) {\n            setProvider(connectedProvider);\n        }\n\n        setConnected(true);\n\n        return connectedProvider;\n    }, [provider, web3Modal, connected]);\n\n    const checkWrongNetwork = async (): Promise<boolean> => {\n        if (providerChainID !== DEFAULD_NETWORK) {\n            const shouldSwitch = window.confirm(messages.switch_to_avalanche);\n            if (shouldSwitch) {\n                await swithNetwork();\n                window.location.reload();\n            }\n            return true;\n        }\n\n        return false;\n    };\n\n    const disconnect = useCallback(async () => {\n        web3Modal.clearCachedProvider();\n        setConnected(false);\n\n        setTimeout(() => {\n            window.location.reload();\n        }, 1);\n    }, [provider, web3Modal, connected]);\n\n    const onChainProvider = useMemo(\n        () => ({\n            connect,\n            disconnect,\n            hasCachedProvider,\n            provider,\n            connected,\n            address,\n            chainID,\n            web3Modal,\n            providerChainID,\n            checkWrongNetwork,\n        }),\n        [connect, disconnect, hasCachedProvider, provider, connected, address, chainID, web3Modal, providerChainID],\n    );\n    //@ts-ignore\n    return <Web3Context.Provider value={{ onChainProvider }}>{children}</Web3Context.Provider>;\n};\n","export const getMainnetURI = (): string => {\n    return \"https://api.avax.network/ext/bc/C/rpc\";\n};\n\nexport const getTestnetURI = (): string => {\n    return \"https://api.avax-test.network/ext/bc/C/rpc\";\n};\n","import axios from \"axios\";\n\nconst cache: { [key: string]: number } = {};\n\nexport const loadTokenPrices = async () => {\n    const url = \"https://api.coingecko.com/api/v3/simple/price?ids=avalanche-2,weth&vs_currencies=usd\";\n    const { data } = await axios.get(url);\n\n    cache[\"AVAX\"] = data[\"avalanche-2\"].usd;\n    // cache[\"MIM\"] = data[\"magic-internet-money\"].usd;\n    cache[\"ETH\"] = data[\"weth\"].usd;\n    cache[\"BEND\"] = 0.00000001;\n};\n\nexport const getTokenPrice = (symbol: string): number => {\n    return Number(cache[symbol]);\n};\n","import axios from \"axios\";\nimport { ParaSwap } from \"paraswap\";\nimport { ethers } from \"ethers\";\nimport { LpReserveContract, SabTokenContract } from \"../abi\";\nimport { Networks } from \"../constants/blockchain\";\n\nimport { getAddresses } from \"../constants\";\nimport { getTokenPrice } from \"./token-price\";\nimport allBonds from \"./bond\";\n\nconst reserveAvaxNoroAddress = \"0x6bee00C9c5800d233fF1c2403d4a16A9e9ae792B\";\n\nexport async function getMarketPrice(networkID: Networks, provider: any): Promise<number> {\n    const avaxPrice = getTokenPrice(\"AVAX\");\n\n    const pairContract = new ethers.Contract(reserveAvaxNoroAddress, LpReserveContract, provider);\n    const reserves = await pairContract.getReserves();\n\n    const noro = reserves[0] * Math.pow(10, 9);\n    const avax = reserves[1] * Math.pow(10, 18);\n\n    const marketPrice = (reserves[1] * avaxPrice) / noro;\n    return marketPrice;\n    //\n    // const addresses = getAddresses(networkID);\n    // const sabContract = new ethers.Contract(addresses.NORO_ADDRESS, SabTokenContract, provider);\n    //\n    // const totalSupply = (await sabContract.totalSupply()) / Math.pow(10, 9);\n    //\n    // const timeBondsAmountsPromises = allBonds.map(bond => bond.getTimeAmount(networkID, provider));\n    // const timeBondsAmounts = await Promise.all(timeBondsAmountsPromises);\n    // const timeAmount = timeBondsAmounts.reduce((timeAmount0, timeAmount1) => timeAmount0 + timeAmount1, 0);\n    //\n    // const tokenAmountsPromises = allBonds.map(bond => bond.getTokenAmount(networkID, provider));\n    // const tokenAmounts = await Promise.all(tokenAmountsPromises);\n    //\n    // const rfvTreasury = tokenAmounts.reduce((tokenAmount0, tokenAmount1) => tokenAmount0 + tokenAmount1, 0);\n    // const timeSupply = totalSupply - timeAmount;\n    //\n    // return rfvTreasury / timeSupply;\n}\n\nexport async function getAvaxReserves(networkID: Networks, provider: any): Promise<any> {\n    const pairContract = new ethers.Contract(reserveAvaxNoroAddress, LpReserveContract, provider);\n    const reserves = await pairContract.getReserves();\n\n    return reserves[1] / Math.pow(10, 18);\n}\n","export const shorten = (str: string): string => {\n    if (str.length < 10) return str;\n    return `${str.slice(0, 6)}...${str.slice(str.length - 4)}`;\n};\n","import fromExponential from \"from-exponential\";\n\nexport const trim = (number: number = 0, precision?: number) => {\n    const array = fromExponential(number).split(\".\");\n    if (array.length === 1) return fromExponential(number);\n    //@ts-ignore\n    array.push(array.pop().substring(0, precision));\n    const trimmedNumber = array.join(\".\");\n    return trimmedNumber;\n};\n","export const secondsUntilBlock = (startBlock: number, endBlock: number) => {\n    return endBlock - startBlock;\n};\n","export const prettifySeconds = (seconds?: number, resolution?: string) => {\n    if (seconds !== 0 && !seconds) {\n        return \"\";\n    }\n\n    const d = Math.floor(seconds / (3600 * 24));\n    const h = Math.floor((seconds % (3600 * 24)) / 3600);\n    const m = Math.floor((seconds % 3600) / 60);\n\n    if (resolution === \"day\") {\n        return d + (d == 1 ? \" day\" : \" days\");\n    }\n\n    const dDisplay = d > 0 ? d + (d == 1 ? \" day, \" : \" days, \") : \"\";\n    const hDisplay = h > 0 ? h + (h == 1 ? \" Hour, \" : \" Hours, \") : \"\";\n    const mDisplay = m > 0 ? m + (m == 1 ? \" Min\" : \" Mins\") : \"\";\n\n    return dDisplay + hDisplay + mDisplay;\n};\n","export default __webpack_public_path__ + \"static/media/NORO.65aad7f4.png\";","export default __webpack_public_path__ + \"static/media/SNORO.d094b893.png\";","import NoroImg from \"../assets/tokens/NORO.png\";\nimport SNoroImg from \"../assets/tokens/SNORO.png\";\n\nfunction toUrl(tokenPath: string): string {\n    const host = window.location.origin;\n    return `${host}/${tokenPath}`;\n}\n\nexport function getTokenUrl(name: string) {\n    if (name === \"noro\") {\n        return toUrl(NoroImg);\n    }\n\n    if (name === \"snoro\") {\n        return toUrl(SNoroImg);\n    }\n\n    throw Error(`Token url doesn't support: ${name}`);\n}\n","export const setAll = (state: any, properties: any) => {\n    const props = Object.keys(properties);\n    props.forEach(key => {\n        state[key] = properties[key];\n    });\n};\n","export const sleep = (seconds: number) => {\n    return new Promise(resolve => setTimeout(() => resolve(null), seconds * 1000));\n};\n","import { ethers } from \"ethers\";\nimport { getAddresses } from \"../../constants\";\nimport { SabTokenContract, SSabTokenContract, MimTokenContract, wMemoTokenContract } from \"../../abi\";\nimport { setAll } from \"../../helpers\";\n\nimport { createSlice, createSelector, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { JsonRpcProvider, StaticJsonRpcProvider } from \"@ethersproject/providers\";\nimport { Bond } from \"../../helpers/bond/bond\";\nimport { Networks } from \"../../constants/blockchain\";\nimport React from \"react\";\nimport { RootState } from \"../store\";\nimport { IToken } from \"../../helpers/tokens\";\n\ninterface IGetBalances {\n    address: string;\n    networkID: Networks;\n    provider: StaticJsonRpcProvider | JsonRpcProvider;\n}\n\ninterface IAccountBalances {\n    balances: {\n        ssab: string;\n        sab: string;\n        wmemo: string;\n    };\n}\n\nexport const getBalances = createAsyncThunk(\"account/getBalances\", async ({ address, networkID, provider }: IGetBalances): Promise<IAccountBalances> => {\n    const addresses = getAddresses(networkID);\n\n    const ssabContract = new ethers.Contract(addresses.SNORO_ADDRESS, SSabTokenContract, provider);\n    const ssabBalance = await ssabContract.balanceOf(address);\n    const sabContract = new ethers.Contract(addresses.NORO_ADDRESS, SabTokenContract, provider);\n    const sabBalance = await sabContract.balanceOf(address);\n    const wmemoContract = new ethers.Contract(addresses.WSNORO_ADDRESS, wMemoTokenContract, provider);\n    const wmemoBalance = await wmemoContract.balanceOf(address);\n\n    return {\n        balances: {\n            ssab: ethers.utils.formatUnits(ssabBalance, \"gwei\"),\n            sab: ethers.utils.formatUnits(sabBalance, \"gwei\"),\n            wmemo: ethers.utils.formatEther(wmemoBalance),\n        },\n    };\n});\n\ninterface ILoadAccountDetails {\n    address: string;\n    networkID: Networks;\n    provider: StaticJsonRpcProvider | JsonRpcProvider;\n}\n\ninterface IUserAccountDetails {\n    balances: {\n        sab: string;\n        ssab: string;\n        wmemo: string;\n    };\n    staking: {\n        sab: number;\n        ssab: number;\n    };\n    wrapping: {\n        ssab: number;\n    };\n}\n\nexport const loadAccountDetails = createAsyncThunk(\"account/loadAccountDetails\", async ({ networkID, provider, address }: ILoadAccountDetails): Promise<IUserAccountDetails> => {\n    let sabBalance = 0;\n    let ssabBalance = 0;\n\n    let wmemoBalance = 0;\n    let memoWmemoAllowance = 0;\n\n    let stakeAllowance = 0;\n    let unstakeAllowance = 0;\n\n    const addresses = getAddresses(networkID);\n\n    if (addresses.NORO_ADDRESS) {\n        const sabContract = new ethers.Contract(addresses.NORO_ADDRESS, SabTokenContract, provider);\n        sabBalance = await sabContract.balanceOf(address);\n        stakeAllowance = await sabContract.allowance(address, addresses.STAKING_HELPER_ADDRESS);\n    }\n\n    if (addresses.SNORO_ADDRESS) {\n        const ssabContract = new ethers.Contract(addresses.SNORO_ADDRESS, SSabTokenContract, provider);\n        ssabBalance = await ssabContract.balanceOf(address);\n        unstakeAllowance = await ssabContract.allowance(address, addresses.STAKING_ADDRESS);\n\n        if (addresses.WSNORO_ADDRESS) {\n            memoWmemoAllowance = await ssabContract.allowance(address, addresses.WSNORO_ADDRESS);\n        }\n    }\n\n    if (addresses.WSNORO_ADDRESS) {\n        const wmemoContract = new ethers.Contract(addresses.WSNORO_ADDRESS, wMemoTokenContract, provider);\n        wmemoBalance = await wmemoContract.balanceOf(address);\n    }\n\n    return {\n        balances: {\n            ssab: ethers.utils.formatUnits(ssabBalance, \"gwei\"),\n            sab: ethers.utils.formatUnits(sabBalance, \"gwei\"),\n            wmemo: ethers.utils.formatEther(wmemoBalance),\n        },\n        staking: {\n            sab: Number(stakeAllowance),\n            ssab: Number(unstakeAllowance),\n        },\n        wrapping: {\n            ssab: Number(memoWmemoAllowance),\n        },\n    };\n});\n\ninterface ICalcUserBondDetails {\n    address: string;\n    bond: Bond;\n    provider: StaticJsonRpcProvider | JsonRpcProvider;\n    networkID: Networks;\n}\n\nexport interface IUserBondDetails {\n    allowance: number;\n    balance: number;\n    allowanceSab: number;\n    balanceSab: number;\n    avaxBalance: number;\n    interestDue: number;\n    bondMaturationBlock: number;\n    pendingPayout: number; //Payout formatted in gwei.\n}\n\nexport const calculateUserBondDetails = createAsyncThunk(\"account/calculateUserBondDetails\", async ({ address, bond, networkID, provider }: ICalcUserBondDetails) => {\n    if (!address) {\n        return new Promise<any>(resevle => {\n            resevle({\n                bond: \"\",\n                displayName: \"\",\n                bondIconSvg: \"\",\n                isLP: false,\n                allowance: 0,\n                balance: 0,\n                allowanceSab: 0,\n                balanceSab: 0,\n                interestDue: 0,\n                bondMaturationBlock: 0,\n                pendingPayout: \"\",\n                avaxBalance: 0,\n            });\n        });\n    }\n\n    const bondContract = bond.getContractForBond(networkID, provider);\n    const reserveContract = bond.getContractForReserve(networkID, provider);\n\n    let interestDue, pendingPayout, bondMaturationBlock;\n\n    const bondDetails = await bondContract.bondInfo(address);\n    interestDue = bondDetails.payout / Math.pow(10, 9);\n    bondMaturationBlock = Number(bondDetails.vesting) + Number(bondDetails.lastTime);\n    pendingPayout = await bondContract.pendingPayoutFor(address);\n\n    let allowance,\n        allowanceSab,\n        balanceSab = \"0\",\n        balance = \"0\";\n\n    allowance = await reserveContract.allowance(address, bond.getAddressForBond(networkID));\n    balance = await reserveContract.balanceOf(address);\n    const balanceVal = Number(balance) / Math.pow(10, bond.reserveDecimal);\n\n    const addresses = getAddresses(networkID);\n\n    if (addresses.NORO_ADDRESS) {\n        const sabContract = new ethers.Contract(addresses.NORO_ADDRESS, SabTokenContract, provider);\n        balanceSab = await sabContract.balanceOf(address);\n        allowanceSab = await sabContract.allowance(address, bond.getAddressForBond(networkID));\n    }\n\n    const balanceSabVal = ethers.utils.formatUnits(balanceSab, \"gwei\");\n\n    const avaxBalance = await provider.getSigner().getBalance();\n    const avaxVal = ethers.utils.formatEther(avaxBalance);\n\n    const pendingPayoutVal = ethers.utils.formatUnits(pendingPayout, \"gwei\");\n\n    return {\n        bond: bond.name,\n        displayName: bond.displayName,\n        bondIconSvg: bond.bondIconSvg,\n        isLP: bond.isLP,\n        allowance: Number(allowance),\n        balance: Number(balanceVal),\n        allowanceSab: Number(allowanceSab),\n        balanceSab: Number(balanceSabVal),\n        avaxBalance: Number(avaxVal),\n        interestDue,\n        bondMaturationBlock,\n        pendingPayout: Number(pendingPayoutVal),\n    };\n});\n\ninterface ICalcUserTokenDetails {\n    address: string;\n    token: IToken;\n    provider: StaticJsonRpcProvider | JsonRpcProvider;\n    networkID: Networks;\n}\n\nexport interface IUserTokenDetails {\n    allowance: number;\n    balance: number;\n    isAvax?: boolean;\n}\n\nexport const calculateUserTokenDetails = createAsyncThunk(\"account/calculateUserTokenDetails\", async ({ address, token, networkID, provider }: ICalcUserTokenDetails) => {\n    if (!address) {\n        return new Promise<any>(resevle => {\n            resevle({\n                token: \"\",\n                address: \"\",\n                img: \"\",\n                allowance: 0,\n                balance: 0,\n            });\n        });\n    }\n\n    if (token.isAvax) {\n        const avaxBalance = await provider.getSigner().getBalance();\n        const avaxVal = ethers.utils.formatEther(avaxBalance);\n\n        return {\n            token: token.name,\n            tokenIcon: token.img,\n            balance: Number(avaxVal),\n            isAvax: true,\n        };\n    }\n\n    const addresses = getAddresses(networkID);\n\n    const tokenContract = new ethers.Contract(token.address, MimTokenContract, provider);\n\n    let allowance,\n        balance = \"0\";\n\n    allowance = await tokenContract.allowance(address, addresses.ZAPIN_ADDRESS);\n    balance = await tokenContract.balanceOf(address);\n\n    const balanceVal = Number(balance) / Math.pow(10, token.decimals);\n\n    return {\n        token: token.name,\n        address: token.address,\n        img: token.img,\n        allowance: Number(allowance),\n        balance: Number(balanceVal),\n    };\n});\n\nexport interface IAccountSlice {\n    bonds: { [key: string]: IUserBondDetails };\n    balances: {\n        ssab: string;\n        sab: string;\n        wmemo: string;\n    };\n    loading: boolean;\n    staking: {\n        sab: number;\n        ssab: number;\n    };\n    wrapping: {\n        ssab: number;\n    };\n    tokens: { [key: string]: IUserTokenDetails };\n}\n\nconst initialState: IAccountSlice = {\n    loading: true,\n    bonds: {},\n    balances: { ssab: \"\", sab: \"\", wmemo: \"\" },\n    staking: { sab: 0, ssab: 0 },\n    wrapping: { ssab: 0 },\n    tokens: {},\n};\n\nconst accountSlice = createSlice({\n    name: \"account\",\n    initialState,\n    reducers: {\n        fetchAccountSuccess(state, action) {\n            setAll(state, action.payload);\n        },\n    },\n    extraReducers: builder => {\n        builder\n            .addCase(loadAccountDetails.pending, state => {\n                state.loading = true;\n            })\n            .addCase(loadAccountDetails.fulfilled, (state, action) => {\n                setAll(state, action.payload);\n                state.loading = false;\n            })\n            .addCase(loadAccountDetails.rejected, (state, { error }) => {\n                state.loading = false;\n                console.log(error);\n            })\n            .addCase(getBalances.pending, state => {\n                state.loading = true;\n            })\n            .addCase(getBalances.fulfilled, (state, action) => {\n                setAll(state, action.payload);\n                state.loading = false;\n            })\n            .addCase(getBalances.rejected, (state, { error }) => {\n                state.loading = false;\n                console.log(error);\n            })\n            .addCase(calculateUserBondDetails.pending, (state, action) => {\n                state.loading = true;\n            })\n            .addCase(calculateUserBondDetails.fulfilled, (state, action) => {\n                if (!action.payload) return;\n                const bond = action.payload.bond;\n                state.bonds[bond] = action.payload;\n                state.loading = false;\n            })\n            .addCase(calculateUserBondDetails.rejected, (state, { error }) => {\n                state.loading = false;\n                console.log(error);\n            })\n            .addCase(calculateUserTokenDetails.pending, (state, action) => {\n                state.loading = true;\n            })\n            .addCase(calculateUserTokenDetails.fulfilled, (state, action) => {\n                if (!action.payload) return;\n                const token = action.payload.token;\n                state.tokens[token] = action.payload;\n                state.loading = false;\n            })\n            .addCase(calculateUserTokenDetails.rejected, (state, { error }) => {\n                state.loading = false;\n                console.log(error);\n            });\n    },\n});\n\nexport default accountSlice.reducer;\n\nexport const { fetchAccountSuccess } = accountSlice.actions;\n\nconst baseInfo = (state: RootState) => state.account;\n\nexport const getAccountState = createSelector(baseInfo, account => account);\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport interface IPendingTxn {\n    readonly txnHash: string;\n    readonly text: string;\n    readonly type: string;\n}\n\nconst initialState: Array<IPendingTxn> = [];\n\nconst pendingTxnsSlice = createSlice({\n    name: \"pendingTransactions\",\n    initialState,\n    reducers: {\n        fetchPendingTxns(state, action: PayloadAction<IPendingTxn>) {\n            state.push(action.payload);\n        },\n        clearPendingTxn(state, action: PayloadAction<string>) {\n            const target = state.find(x => x.txnHash === action.payload);\n            if (target) {\n                state.splice(state.indexOf(target), 1);\n            }\n        },\n    },\n});\n\nexport const getStakingTypeText = (action: string) => {\n    return action.toLowerCase() === \"stake\" ? \"Staking SAB\" : \"Unstaking SSAB\";\n};\n\nexport const getWrappingTypeText = (isWrap: boolean) => {\n    return isWrap ? \"Wrap SSAB\" : \"Unwrap wMEMO\";\n};\n\nexport const isPendingTxn = (pendingTransactions: IPendingTxn[], type: string) => {\n    return pendingTransactions.map(x => x.type).includes(type);\n};\n\nexport const txnButtonText = (pendingTransactions: IPendingTxn[], type: string, defaultText: string) => {\n    return isPendingTxn(pendingTransactions, type) ? \"Pending...\" : defaultText;\n};\n\nexport const { fetchPendingTxns, clearPendingTxn } = pendingTxnsSlice.actions;\n\nexport default pendingTxnsSlice.reducer;\n","import { StaticJsonRpcProvider } from \"@ethersproject/providers\";\nimport { Networks } from \"../constants/blockchain\";\nimport { BondingCalcContract } from \"../abi\";\nimport { ethers } from \"ethers\";\nimport { getAddresses } from \"../constants/addresses\";\n\nexport function getBondCalculator(networkID: Networks, provider: StaticJsonRpcProvider) {\n    const addresses = getAddresses(networkID);\n    return new ethers.Contract(addresses.TIME_BONDING_CALC_ADDRESS, BondingCalcContract, provider);\n}\n","import { Networks } from \"../../constants/blockchain\";\n\nexport enum BondType {\n    StableAsset,\n    LP,\n}\n\nexport interface BondAddresses {\n    reserveAddress: string;\n    bondAddress: string;\n}\n\nexport interface NetworkAddresses {\n    [Networks.AVAX_MAIN]: BondAddresses;\n    [Networks.AVAX_TEST]: BondAddresses;\n}\n","import { BondType, NetworkAddresses } from \"./constants\";\nimport { Networks } from \"../../constants/blockchain\";\nimport { ContractInterface, Contract } from \"ethers\";\nimport React from \"react\";\nimport { JsonRpcSigner, StaticJsonRpcProvider } from \"@ethersproject/providers\";\nimport { getTokenPrice } from \"../token-price\";\n\nexport interface BondOpts {\n    readonly name: string; // Internal name used for references\n    readonly displayName: string; // Displayname on UI\n    readonly bondIconSvg: string; //  SVG path for icons\n    readonly bondContractABI: ContractInterface; // ABI for contract\n    readonly networkAddrs: NetworkAddresses; // Mapping of network --> Addresses\n    readonly bondToken: string; // Unused, but native token to buy the bond.\n    readonly reserveDecimal: number;\n}\n\nexport abstract class Bond {\n    public readonly name: string;\n    public readonly displayName: string;\n    public readonly type: BondType;\n    public readonly bondIconSvg: string;\n    public readonly bondContractABI: ContractInterface; // Bond ABI\n    public readonly networkAddrs: NetworkAddresses;\n    public readonly bondToken: string;\n    public readonly lpUrl?: string;\n    public readonly tokensInStrategy?: string;\n    public readonly reserveDecimal: number;\n\n    // The following two fields will differ on how they are set depending on bond type\n    public abstract isLP: boolean;\n    protected abstract reserveContractAbi: ContractInterface; // Token ABI\n    public abstract displayUnits: string;\n\n    // Async method that returns a Promise\n    public abstract getTreasuryBalance(networkID: Networks, provider: StaticJsonRpcProvider): Promise<number>;\n    public abstract getTokenAmount(networkID: Networks, provider: StaticJsonRpcProvider): Promise<number>;\n    public abstract getTimeAmount(networkID: Networks, provider: StaticJsonRpcProvider): Promise<number>;\n\n    constructor(type: BondType, bondOpts: BondOpts) {\n        this.name = bondOpts.name;\n        this.displayName = bondOpts.displayName;\n        this.type = type;\n        this.bondIconSvg = bondOpts.bondIconSvg;\n        this.bondContractABI = bondOpts.bondContractABI;\n        this.networkAddrs = bondOpts.networkAddrs;\n        this.bondToken = bondOpts.bondToken;\n        this.reserveDecimal = bondOpts.reserveDecimal;\n    }\n\n    public getAddressForBond(networkID: Networks) {\n        return this.networkAddrs[networkID].bondAddress;\n    }\n\n    public getContractForBond(networkID: Networks, provider: StaticJsonRpcProvider | JsonRpcSigner) {\n        const bondAddress = this.getAddressForBond(networkID);\n        return new Contract(bondAddress, this.bondContractABI, provider);\n    }\n\n    public getAddressForReserve(networkID: Networks) {\n        return this.networkAddrs[networkID].reserveAddress;\n    }\n\n    public getContractForReserve(networkID: Networks, provider: StaticJsonRpcProvider | JsonRpcSigner) {\n        const reserveAddress = this.getAddressForReserve(networkID);\n        return new Contract(reserveAddress, this.reserveContractAbi, provider);\n    }\n\n    protected getTokenPrice(): number {\n        return getTokenPrice(this.bondToken);\n    }\n}\n","import { ContractInterface } from \"ethers\";\nimport { Bond, BondOpts } from \"./bond\";\nimport { BondType } from \"./constants\";\nimport { Networks } from \"../../constants/blockchain\";\nimport { StaticJsonRpcProvider } from \"@ethersproject/providers\";\nimport { getAddresses } from \"../../constants/addresses\";\nimport { BigNumber } from \"ethers\";\n\nexport interface StableBondOpts extends BondOpts {\n    readonly reserveContractAbi: ContractInterface;\n    readonly tokensInStrategy?: string;\n}\n\nexport class StableBond extends Bond {\n    readonly isLP = false;\n    readonly reserveContractAbi: ContractInterface;\n    readonly displayUnits: string;\n    readonly tokensInStrategy?: string;\n\n    constructor(stableBondOpts: StableBondOpts) {\n        super(BondType.StableAsset, stableBondOpts);\n\n        // For stable bonds the display units are the same as the actual token\n        this.displayUnits = stableBondOpts.displayName;\n        this.reserveContractAbi = stableBondOpts.reserveContractAbi;\n        this.tokensInStrategy = stableBondOpts.tokensInStrategy;\n    }\n\n    public async getTreasuryBalance(networkID: Networks, provider: StaticJsonRpcProvider) {\n        const addresses = getAddresses(networkID);\n        const token = this.getContractForReserve(networkID, provider);\n        let tokenAmount = await token.balanceOf(addresses.TREASURY_ADDRESS);\n        if (this.tokensInStrategy) {\n            tokenAmount = BigNumber.from(tokenAmount).add(BigNumber.from(this.tokensInStrategy)).toString();\n        }\n        return tokenAmount / Math.pow(10, this.reserveDecimal);\n    }\n\n    public async getTokenAmount(networkID: Networks, provider: StaticJsonRpcProvider) {\n        return this.getTreasuryBalance(networkID, provider);\n    }\n\n    public getTimeAmount(networkID: Networks, provider: StaticJsonRpcProvider) {\n        return new Promise<number>(reserve => reserve(0));\n    }\n}\n\n// These are special bonds that have different valuation methods\nexport interface CustomBondOpts extends StableBondOpts {}\n\nexport class CustomBond extends StableBond {\n    constructor(customBondOpts: CustomBondOpts) {\n        super(customBondOpts);\n\n        this.getTreasuryBalance = async (networkID: Networks, provider: StaticJsonRpcProvider) => {\n            const tokenAmount = await super.getTreasuryBalance(networkID, provider);\n            const tokenPrice = this.getTokenPrice();\n\n            return tokenAmount * tokenPrice;\n        };\n    }\n}\n","export default __webpack_public_path__ + \"static/media/BEND.da1736de.svg\";","export default __webpack_public_path__ + \"static/media/WAVAX.f39a652e.png\";","import { Networks } from \"../../constants/blockchain\";\nimport { LPBond, CustomLPBond } from \"./lp-bond\";\nimport { StableBond, CustomBond } from \"./stable-bond\";\nimport { getAddresses } from \"../../constants\";\n\nimport BendIcon from \"../../assets/tokens/BEND.svg\";\nimport AvaxIcon from \"../../assets/tokens/WAVAX.png\";\n\nimport { MimBondContract, WavaxBondContract, MimTokenContract, WavaxTokenContract } from \"../../abi\";\n\nconst addressesFuji = getAddresses(43113);\nconst addressesAvax = getAddresses(43114);\n\nexport const bend = new CustomBond({\n    name: \"bend\",\n    displayName: \"BEND\",\n    bondToken: \"BEND\",\n    bondIconSvg: BendIcon,\n    bondContractABI: MimBondContract,\n    reserveContractAbi: MimTokenContract,\n    networkAddrs: {\n        [Networks.AVAX_MAIN]: {\n            bondAddress: addressesAvax.BONDEPOSITORY_BEND,\n            reserveAddress: addressesAvax.BEND_ADDRESS,\n        },\n        [Networks.AVAX_TEST]: {\n            bondAddress: addressesFuji.BONDEPOSITORY_BEND,\n            reserveAddress: addressesFuji.BEND_ADDRESS,\n        },\n    },\n    reserveDecimal: 3,\n    // tokensInStrategy: \"60500000000000000000000000\",\n});\n\nexport const wavax = new CustomBond({\n    name: \"wavax\",\n    displayName: \"wAVAX\",\n    bondToken: \"AVAX\",\n    bondIconSvg: AvaxIcon,\n    bondContractABI: WavaxBondContract,\n    reserveContractAbi: WavaxTokenContract,\n    networkAddrs: {\n        [Networks.AVAX_MAIN]: {\n            bondAddress: addressesAvax.BONDEPOSITORY_AVAX,\n            reserveAddress: addressesAvax.WAVAX_ADDRESS,\n        },\n        [Networks.AVAX_TEST]: {\n            bondAddress: addressesFuji.BONDEPOSITORY_AVAX,\n            reserveAddress: addressesFuji.WAVAX_ADDRESS,\n        },\n    },\n    reserveDecimal: 18,\n    // tokensInStrategy: \"756916000000000000000000\",\n});\n\nexport default [bend, wavax];\n","import { Color } from \"@material-ui/lab/Alert\";\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport type Message = IMessage & {\n    severity: Color;\n};\n\nexport interface MessagesState {\n    message: Message | null;\n}\n\ninterface IMessage {\n    text: string;\n    error?: any;\n}\n\n// Adds a message to the store\nconst createMessage = function (state: MessagesState, severity: Color, text: IMessage) {\n    const message: Message = {\n        severity,\n        ...text,\n    };\n    state.message = message;\n};\nconst initialState: MessagesState = {\n    message: null,\n};\nconst messagesSlice = createSlice({\n    name: \"messages\",\n    initialState,\n    reducers: {\n        // Creates an error message\n        error(state, action: PayloadAction<IMessage>) {\n            createMessage(state, \"error\", action.payload);\n        },\n        // Creates an information message\n        info(state, action: PayloadAction<IMessage>) {\n            createMessage(state, \"info\", action.payload);\n        },\n        warning(state, action: PayloadAction<IMessage>) {\n            createMessage(state, \"warning\", action.payload);\n        },\n        success(state, action: PayloadAction<IMessage>) {\n            createMessage(state, \"success\", action.payload);\n        },\n        // Closes a message\n        close(state) {\n            state.message = null;\n        },\n    },\n});\n\nexport const { error, info, close, warning, success } = messagesSlice.actions;\n\nexport default messagesSlice.reducer;\n","import { JsonRpcProvider } from \"@ethersproject/providers\";\nimport { utils } from \"ethers\";\n\nconst GAS = \"5\";\n\nexport const getGasPrice = async (provider: JsonRpcProvider) => {\n    const gasPrice = await provider.getGasPrice();\n    const convertGas = utils.parseUnits(GAS, \"gwei\");\n    return gasPrice.add(convertGas);\n};\n","import { Dispatch } from \"redux\";\nimport { error } from \"../store/slices/messages-slice\";\nimport { messages } from \"../constants/messages\";\n\nexport const metamaskErrorWrap = (err: any, dispatch: Dispatch) => {\n    let text = messages.something_wrong;\n\n    if (err.code && err.code === -32603) {\n        if (err.message.indexOf(\"ds-math-sub-underflow\") >= 0) {\n            text = \"You may be trying to bond more than your balance! Error code: 32603. Message: ds-math-sub-underflow\";\n        }\n\n        if (err.data && err.data.message) {\n            text = err.data.message.includes(\":\") ? err.data.message.split(\":\")[1].trim() : err.data.data || err.data.message;\n        }\n\n        if (err.data && err.data.message && err.data.message.includes(\"gas required exceeds allowance\")) {\n            text = \"Insufficient balance to make a transaction\";\n        }\n\n        if (err.data && err.data.message && err.data.message.includes(\"Bond too small\")) {\n            text = \"Bond too small\";\n        }\n    }\n\n    if (err.code && err.code === 4001) {\n        if (err.message.includes(\"User denied transaction signature\")) {\n            text = \"User denied transaction signature\";\n        }\n    }\n\n    return dispatch(error({ text, error: err }));\n};\n","import { ethers, constants } from \"ethers\";\nimport { getTokenPrice } from \"../../helpers\";\nimport { calculateUserBondDetails, getBalances } from \"./account-slice\";\nimport { SabTokenContract, SSabTokenContract } from \"../../abi\";\nimport { getAddresses } from \"../../constants\";\nimport { fetchPendingTxns, clearPendingTxn } from \"./pending-txns-slice\";\nimport { createSlice, createSelector, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { JsonRpcProvider, StaticJsonRpcProvider } from \"@ethersproject/providers\";\nimport { fetchAccountSuccess } from \"./account-slice\";\nimport { Bond } from \"../../helpers/bond/bond\";\nimport { Networks } from \"../../constants/blockchain\";\nimport { getBondCalculator } from \"../../helpers/bond-calculator\";\nimport { RootState } from \"../store\";\nimport { wavax, bend } from \"../../helpers/bond\";\nimport { error, warning, success, info } from \"../slices/messages-slice\";\nimport { messages } from \"../../constants/messages\";\nimport { getGasPrice } from \"../../helpers/get-gas-price\";\nimport { metamaskErrorWrap } from \"../../helpers/metamask-error-wrap\";\nimport { sleep } from \"../../helpers\";\nimport { BigNumber } from \"ethers\";\nimport { IAllBondData } from \"src/hooks/bonds\";\nimport { getMarketPrice, getAvaxReserves } from \"../../helpers/get-market-price\";\nimport { LpReserveContract } from \"../../abi\";\n\ninterface IChangeApproval {\n    bond: Bond;\n    provider: StaticJsonRpcProvider | JsonRpcProvider;\n    networkID: Networks;\n    address: string;\n}\n\nexport const changeApproval = createAsyncThunk(\"bonding/changeApproval\", async ({ bond, provider, networkID, address }: IChangeApproval, { dispatch }) => {\n    if (!provider) {\n        dispatch(warning({ text: messages.please_connect_wallet }));\n        return;\n    }\n\n    const signer = provider.getSigner();\n    const reserveContract = bond.getContractForReserve(networkID, signer);\n\n    let approveTx;\n    try {\n        const gasPrice = await getGasPrice(provider);\n        const bondAddr = bond.getAddressForBond(networkID);\n        approveTx = await reserveContract.approve(bondAddr, constants.MaxUint256, { gasPrice });\n        dispatch(\n            fetchPendingTxns({\n                txnHash: approveTx.hash,\n                text: \"Approving \" + bond.displayName,\n                type: \"approve_\" + bond.name,\n            }),\n        );\n        await approveTx.wait();\n        dispatch(success({ text: messages.tx_successfully_send }));\n    } catch (err: any) {\n        metamaskErrorWrap(err, dispatch);\n    } finally {\n        if (approveTx) {\n            dispatch(clearPendingTxn(approveTx.hash));\n        }\n    }\n\n    await sleep(2);\n\n    let allowance = \"0\";\n\n    allowance = await reserveContract.allowance(address, bond.getAddressForBond(networkID));\n\n    return dispatch(\n        fetchAccountSuccess({\n            bonds: {\n                [bond.name]: {\n                    allowance: Number(allowance),\n                },\n            },\n        }),\n    );\n});\n\nexport const changeSabApproval = createAsyncThunk(\"bonding/changeSabApproval\", async ({ bond, provider, networkID, address }: IChangeApproval, { dispatch }) => {\n    if (!provider) {\n        dispatch(warning({ text: messages.please_connect_wallet }));\n        return;\n    }\n    const addresses = getAddresses(networkID);\n\n    const signer = provider.getSigner();\n    const sabContract = new ethers.Contract(addresses.NORO_ADDRESS, SabTokenContract, signer);\n\n    let approveTx;\n    try {\n        const gasPrice = await getGasPrice(provider);\n        const bondAddr = bond.getAddressForBond(networkID);\n        approveTx = await sabContract.approve(bondAddr, constants.MaxUint256, { gasPrice });\n\n        const text = \"Approve Sab\";\n        const pendingTxnType = \"approve_sab\";\n\n        dispatch(fetchPendingTxns({ txnHash: approveTx.hash, text, type: pendingTxnType }));\n        await approveTx.wait();\n        dispatch(success({ text: messages.tx_successfully_send }));\n    } catch (err: any) {\n        return metamaskErrorWrap(err, dispatch);\n    } finally {\n        if (approveTx) {\n            dispatch(clearPendingTxn(approveTx.hash));\n        }\n    }\n\n    await sleep(2);\n\n    const sabAllowance = await sabContract.allowance(address, bond.getAddressForBond(networkID));\n\n    return dispatch(\n        fetchAccountSuccess({\n            bonds: {\n                [bond.name]: {\n                    allowanceSab: Number(sabAllowance),\n                },\n            },\n        }),\n    );\n});\n\ninterface ICalcBondDetails {\n    bond: IAllBondData;\n    value: string | null;\n    provider: StaticJsonRpcProvider | JsonRpcProvider;\n    networkID: Networks;\n}\n\nexport interface IBondDetails {\n    bond: string;\n    bondDiscount: number;\n    bondQuote: number;\n    purchased: number;\n    vestingTerm: number;\n    maxBondPrice: number;\n    bondPrice: number;\n    marketPrice: number;\n    maxBondPriceToken: number;\n}\n\nexport const calcBondDetails = createAsyncThunk(\"bonding/calcBondDetails\", async ({ bond, value, provider, networkID }: ICalcBondDetails, { dispatch }) => {\n    if (!value) {\n        value = \"0\";\n    }\n\n    const amountInWei = ethers.utils.parseEther(value);\n    // console.log(\"Bond value in wei (amountInWei) : \", amountInWei);\n\n    let bondPrice = 0,\n        bondDiscount = 0,\n        valuation = 0,\n        bondQuote = 0;\n\n    const addresses = getAddresses(networkID);\n\n    const bondContract = bond.getContractForBond(networkID, provider);\n    const bondCalcContract = getBondCalculator(networkID, provider);\n\n    const terms = await bondContract.terms();\n    const maxBondPrice = (await bondContract.maxPayout()) / Math.pow(10, 9);\n\n    let marketPrice = await getMarketPrice(networkID, provider);\n\n    const avaxPrice = getTokenPrice(\"AVAX\");\n    const ethPrice = getTokenPrice(\"ETH\");\n    const bendPrice = getTokenPrice(\"BEND\");\n    let reserveDecimal = bond.reserveDecimal;\n\n    try {\n        bondPrice = await bondContract.bondPriceInUSD();\n\n        bondDiscount = (marketPrice * Math.pow(10, reserveDecimal) - bondPrice) / (marketPrice * Math.pow(10, reserveDecimal));\n    } catch (e) {\n        console.log(\"error getting bondPriceInUSD\", e);\n    }\n\n    let maxBondPriceToken = 0;\n    const maxBodValue = ethers.utils.parseEther(\"1\");\n    let maxBondQuote = 0;\n\n    if (bond.isLP) {\n        valuation = await bondCalcContract.valuation(bond.getAddressForReserve(networkID), amountInWei);\n        bondQuote = await bondContract.payoutFor(valuation);\n        bondQuote = bondQuote / Math.pow(10, 9);\n\n        const maxValuation = await bondCalcContract.valuation(bond.getAddressForReserve(networkID), maxBodValue);\n        maxBondQuote = await bondContract.payoutFor(maxValuation);\n        maxBondPriceToken = maxBondPrice / (maxBondQuote * Math.pow(10, -9));\n    } else {\n        bondQuote = await bondContract.payoutFor(amountInWei);\n        bondQuote = bondQuote / Math.pow(10, 18);\n\n        maxBondQuote = await bondContract.payoutFor(maxBodValue);\n        if (bond.name === wavax.name) {\n            maxBondQuote = maxBondQuote * avaxPrice;\n        }\n        maxBondPriceToken = maxBondPrice / (maxBondQuote * Math.pow(10, -18));\n\n        if (bond.name === wavax.name) {\n            bondQuote = bondQuote * avaxPrice;\n        } else if (bond.name === bend.name) {\n            bondQuote = bondQuote * 0.94 * 0.94 * bendPrice;\n        }\n    }\n\n    // Calculate bonds purchased\n    const token = bond.getContractForReserve(networkID, provider);\n    let purchased = await token.balanceOf(addresses.TREASURY_ADDRESS);\n\n    if (bond.isLP) {\n        const assetAddress = bond.getAddressForReserve(networkID);\n        const markdown = await bondCalcContract.markdown(assetAddress);\n\n        purchased = await bondCalcContract.valuation(assetAddress, purchased);\n        purchased = (markdown / Math.pow(10, 18)) * (purchased / Math.pow(10, 9));\n    } else {\n        if (bond.tokensInStrategy) {\n            purchased = BigNumber.from(purchased).add(BigNumber.from(bond.tokensInStrategy)).toString();\n        }\n        purchased = purchased / Math.pow(10, reserveDecimal);\n\n        if (bond.name === wavax.name) {\n            const avaxReserves = await getAvaxReserves(networkID, provider);\n            console.log(avaxReserves);\n\n            purchased = avaxReserves * avaxPrice;\n        } else if (bond.name === bend.name) {\n            purchased = purchased * bendPrice;\n        }\n    }\n\n    return {\n        bond: bond.name,\n        bondDiscount,\n        bondQuote,\n        purchased,\n        vestingTerm: Number(terms.vestingTerm),\n        maxBondPrice,\n        bondPrice: bondPrice / Math.pow(10, reserveDecimal),\n        marketPrice,\n        maxBondPriceToken,\n    };\n});\n\nexport interface IBondWithdrawDetails {\n    bond: string;\n    bondDiscount: number;\n    withdrawQuote: number;\n    withdrawFee: number;\n    maxWithdraw: number;\n    bondPrice: number;\n    marketPrice: number;\n    purchased: number;\n}\n\nexport const calcBondWithDrawDetails = createAsyncThunk(\"bonding/calcBondDetails\", async ({ bond, value, provider, networkID }: ICalcBondDetails, { dispatch }) => {\n    if (!value) {\n        value = \"0\";\n    }\n\n    const amountInWei = ethers.utils.parseEther(value);\n\n    let bondPrice = 0,\n        bondDiscount = 0,\n        withdrawQuote = 0,\n        withdrawFee = 0,\n        maxWithdraw = 0;\n\n    const addresses = getAddresses(networkID);\n\n    const bondContract = bond.getContractForBond(networkID, provider);\n    const bondCalcContract = getBondCalculator(networkID, provider);\n\n    const terms = await bondContract.terms();\n\n    let marketPrice = await getMarketPrice(networkID, provider);\n\n    // const mimPrice = getTokenPrice(\"MIM\");\n    // marketPrice = (marketPrice / Math.pow(10, 9)) * mimPrice;\n    const avaxPrice = getTokenPrice(\"AVAX\");\n    const ethPrice = getTokenPrice(\"ETH\");\n\n    try {\n        bondPrice = await bondContract.bondPriceInUSD();\n\n        // if (bond.name === wavax.name) {\n        //     const avaxPrice = getTokenPrice(\"AVAX\");\n        //     bondPrice = bondPrice * avaxPrice;\n        // }\n\n        bondDiscount = (marketPrice * Math.pow(10, bond.reserveDecimal) - bondPrice) / (marketPrice * Math.pow(10, bond.reserveDecimal));\n    } catch (e) {\n        console.log(\"error getting bondPriceInUSD\", e);\n    }\n\n    withdrawQuote = parseFloat(value) * (1 - bondDiscount);\n    let withdrawInGwei = Number(amountInWei) / Math.pow(10, 18);\n\n    if (bond.name === wavax.name) {\n        withdrawQuote = withdrawQuote / avaxPrice;\n    }\n\n    withdrawFee = withdrawQuote * 0.1;\n    withdrawQuote -= withdrawFee;\n\n    maxWithdraw = bond.balanceSab * 0.1;\n\n    if (!!value && withdrawInGwei > maxWithdraw) {\n        dispatch(error({ text: messages.try_withdraw_more(maxWithdraw.toFixed(2).toString()) }));\n    }\n\n    // Calculate bonds purchased\n    const token = bond.getContractForReserve(networkID, provider);\n    let purchased = await token.balanceOf(addresses.TREASURY_ADDRESS);\n\n    purchased = purchased / Math.pow(10, bond.reserveDecimal);\n\n    if (bond.name === wavax.name) {\n        purchased = purchased * avaxPrice;\n    }\n\n    return {\n        bond: bond.name,\n        bondDiscount,\n        withdrawQuote,\n        withdrawFee,\n        maxWithdraw,\n        bondPrice: bondPrice / Math.pow(10, bond.reserveDecimal),\n        marketPrice,\n    };\n});\n\ninterface IBondAsset {\n    value: string;\n    address: string;\n    bond: IAllBondData;\n    networkID: Networks;\n    provider: StaticJsonRpcProvider | JsonRpcProvider;\n    slippage: number;\n    useAvax: boolean;\n}\nexport const bondAsset = createAsyncThunk(\"bonding/bondAsset\", async ({ value, address, bond, networkID, provider, slippage, useAvax }: IBondAsset, { dispatch }) => {\n    const depositorAddress = address;\n    const acceptedSlippage = slippage / 100 || 0.005;\n    const valueInWei = ethers.utils.parseUnits(value, bond.reserveDecimal);\n    const signer = provider.getSigner();\n    const bondContract = bond.getContractForBond(networkID, signer);\n\n    const calculatePremium = await bondContract.bondPrice();\n    const maxPremium = Math.round(calculatePremium * (1 + acceptedSlippage));\n\n    let bondTx;\n    try {\n        const gasPrice = await getGasPrice(provider);\n\n        if (useAvax) {\n            bondTx = await bondContract.deposit(valueInWei, maxPremium, depositorAddress, { value: valueInWei, gasPrice });\n        } else {\n            bondTx = await bondContract.deposit(valueInWei, maxPremium, depositorAddress, { gasPrice });\n        }\n        dispatch(\n            fetchPendingTxns({\n                txnHash: bondTx.hash,\n                text: \"Bonding \" + bond.displayName,\n                type: \"bond_\" + bond.name,\n            }),\n        );\n        await bondTx.wait();\n        dispatch(success({ text: messages.tx_successfully_send }));\n        dispatch(info({ text: messages.your_balance_update_soon }));\n        await sleep(10);\n        await dispatch(calculateUserBondDetails({ address, bond, networkID, provider }));\n        dispatch(info({ text: messages.your_balance_updated }));\n        return;\n    } catch (err: any) {\n        return metamaskErrorWrap(err, dispatch);\n    } finally {\n        if (bondTx) {\n            dispatch(clearPendingTxn(bondTx.hash));\n        }\n    }\n});\n\nexport const bondWithdraw = createAsyncThunk(\"bonding/bondWithdraw\", async ({ value, address, bond, networkID, provider, useAvax }: IBondAsset, { dispatch }) => {\n    const withdrawAddress = address;\n    const valueInGwei = ethers.utils.parseUnits(value, \"gwei\");\n    const signer = provider.getSigner();\n    const bondContract = bond.getContractForBond(networkID, signer);\n\n    let bondWithdrawTx;\n    try {\n        const gasPrice = await getGasPrice(provider);\n\n        bondWithdrawTx = await bondContract.withdraw(withdrawAddress, valueInGwei, { gasPrice });\n\n        dispatch(\n            fetchPendingTxns({\n                txnHash: bondWithdrawTx.hash,\n                text: \"Withdrawing \" + bond.displayName,\n                type: \"withdraw_bond_\" + bond.name,\n            }),\n        );\n        await bondWithdrawTx.wait();\n        dispatch(success({ text: messages.tx_successfully_send }));\n        dispatch(info({ text: messages.your_balance_update_soon }));\n        await sleep(10);\n        await dispatch(calculateUserBondDetails({ address, bond, networkID, provider }));\n        dispatch(info({ text: messages.your_balance_updated }));\n        return;\n    } catch (err: any) {\n        return metamaskErrorWrap(err, dispatch);\n    } finally {\n        if (bondWithdrawTx) {\n            dispatch(clearPendingTxn(bondWithdrawTx.hash));\n        }\n    }\n});\n\ninterface IRedeemBond {\n    address: string;\n    bond: Bond;\n    networkID: Networks;\n    provider: StaticJsonRpcProvider | JsonRpcProvider;\n    autostake: boolean;\n}\n\nexport const redeemBond = createAsyncThunk(\"bonding/redeemBond\", async ({ address, bond, networkID, provider, autostake }: IRedeemBond, { dispatch }) => {\n    if (!provider) {\n        dispatch(warning({ text: messages.please_connect_wallet }));\n        return;\n    }\n\n    const signer = provider.getSigner();\n    const bondContract = bond.getContractForBond(networkID, signer);\n\n    let redeemTx;\n    try {\n        const gasPrice = await getGasPrice(provider);\n\n        redeemTx = await bondContract.redeem(address, autostake === true, { gasPrice });\n        const pendingTxnType = \"redeem_bond_\" + bond.name + (autostake === true ? \"_autostake\" : \"\");\n        dispatch(\n            fetchPendingTxns({\n                txnHash: redeemTx.hash,\n                text: \"Redeeming \" + bond.displayName,\n                type: pendingTxnType,\n            }),\n        );\n        await redeemTx.wait();\n        dispatch(success({ text: messages.tx_successfully_send }));\n        await sleep(0.01);\n        dispatch(info({ text: messages.your_balance_update_soon }));\n        await sleep(10);\n        await dispatch(calculateUserBondDetails({ address, bond, networkID, provider }));\n        await dispatch(getBalances({ address, networkID, provider }));\n        dispatch(info({ text: messages.your_balance_updated }));\n        return;\n    } catch (err: any) {\n        metamaskErrorWrap(err, dispatch);\n    } finally {\n        if (redeemTx) {\n            dispatch(clearPendingTxn(redeemTx.hash));\n        }\n    }\n});\n\nexport interface IBondSlice {\n    loading: boolean;\n    [key: string]: any;\n}\n\nconst initialState: IBondSlice = {\n    loading: true,\n};\n\nconst setBondState = (state: IBondSlice, payload: any) => {\n    const bond = payload.bond;\n    const newState = { ...state[bond], ...payload };\n    state[bond] = newState;\n    state.loading = false;\n};\n\nconst bondingSlice = createSlice({\n    name: \"bonding\",\n    initialState,\n    reducers: {\n        fetchBondSuccess(state, action) {\n            state[action.payload.bond] = action.payload;\n        },\n    },\n    extraReducers: builder => {\n        builder\n            .addCase(calcBondDetails.pending, state => {\n                state.loading = true;\n            })\n            .addCase(calcBondDetails.fulfilled, (state, action) => {\n                setBondState(state, action.payload);\n                state.loading = false;\n            })\n            .addCase(calcBondDetails.rejected, (state, { error }) => {\n                state.loading = false;\n                console.log(error);\n            });\n    },\n});\n\nexport default bondingSlice.reducer;\n\nexport const { fetchBondSuccess } = bondingSlice.actions;\n\nconst baseInfo = (state: RootState) => state.bonding;\n\nexport const getBondingState = createSelector(baseInfo, bonding => bonding);\n","import { ethers } from \"ethers\";\nimport { getAddresses } from \"../../constants\";\nimport { StakingContract, SSabTokenContract, SabTokenContract } from \"../../abi\";\nimport { setAll } from \"../../helpers\";\nimport { createSlice, createSelector, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { JsonRpcProvider } from \"@ethersproject/providers\";\nimport { getMarketPrice, getAvaxReserves, getTokenPrice } from \"../../helpers\";\nimport { RootState } from \"../store\";\nimport allBonds from \"../../helpers/bond\";\n\ninterface ILoadAppDetails {\n    networkID: number;\n    provider: JsonRpcProvider;\n}\n\nexport const loadAppDetails = createAsyncThunk(\n    \"app/loadAppDetails\",\n    //@ts-ignore\n    async ({ networkID, provider }: ILoadAppDetails) => {\n        const avaxPrice = getTokenPrice(\"AVAX\");\n        const bendPrice = getTokenPrice(\"BEND\");\n        const addresses = getAddresses(networkID);\n\n        const stakingContract = new ethers.Contract(addresses.STAKING_ADDRESS, StakingContract, provider);\n        const currentBlock = await provider.getBlockNumber();\n        const currentBlockTime = (await provider.getBlock(currentBlock)).timestamp;\n        const ssabContract = new ethers.Contract(addresses.SNORO_ADDRESS, SSabTokenContract, provider);\n        const sabContract = new ethers.Contract(addresses.NORO_ADDRESS, SabTokenContract, provider);\n\n        const marketPrice = await getMarketPrice(networkID, provider); // ((await getMarketPrice(networkID, provider)) / Math.pow(10, 9)) * (bendPrice * 333333.333);\n        // console.log(marketPrice);\n\n        const totalSupply = (await sabContract.totalSupply()) / Math.pow(10, 9);\n        const circSupply = (await ssabContract.circulatingSupply()) / Math.pow(10, 9);\n\n        // const stakingTVL = circSupply * marketPrice;\n        // const marketCap = totalSupply * marketPrice;\n\n        const tokenBalPromises = allBonds.map(bond => bond.getTreasuryBalance(networkID, provider));\n        const tokenBalances = await Promise.all(tokenBalPromises);\n        const treasuryBalance = tokenBalances.reduce((tokenBalance0, tokenBalance1) => tokenBalance0 + tokenBalance1, 0);\n\n        const avaxReserves = await getAvaxReserves(networkID, provider);\n        const avaxReserveValue = avaxReserves * avaxPrice;\n        treasuryBalance + avaxReserveValue;\n\n        const tokenAmountsPromises = allBonds.map(bond => bond.getTokenAmount(networkID, provider));\n        const tokenAmounts = await Promise.all(tokenAmountsPromises);\n        const rfvTreasury = tokenAmounts.reduce((tokenAmount0, tokenAmount1) => tokenAmount0 + tokenAmount1, 0);\n\n        const timeBondsAmountsPromises = allBonds.map(bond => bond.getTimeAmount(networkID, provider));\n        const timeBondsAmounts = await Promise.all(timeBondsAmountsPromises);\n        const timeAmount = timeBondsAmounts.reduce((timeAmount0, timeAmount1) => timeAmount0 + timeAmount1, 0);\n        const timeSupply = totalSupply - timeAmount;\n\n        const rfv = rfvTreasury / timeSupply;\n        // const marketPrice = rfv;\n\n        const stakingTVL = circSupply * marketPrice;\n        const marketCap = totalSupply * marketPrice;\n\n        const epoch = await stakingContract.epoch();\n        const stakingReward = epoch.distribute;\n        // const rebase = await ssabContract.rebases(epoch.number - 3);\n        // const circ = rebase.totalStakedAfter;\n        const circ1 = await ssabContract.circulatingSupply();\n        const stakingRebase = stakingReward / circ1;\n        const fiveDayRate = Math.pow(1 + stakingRebase, 5 * 3) - 1;\n        const stakingAPY = Math.pow(1 + stakingRebase, 365 * 3) - 1;\n\n        const currentIndex = await stakingContract.index();\n        const nextRebase = epoch.endTime;\n\n        const treasuryRunway = rfvTreasury / circSupply;\n        const runway = Math.log(treasuryRunway) / Math.log(1 + stakingRebase) / 3;\n        const xxx = Number(ethers.utils.formatUnits(currentIndex, \"gwei\")) / 4.5;\n\n        return {\n            currentIndex: Number(ethers.utils.formatUnits(currentIndex, \"gwei\")),\n            totalSupply,\n            marketCap,\n            currentBlock,\n            circSupply,\n            fiveDayRate,\n            treasuryBalance,\n            stakingAPY,\n            stakingTVL,\n            stakingRebase,\n            marketPrice,\n            currentBlockTime,\n            nextRebase,\n            rfv,\n            runway,\n        };\n    },\n);\n\nconst initialState = {\n    loading: true,\n};\n\nexport interface IAppSlice {\n    loading: boolean;\n    stakingTVL: number;\n    marketPrice: number;\n    marketCap: number;\n    circSupply: number;\n    currentIndex: string;\n    currentBlock: number;\n    currentBlockTime: number;\n    fiveDayRate: number;\n    treasuryBalance: number;\n    stakingAPY: number;\n    stakingRebase: number;\n    networkID: number;\n    nextRebase: number;\n    totalSupply: number;\n    rfv: number;\n    runway: number;\n}\n\nconst appSlice = createSlice({\n    name: \"app\",\n    initialState,\n    reducers: {\n        fetchAppSuccess(state, action) {\n            setAll(state, action.payload);\n        },\n    },\n    extraReducers: builder => {\n        builder\n            .addCase(loadAppDetails.pending, (state, action) => {\n                state.loading = true;\n            })\n            .addCase(loadAppDetails.fulfilled, (state, action) => {\n                setAll(state, action.payload);\n                state.loading = false;\n            })\n            .addCase(loadAppDetails.rejected, (state, { error }) => {\n                state.loading = false;\n                console.log(error);\n            });\n    },\n});\n\nconst baseInfo = (state: RootState) => state.app;\n\nexport default appSlice.reducer;\n\nexport const { fetchAppSuccess } = appSlice.actions;\n\nexport const getAppState = createSelector(baseInfo, app => app);\n","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"./loader.scss\";\n\nfunction Loader() {\n    return (\n        <div className=\"loader-wrap\">\n            <div className=\"loader-circleprogress\">\n                <CircularProgress size={100} color=\"inherit\" />\n            </div>\n        </div>\n    );\n}\n\nexport default Loader;\n","import { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport allBonds from \"../helpers/bond\";\nimport { IUserBondDetails } from \"../store/slices/account-slice\";\nimport { Bond } from \"../helpers/bond/bond\";\nimport { IBondDetails, IBondSlice, IBondWithdrawDetails } from \"../store/slices/bond-slice\";\nimport { IReduxState } from \"../store/slices/state.interface\";\n\n// Smash all the interfaces together to get the BondData Type\nexport interface IAllBondData extends Bond, IBondDetails, IUserBondDetails, IBondWithdrawDetails {}\n\nconst initialBondArray = allBonds;\n// Slaps together bond data within the account & bonding states\nfunction useBonds() {\n    const bondLoading = useSelector<IReduxState, boolean>(state => state.bonding.loading);\n    const bondState = useSelector<IReduxState, IBondSlice>(state => state.bonding);\n    const accountBondsState = useSelector<IReduxState, { [key: string]: IUserBondDetails }>(state => state.account.bonds);\n    //@ts-ignore\n    const [bonds, setBonds] = useState<IAllBondData[]>(initialBondArray);\n\n    useEffect(() => {\n        let bondDetails: IAllBondData[];\n        bondDetails = allBonds\n            .flatMap(bond => {\n                if (bondState[bond.name] && bondState[bond.name].bondDiscount) {\n                    return Object.assign(bond, bondState[bond.name]); // Keeps the object type\n                }\n                return bond;\n            })\n            .flatMap(bond => {\n                if (accountBondsState[bond.name]) {\n                    return Object.assign(bond, accountBondsState[bond.name]);\n                }\n                return bond;\n            });\n\n        const mostProfitableBonds = bondDetails.concat().sort((a, b) => {\n            return a[\"bondDiscount\"] > b[\"bondDiscount\"] ? -1 : b[\"bondDiscount\"] > a[\"bondDiscount\"] ? 1 : 0;\n        });\n\n        setBonds(mostProfitableBonds);\n    }, [bondState, accountBondsState, bondLoading]);\n\n    return { bonds, loading: bondLoading };\n}\n\nexport default useBonds;\n","export default __webpack_public_path__ + \"static/media/hamburger.f09dcc2a.svg\";","import { useState } from \"react\";\nimport { getAddresses, TOKEN_DECIMALS, DEFAULD_NETWORK } from \"../../../constants\";\nimport { useSelector } from \"react-redux\";\nimport { Link, Fade, Popper } from \"@material-ui/core\";\nimport \"./time-menu.scss\";\nimport { IReduxState } from \"../../../store/slices/state.interface\";\nimport { getTokenUrl } from \"../../../helpers\";\n\nconst addTokenToWallet = (tokenSymbol: string, tokenAddress: string) => async () => {\n    const tokenImage = getTokenUrl(tokenSymbol.toLowerCase());\n\n    if (window.ethereum) {\n        try {\n            await window.ethereum.request({\n                method: \"wallet_watchAsset\",\n                params: {\n                    type: \"ERC20\",\n                    options: {\n                        address: tokenAddress,\n                        symbol: tokenSymbol,\n                        decimals: TOKEN_DECIMALS,\n                        image: tokenImage,\n                    },\n                },\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n};\n\nfunction TimeMenu() {\n    const [anchorEl, setAnchorEl] = useState(null);\n    const isEthereumAPIAvailable = window.ethereum;\n\n    const networkID = useSelector<IReduxState, number>(state => {\n        return (state.app && state.app.networkID) || DEFAULD_NETWORK;\n    });\n\n    const addresses = getAddresses(networkID);\n\n    const SNORO_ADDRESS = addresses.SNORO_ADDRESS;\n    const NORO_ADDRESS = addresses.NORO_ADDRESS;\n\n    const handleClick = (event: any) => {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n    };\n\n    const open = Boolean(anchorEl);\n\n    return (\n        <div className=\"time-menu-root\" onMouseEnter={e => handleClick(e)} onMouseLeave={e => handleClick(e)}>\n            <div className=\"time-menu-btn\">\n                <p>NORO</p>\n            </div>\n\n            <Popper className=\"time-menu-popper\" open={open} anchorEl={anchorEl} transition>\n                {({ TransitionProps }) => (\n                    <Fade {...TransitionProps} timeout={200}>\n                        <div className=\"tooltip\">\n                            {isEthereumAPIAvailable && (\n                                <div className=\"add-tokens\">\n                                    <div className=\"divider\" />\n                                    <p className=\"add-tokens-title\">ADD TOKEN TO WALLET</p>\n                                    <div className=\"divider\" />\n                                    <div className=\"tooltip-item\" onClick={addTokenToWallet(\"NORO\", NORO_ADDRESS)}>\n                                        <p>NORO</p>\n                                    </div>\n                                    <div className=\"tooltip-item\" onClick={addTokenToWallet(\"sNORO\", SNORO_ADDRESS)}>\n                                        <p>sNORO</p>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </Fade>\n                )}\n            </Popper>\n        </div>\n    );\n}\n\nexport default TimeMenu;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useWeb3Context } from \"../../../hooks\";\nimport { DEFAULD_NETWORK } from \"../../../constants\";\nimport { IReduxState } from \"../../../store/slices/state.interface\";\nimport { IPendingTxn } from \"../../../store/slices/pending-txns-slice\";\nimport \"./connect-menu.scss\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nfunction ConnectMenu() {\n    const { connect, disconnect, connected, web3, providerChainID, checkWrongNetwork } = useWeb3Context();\n    const dispatch = useDispatch();\n    const [isConnected, setConnected] = useState(connected);\n\n    let pendingTransactions = useSelector<IReduxState, IPendingTxn[]>(state => {\n        return state.pendingTransactions;\n    });\n\n    let buttonText = \"Connect Wallet\";\n    let clickFunc: any = connect;\n    let buttonStyle = {};\n\n    if (isConnected) {\n        buttonText = \"Disconnect\";\n        clickFunc = disconnect;\n    }\n\n    if (pendingTransactions && pendingTransactions.length > 0) {\n        buttonText = `${pendingTransactions.length} Pending `;\n        clickFunc = () => {};\n    }\n\n    if (isConnected && providerChainID !== DEFAULD_NETWORK) {\n        buttonText = \"Wrong network\";\n        buttonStyle = { backgroundColor: \"rgb(255, 67, 67)\" };\n        clickFunc = () => {\n            checkWrongNetwork();\n        };\n    }\n\n    useEffect(() => {\n        setConnected(connected);\n    }, [web3, connected]);\n\n    return (\n        <div className=\"connect-button\" style={buttonStyle} onClick={clickFunc}>\n            <p>{buttonText}</p>\n            {pendingTransactions.length > 0 && (\n                <div className=\"connect-button-progress\">\n                    <CircularProgress size={15} color=\"inherit\" />\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ConnectMenu;\n","export const DRAWER_WIDTH = 280;\nexport const TRANSITION_DURATION = 969;\n","import { AppBar, Toolbar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport MenuIcon from \"../../assets/icons/hamburger.svg\";\nimport TimeMenu from \"./time-menu\";\nimport ConnectButton from \"./connect-button\";\n// import WrapButton from \"./wrap-button\";\nimport \"./header.scss\";\nimport { DRAWER_WIDTH, TRANSITION_DURATION } from \"../../constants/style\";\n\ninterface IHeader {\n    handleDrawerToggle: () => void;\n    drawe: boolean;\n}\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        [theme.breakpoints.up(\"sm\")]: {\n            width: \"100%\",\n            padding: \"20px 0 30px 0\",\n        },\n        justifyContent: \"flex-end\",\n        alignItems: \"flex-end\",\n        background: \"transparent\",\n        backdropFilter: \"none\",\n        zIndex: 10,\n    },\n    topBar: {\n        transition: theme.transitions.create(\"margin\", {\n            easing: theme.transitions.easing.sharp,\n            duration: TRANSITION_DURATION,\n        }),\n        marginLeft: DRAWER_WIDTH,\n    },\n    topBarShift: {\n        transition: theme.transitions.create(\"margin\", {\n            easing: theme.transitions.easing.easeOut,\n            duration: TRANSITION_DURATION,\n        }),\n        marginLeft: 0,\n    },\n}));\n\nfunction Header({ handleDrawerToggle, drawe }: IHeader) {\n    const classes = useStyles();\n    const isVerySmallScreen = useMediaQuery(\"(max-width: 400px)\");\n    const isWrapShow = useMediaQuery(\"(max-width: 480px)\");\n\n    return (\n        <div className={`${classes.topBar} ${!drawe && classes.topBarShift}`}>\n            <AppBar position=\"sticky\" className={classes.appBar} elevation={0}>\n                <Toolbar disableGutters className=\"dapp-topbar\">\n                    <div onClick={handleDrawerToggle} className=\"dapp-topbar-slider-btn\">\n                        <img src={MenuIcon} alt=\"\" />\n                    </div>\n                    <div className=\"dapp-topbar-btns-wrap\">\n                        {!isVerySmallScreen && <TimeMenu />}\n                        <ConnectButton />\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nexport default Header;\n","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgGithub(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: \"20pt\",\n    height: \"20pt\",\n    viewBox: \"0 0 20 20\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"surface1\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(100%,100%,100%)\",\n      fillOpacity: 1\n    },\n    d: \"M 18.609375 6.992188 C 18.609375 8.164062 18.449219 9.167969 18.125 10 C 17.800781 10.832031 17.332031 11.472656 16.714844 11.921875 C 16.09375 12.367188 15.476562 12.691406 14.859375 12.894531 C 14.242188 13.09375 13.519531 13.242188 12.683594 13.332031 C 13.273438 13.828125 13.566406 14.613281 13.566406 15.695312 L 13.566406 19.859375 L 7.128906 19.859375 L 7.128906 16.851562 C 6.636719 16.945312 6.179688 16.992188 5.765625 16.992188 C 5.347656 16.992188 4.992188 16.953125 4.699219 16.875 C 4.40625 16.796875 4.144531 16.699219 3.910156 16.574219 C 3.679688 16.449219 3.496094 16.320312 3.355469 16.179688 C 3.21875 16.042969 3.101562 15.910156 3.007812 15.785156 C 2.917969 15.664062 2.855469 15.554688 2.824219 15.464844 L 2.777344 15.324219 C 2.59375 14.890625 2.382812 14.523438 2.152344 14.214844 C 1.921875 13.90625 1.726562 13.703125 1.574219 13.609375 L 1.34375 13.472656 C 1.003906 13.195312 0.832031 13 0.832031 12.894531 C 0.832031 12.785156 0.941406 12.714844 1.15625 12.683594 L 1.433594 12.683594 C 1.804688 12.714844 2.160156 12.839844 2.5 13.054688 C 2.839844 13.273438 3.070312 13.488281 3.195312 13.703125 L 3.425781 13.980469 C 4.257812 15.433594 5.507812 15.785156 7.175781 15.046875 C 7.269531 14.304688 7.546875 13.734375 8.007812 13.332031 C 7.175781 13.242188 6.449219 13.09375 5.832031 12.894531 C 5.214844 12.691406 4.605469 12.367188 4.003906 11.921875 C 3.402344 11.472656 2.933594 10.832031 2.59375 10 C 2.253906 9.167969 2.082031 8.164062 2.082031 6.992188 C 2.082031 5.664062 2.53125 4.523438 3.425781 3.566406 C 3.023438 2.546875 3.070312 1.40625 3.566406 0.140625 C 3.65625 0.167969 3.78125 0.160156 3.933594 0.117188 C 4.089844 0.0703125 4.476562 0.160156 5.09375 0.394531 C 5.710938 0.625 6.390625 0.988281 7.128906 1.480469 C 8.148438 1.203125 9.226562 1.050781 10.371094 1.019531 C 11.480469 1.050781 12.5625 1.203125 13.609375 1.480469 C 14.320312 0.988281 14.976562 0.632812 15.578125 0.417969 C 16.179688 0.199219 16.589844 0.09375 16.804688 0.09375 L 17.128906 0.140625 C 17.65625 1.40625 17.699219 2.546875 17.269531 3.566406 C 18.164062 4.523438 18.609375 5.664062 18.609375 6.992188 Z M 2.316406 13.265625 C 2.34375 13.1875 2.308594 13.125 2.199219 13.078125 C 2.089844 13.03125 2.023438 13.046875 1.992188 13.125 C 1.960938 13.203125 2 13.265625 2.105469 13.308594 C 2.214844 13.355469 2.285156 13.339844 2.316406 13.265625 Z M 2.847656 13.84375 C 2.925781 13.78125 2.910156 13.695312 2.800781 13.589844 C 2.691406 13.480469 2.601562 13.457031 2.523438 13.519531 C 2.445312 13.582031 2.460938 13.664062 2.570312 13.773438 C 2.675781 13.882812 2.769531 13.90625 2.847656 13.84375 Z M 3.332031 14.582031 C 3.425781 14.523438 3.425781 14.421875 3.332031 14.28125 C 3.242188 14.144531 3.148438 14.105469 3.054688 14.167969 C 2.964844 14.226562 2.964844 14.328125 3.054688 14.46875 C 3.148438 14.605469 3.242188 14.644531 3.332031 14.582031 Z M 4.050781 15.324219 C 4.128906 15.230469 4.105469 15.117188 3.980469 14.976562 C 3.859375 14.839844 3.75 14.816406 3.65625 14.90625 C 3.566406 15 3.589844 15.117188 3.726562 15.253906 C 3.867188 15.394531 3.972656 15.417969 4.050781 15.324219 Z M 5 15.71875 C 5.03125 15.609375 4.960938 15.523438 4.792969 15.464844 C 4.621094 15.402344 4.523438 15.433594 4.492188 15.554688 C 4.460938 15.679688 4.53125 15.765625 4.699219 15.808594 C 4.867188 15.855469 4.96875 15.824219 5 15.71875 Z M 5.785156 15.972656 C 5.972656 15.972656 6.066406 15.910156 6.066406 15.785156 C 6.066406 15.664062 5.972656 15.601562 5.785156 15.601562 C 5.601562 15.601562 5.507812 15.664062 5.507812 15.785156 C 5.507812 15.910156 5.601562 15.972656 5.785156 15.972656 Z M 6.804688 15.878906 C 6.898438 15.847656 6.96875 15.808594 7.015625 15.765625 C 7.058594 15.71875 7.066406 15.679688 7.035156 15.648438 C 7.035156 15.492188 6.945312 15.433594 6.757812 15.464844 C 6.667969 15.492188 6.597656 15.53125 6.550781 15.578125 C 6.503906 15.625 6.496094 15.679688 6.527344 15.742188 C 6.527344 15.863281 6.621094 15.910156 6.804688 15.878906 Z M 6.804688 15.878906 \"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGithub);\nexport default __webpack_public_path__ + \"static/media/github.498e6177.svg\";\nexport { ForwardRef as ReactComponent };","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTwitter(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: \"20pt\",\n    height: \"20pt\",\n    viewBox: \"0 0 20 20\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"surface1\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(100%,100%,100%)\",\n      fillOpacity: 1\n    },\n    d: \"M 19.703125 4.113281 C 19.007812 4.421875 18.257812 4.628906 17.472656 4.726562 C 18.285156 4.238281 18.890625 3.476562 19.179688 2.578125 C 18.417969 3.027344 17.585938 3.347656 16.714844 3.519531 C 16.128906 2.894531 15.355469 2.480469 14.511719 2.339844 C 13.667969 2.203125 12.800781 2.34375 12.046875 2.75 C 11.292969 3.152344 10.695312 3.792969 10.34375 4.574219 C 9.988281 5.351562 9.90625 6.226562 10.101562 7.058594 C 8.554688 6.984375 7.046875 6.582031 5.667969 5.882812 C 4.289062 5.183594 3.074219 4.203125 2.097656 3.003906 C 1.765625 3.578125 1.574219 4.246094 1.574219 4.953125 C 1.574219 5.59375 1.730469 6.222656 2.03125 6.789062 C 2.332031 7.351562 2.769531 7.832031 3.300781 8.1875 C 2.683594 8.167969 2.082031 8 1.542969 7.699219 L 1.542969 7.75 C 1.542969 8.648438 1.851562 9.515625 2.417969 10.210938 C 2.988281 10.902344 3.777344 11.378906 4.65625 11.558594 C 4.085938 11.710938 3.484375 11.734375 2.902344 11.625 C 3.152344 12.394531 3.632812 13.070312 4.285156 13.554688 C 4.933594 14.035156 5.71875 14.304688 6.527344 14.320312 C 5.152344 15.398438 3.457031 15.984375 1.707031 15.980469 C 1.398438 15.980469 1.089844 15.964844 0.78125 15.925781 C 2.554688 17.070312 4.621094 17.675781 6.730469 17.671875 C 13.871094 17.671875 17.777344 11.757812 17.777344 6.625 C 17.777344 6.460938 17.773438 6.292969 17.765625 6.125 C 18.523438 5.574219 19.179688 4.894531 19.699219 4.117188 Z M 19.703125 4.113281 \"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTwitter);\nexport default __webpack_public_path__ + \"static/media/twitter.f6e6e036.svg\";\nexport { ForwardRef as ReactComponent };","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTelegram(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: \"32pt\",\n    height: \"32pt\",\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"surface1\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(255,255,255)\",\n      fillOpacity: 1\n    },\n    d: \"M 28.402344 3.832031 C 28.089844 3.84375 27.785156 3.933594 27.511719 4.042969 C 27.242188 4.148438 25.683594 4.816406 23.378906 5.800781 C 21.078125 6.785156 18.085938 8.066406 15.117188 9.335938 C 9.183594 11.878906 3.351562 14.382812 3.351562 14.382812 L 3.394531 14.363281 C 3.394531 14.363281 3.042969 14.484375 2.6875 14.730469 C 2.507812 14.855469 2.316406 15.015625 2.160156 15.25 C 2 15.484375 1.886719 15.816406 1.929688 16.167969 C 2.082031 17.398438 3.359375 17.746094 3.359375 17.746094 L 3.363281 17.75 L 9.0625 19.699219 C 9.207031 20.183594 10.789062 25.46875 11.136719 26.585938 C 11.328125 27.203125 11.511719 27.5625 11.699219 27.804688 C 11.792969 27.925781 11.890625 28.019531 12 28.089844 C 12.042969 28.117188 12.085938 28.136719 12.132812 28.15625 C 12.132812 28.15625 12.132812 28.15625 12.136719 28.15625 C 12.140625 28.160156 12.144531 28.160156 12.152344 28.160156 L 12.136719 28.15625 C 12.148438 28.160156 12.15625 28.167969 12.167969 28.171875 C 12.1875 28.179688 12.199219 28.179688 12.226562 28.183594 C 12.878906 28.414062 13.417969 27.988281 13.417969 27.988281 L 13.441406 27.972656 L 16.941406 24.726562 L 22.621094 29.15625 L 22.691406 29.1875 C 23.6875 29.628906 24.585938 29.382812 25.082031 28.976562 C 25.582031 28.574219 25.777344 28.050781 25.777344 28.050781 L 25.796875 27.996094 L 29.972656 6.242188 C 30.078125 5.753906 30.09375 5.332031 29.992188 4.953125 C 29.894531 4.574219 29.648438 4.242188 29.339844 4.058594 C 29.035156 3.875 28.714844 3.816406 28.402344 3.832031 Z M 28.433594 5.132812 C 28.5625 5.125 28.65625 5.140625 28.683594 5.160156 C 28.714844 5.175781 28.726562 5.175781 28.757812 5.28125 C 28.785156 5.386719 28.800781 5.613281 28.722656 5.96875 L 28.71875 5.976562 L 24.570312 27.601562 C 24.558594 27.625 24.472656 27.824219 24.277344 27.984375 C 24.074219 28.148438 23.851562 28.277344 23.257812 28.027344 L 17.046875 23.183594 L 16.871094 23.046875 L 16.867188 23.050781 L 15.007812 21.65625 L 25.449219 9.375 C 25.613281 9.183594 25.648438 8.910156 25.539062 8.683594 C 25.429688 8.457031 25.195312 8.3125 24.945312 8.320312 C 24.824219 8.324219 24.707031 8.359375 24.605469 8.425781 L 9.5 18.496094 L 3.792969 16.542969 C 3.792969 16.542969 3.226562 16.226562 3.199219 16.007812 C 3.199219 15.996094 3.191406 16.007812 3.222656 15.964844 C 3.25 15.917969 3.324219 15.847656 3.417969 15.78125 C 3.601562 15.652344 3.816406 15.574219 3.816406 15.574219 L 3.835938 15.566406 L 3.859375 15.558594 C 3.859375 15.558594 9.6875 13.054688 15.621094 10.515625 C 18.589844 9.242188 21.582031 7.960938 23.882812 6.976562 C 26.183594 5.992188 27.847656 5.285156 27.988281 5.230469 C 28.148438 5.164062 28.308594 5.136719 28.433594 5.132812 Z M 21.511719 12.027344 L 13.597656 21.339844 L 13.59375 21.34375 C 13.582031 21.359375 13.570312 21.375 13.558594 21.390625 C 13.546875 21.410156 13.535156 21.425781 13.523438 21.445312 C 13.476562 21.519531 13.449219 21.605469 13.4375 21.691406 C 13.4375 21.691406 13.4375 21.695312 13.4375 21.695312 L 12.40625 26.332031 C 12.390625 26.285156 12.378906 26.265625 12.359375 26.207031 L 12.359375 26.203125 C 12.03125 25.152344 10.539062 20.171875 10.332031 19.480469 Z M 14.488281 22.867188 L 15.914062 23.933594 L 13.824219 25.871094 Z M 14.488281 22.867188 \"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTelegram);\nexport default __webpack_public_path__ + \"static/media/telegram.190943b9.svg\";\nexport { ForwardRef as ReactComponent };","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDiscord(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: \"20pt\",\n    height: \"20pt\",\n    viewBox: \"0 0 20 20\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"surface1\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(100%,100%,100%)\",\n      fillOpacity: 1\n    },\n    d: \"M 16.929688 3.742188 C 15.65625 3.167969 14.289062 2.742188 12.859375 2.5 C 12.847656 2.5 12.835938 2.5 12.824219 2.507812 C 12.808594 2.511719 12.800781 2.519531 12.792969 2.53125 C 12.621094 2.839844 12.425781 3.238281 12.289062 3.558594 C 10.773438 3.332031 9.230469 3.332031 7.714844 3.558594 C 7.5625 3.207031 7.390625 2.863281 7.199219 2.53125 C 7.195312 2.519531 7.183594 2.511719 7.171875 2.503906 C 7.160156 2.5 7.148438 2.496094 7.136719 2.5 C 5.707031 2.742188 4.339844 3.167969 3.0625 3.742188 C 3.054688 3.746094 3.042969 3.753906 3.039062 3.765625 C 0.445312 7.578125 -0.265625 11.296875 0.0820312 14.96875 C 0.0820312 14.976562 0.0859375 14.984375 0.0898438 14.992188 C 0.09375 15 0.101562 15.007812 0.109375 15.011719 C 1.621094 16.117188 3.308594 16.953125 5.101562 17.496094 C 5.113281 17.5 5.128906 17.5 5.140625 17.496094 C 5.152344 17.492188 5.164062 17.484375 5.171875 17.476562 C 5.558594 16.957031 5.902344 16.414062 6.195312 15.839844 C 6.210938 15.804688 6.195312 15.765625 6.160156 15.753906 C 5.621094 15.550781 5.101562 15.304688 4.601562 15.019531 C 4.589844 15.015625 4.582031 15.007812 4.578125 15 C 4.574219 14.992188 4.570312 14.980469 4.570312 14.96875 C 4.566406 14.960938 4.570312 14.949219 4.574219 14.941406 C 4.578125 14.929688 4.585938 14.921875 4.59375 14.917969 C 4.699219 14.839844 4.804688 14.757812 4.902344 14.675781 C 4.914062 14.671875 4.921875 14.664062 4.933594 14.664062 C 4.945312 14.664062 4.957031 14.664062 4.96875 14.667969 C 8.242188 16.140625 11.785156 16.140625 15.019531 14.667969 C 15.03125 14.664062 15.042969 14.664062 15.054688 14.664062 C 15.066406 14.664062 15.074219 14.667969 15.085938 14.675781 C 15.183594 14.757812 15.289062 14.839844 15.394531 14.917969 C 15.402344 14.921875 15.410156 14.929688 15.414062 14.941406 C 15.417969 14.949219 15.421875 14.960938 15.421875 14.96875 C 15.421875 14.980469 15.417969 14.992188 15.410156 15 C 15.40625 15.007812 15.398438 15.015625 15.390625 15.019531 C 14.890625 15.308594 14.375 15.550781 13.828125 15.75 C 13.820312 15.753906 13.8125 15.757812 13.808594 15.765625 C 13.800781 15.773438 13.796875 15.78125 13.792969 15.789062 C 13.789062 15.796875 13.789062 15.804688 13.789062 15.8125 C 13.789062 15.824219 13.789062 15.832031 13.796875 15.839844 C 14.09375 16.410156 14.4375 16.957031 14.816406 17.472656 C 14.824219 17.484375 14.835938 17.492188 14.847656 17.496094 C 14.859375 17.5 14.875 17.5 14.886719 17.496094 C 16.679688 16.957031 18.371094 16.117188 19.886719 15.011719 C 19.894531 15.007812 19.902344 15 19.90625 14.992188 C 19.910156 14.984375 19.914062 14.976562 19.914062 14.96875 C 20.332031 10.722656 19.214844 7.035156 16.957031 3.765625 C 16.949219 3.757812 16.941406 3.746094 16.929688 3.742188 Z M 6.683594 12.730469 C 5.699219 12.730469 4.886719 11.839844 4.886719 10.75 C 4.886719 9.65625 5.683594 8.765625 6.683594 8.765625 C 7.691406 8.765625 8.496094 9.664062 8.480469 10.75 C 8.480469 11.839844 7.683594 12.730469 6.683594 12.730469 Z M 13.328125 12.730469 C 12.34375 12.730469 11.53125 11.839844 11.53125 10.75 C 11.53125 9.65625 12.328125 8.765625 13.328125 8.765625 C 14.335938 8.765625 15.140625 9.664062 15.125 10.75 C 15.125 11.839844 14.339844 12.730469 13.328125 12.730469 Z M 13.328125 12.730469 \"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDiscord);\nexport default __webpack_public_path__ + \"static/media/discord.d78c1d63.svg\";\nexport { ForwardRef as ReactComponent };","import { SvgIcon, Link } from \"@material-ui/core\";\nimport { ReactComponent as GitHub } from \"../../../assets/icons/github.svg\";\nimport { ReactComponent as Twitter } from \"../../../assets/icons/twitter.svg\";\nimport { ReactComponent as Telegram } from \"../../../assets/icons/telegram.svg\";\nimport { ReactComponent as Discord } from \"../../../assets/icons/discord.svg\";\n\nexport default function Social() {\n    return (\n        <div className=\"social-row\">\n            <Link href=\"https://github.com/cunoro\" style={{ pointerEvents: \"none\" }} target=\"_blank\">\n                <SvgIcon color=\"primary\" component={GitHub} />\n            </Link>\n\n            <Link href=\"https://twitter.com/cunorofinance\" style={{ textDecoration: \"none\" }} target=\"_blank\">\n                <SvgIcon color=\"primary\" component={Twitter} />\n            </Link>\n\n            <Link href=\"https://t.me/+O7pOJ6H7KEJiNDIy\" style={{ pointerEvents: \"none\" }} target=\"_blank\">\n                <SvgIcon viewBox=\"0 0 32 32\" color=\"primary\" component={Telegram} />\n            </Link>\n\n            <Link href=\"https://discord.gg/7uP2SQ2t5F\" style={{ pointerEvents: \"none\" }} target=\"_blank\">\n                <SvgIcon color=\"primary\" component={Discord} />\n            </Link>\n        </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/stake.3cfb0455.svg\";","export default __webpack_public_path__ + \"static/media/bond.6b07e119.svg\";","export default __webpack_public_path__ + \"static/media/cunoro-logo.dab4f16d.png\";","export default __webpack_public_path__ + \"static/media/dashboard.25e1b5ce.svg\";","export default __webpack_public_path__ + \"static/media/wonderglobe.9206054e.svg\";","import { useCallback, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Social from \"./social\";\nimport StakeIcon from \"../../../assets/icons/stake.svg\";\nimport BondIcon from \"../../../assets/icons/bond.svg\";\nimport WonderlandIcon from \"../../../assets/icons/wonderland-nav-header.svg\";\nimport CunoroLogo from \"../../../assets/icons/cunoro-logo.png\";\nimport DashboardIcon from \"../../../assets/icons/dashboard.svg\";\nimport { trim, shorten } from \"../../../helpers\";\nimport { useAddress } from \"../../../hooks\";\nimport useBonds from \"../../../hooks/bonds\";\nimport { Link } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport \"./drawer-content.scss\";\nimport DocsIcon from \"../../../assets/icons/stake.svg\";\nimport GlobeIcon from \"../../../assets/icons/wonderglobe.svg\";\nimport classnames from \"classnames\";\n\nfunction NavContent() {\n    const [isActive] = useState();\n    const address = useAddress();\n    const { bonds } = useBonds();\n\n    const checkPage = useCallback((location: any, page: string): boolean => {\n        const currentPath = location.pathname.replace(\"/\", \"\");\n        if (currentPath.indexOf(\"dashboard\") >= 0 && page === \"dashboard\") {\n            return true;\n        }\n        if (currentPath.indexOf(\"stake\") >= 0 && page === \"stake\") {\n            return true;\n        }\n        if (currentPath.indexOf(\"bonds\") >= 0 && page === \"bonds\") {\n            return true;\n        }\n        if (currentPath.indexOf(\"calculator\") >= 0 && page === \"calculator\") {\n            return true;\n        }\n        return false;\n    }, []);\n\n    return (\n        <div className=\"dapp-sidebar\">\n            <div className=\"branding-header\">\n                <Link href=\"https://cunoro.finance/\">\n                    <img alt=\"\" src={CunoroLogo} width=\"160px\" height=\"160px\" />\n                </Link>\n\n                {address && (\n                    <div className=\"wallet-link\">\n                        <Link href={`https://cchain.explorer.avax.network/address/${address}`} target=\"_blank\">\n                            <p>{shorten(address)}</p>\n                        </Link>\n                    </div>\n                )}\n            </div>\n\n            <div className=\"dapp-menu-links\">\n                <div className=\"dapp-nav\">\n                    <Link\n                        component={NavLink}\n                        to=\"/dashboard\"\n                        isActive={(match: any, location: any) => {\n                            return checkPage(location, \"dashboard\");\n                        }}\n                        className={classnames(\"button-dapp-menu\", { active: isActive })}\n                    >\n                        <div className=\"dapp-menu-item\">\n                            <img alt=\"\" src={DashboardIcon} />\n                            <p>Dashboard</p>\n                        </div>\n                    </Link>\n\n                    <Link\n                        component={NavLink}\n                        to=\"/stake\"\n                        isActive={(match: any, location: any) => {\n                            return checkPage(location, \"stake\");\n                        }}\n                        className={classnames(\"button-dapp-menu\", { active: isActive })}\n                    >\n                        <div className=\"dapp-menu-item\">\n                            <img alt=\"\" src={StakeIcon} />\n                            <p>Stake</p>\n                        </div>\n                    </Link>\n\n                    <Link\n                        component={NavLink}\n                        id=\"bond-nav\"\n                        to=\"/bonds\"\n                        isActive={(match: any, location: any) => {\n                            return checkPage(location, \"bonds\");\n                        }}\n                        className={classnames(\"button-dapp-menu\", { active: isActive })}\n                    >\n                        <div className=\"dapp-menu-item\">\n                            <img alt=\"\" src={BondIcon} />\n                            <p>Bond</p>\n                        </div>\n                    </Link>\n\n                    <div className=\"bond-discounts\">\n                        <p>Bond discounts</p>\n                        {bonds.map((bond, i) => (\n                            <Link component={NavLink} to={`/bonds/${bond.name}`} key={i} className={\"bond\"}>\n                                {!bond.bondDiscount ? (\n                                    <Skeleton variant=\"text\" width={\"150px\"} />\n                                ) : (\n                                    <p>\n                                        {bond.displayName}\n                                        <span className=\"bond-pair-roi\">{bond.bondDiscount && trim(bond.bondDiscount * 100, 2)}%</span>\n                                    </p>\n                                )}\n                            </Link>\n                        ))}\n                    </div>\n\n                    <Link\n                        component={NavLink}\n                        to=\"/calculator\"\n                        isActive={(match: any, location: any) => {\n                            return checkPage(location, \"calculator\");\n                        }}\n                        className={classnames(\"button-dapp-menu\", { active: isActive })}\n                    >\n                        <div className=\"dapp-menu-item\">\n                            <img alt=\"\" src={GlobeIcon} />\n                            <p>Calculator</p>\n                        </div>\n                    </Link>\n                </div>\n            </div>\n            <div className=\"dapp-menu-doc-link\">\n                <Link href=\"https://docs.cunoro.finance/\" target=\"_blank\">\n                    <img alt=\"\" src={DocsIcon} />\n                    <p>Docs</p>\n                </Link>\n            </div>\n            <Social />\n        </div>\n    );\n}\n\nexport default NavContent;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { Drawer } from \"@material-ui/core\";\nimport DrawerContent from \"./drawer-content\";\nimport { DRAWER_WIDTH } from \"../../constants/style\";\n\nconst useStyles = makeStyles(theme => ({\n    drawer: {\n        [theme.breakpoints.up(\"md\")]: {\n            width: DRAWER_WIDTH,\n            flexShrink: 0,\n        },\n    },\n    drawerPaper: {\n        width: DRAWER_WIDTH,\n        borderRight: 0,\n    },\n}));\n\ninterface INavDrawer {\n    mobileOpen: boolean;\n    handleDrawerToggle: () => void;\n}\n\nfunction NavDrawer({ mobileOpen, handleDrawerToggle }: INavDrawer) {\n    const classes = useStyles();\n\n    return (\n        <Drawer\n            variant=\"temporary\"\n            anchor=\"left\"\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            onClick={handleDrawerToggle}\n            classes={{\n                paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n                keepMounted: true,\n            }}\n        >\n            <DrawerContent />\n        </Drawer>\n    );\n}\n\nexport default NavDrawer;\n","import { Drawer } from \"@material-ui/core\";\nimport DrawerContent from \"./drawer-content\";\n\nfunction Sidebar() {\n    return (\n        <Drawer variant=\"permanent\" anchor=\"left\">\n            <DrawerContent />\n        </Drawer>\n    );\n}\n\nexport default Sidebar;\n","import { JsonRpcProvider, StaticJsonRpcProvider } from \"@ethersproject/providers\";\nimport { createSlice, createSelector, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { messages } from \"../../constants/messages\";\nimport { getAddresses, Networks } from \"../../constants\";\nimport { setAll, sleep } from \"../../helpers\";\nimport { info, success, warning } from \"./messages-slice\";\nimport { RootState } from \"../store\";\nimport { ethers } from \"ethers\";\nimport { metamaskErrorWrap } from \"../../helpers/metamask-error-wrap\";\nimport { wMemoTokenContract } from \"../../abi\";\nimport { clearPendingTxn, fetchPendingTxns, getWrappingTypeText } from \"./pending-txns-slice\";\nimport { getGasPrice } from \"../../helpers/get-gas-price\";\nimport { fetchAccountSuccess, getBalances } from \"./account-slice\";\n\nexport interface IChangeApproval {\n    provider: StaticJsonRpcProvider | JsonRpcProvider;\n    networkID: Networks;\n    address: string;\n}\n\nexport const changeApproval = createAsyncThunk(\"wrapping/changeApproval\", async ({ provider, address, networkID }: IChangeApproval, { dispatch }) => {\n    if (!provider) {\n        dispatch(warning({ text: messages.please_connect_wallet }));\n        return;\n    }\n\n    const addresses = getAddresses(networkID);\n    const signer = provider.getSigner();\n    const memoContract = new ethers.Contract(addresses.SNORO_ADDRESS, wMemoTokenContract, signer);\n\n    let approveTx;\n    try {\n        const gasPrice = await getGasPrice(provider);\n\n        approveTx = await memoContract.approve(addresses.WSNORO_ADDRESS, ethers.constants.MaxUint256, { gasPrice });\n\n        const text = \"Approve Wrapping\";\n        const pendingTxnType = \"approve_wrapping\";\n\n        dispatch(fetchPendingTxns({ txnHash: approveTx.hash, text, type: pendingTxnType }));\n        await approveTx.wait();\n        dispatch(success({ text: messages.tx_successfully_send }));\n    } catch (err: any) {\n        return metamaskErrorWrap(err, dispatch);\n    } finally {\n        if (approveTx) {\n            dispatch(clearPendingTxn(approveTx.hash));\n        }\n    }\n\n    await sleep(2);\n\n    const wmemoAllowance = await memoContract.allowance(address, addresses.WSNORO_ADDRESS);\n\n    return dispatch(\n        fetchAccountSuccess({\n            wrapping: {\n                wmemo: Number(wmemoAllowance),\n            },\n        }),\n    );\n});\n\nexport interface IChangeWrap {\n    isWrap: boolean;\n    value: string;\n    provider: StaticJsonRpcProvider | JsonRpcProvider;\n    networkID: Networks;\n    address: string;\n}\n\nexport const changeWrap = createAsyncThunk(\"wrapping/changeWrap\", async ({ isWrap, value, provider, networkID, address }: IChangeWrap, { dispatch }) => {\n    if (!provider) {\n        dispatch(warning({ text: messages.please_connect_wallet }));\n        return;\n    }\n\n    const addresses = getAddresses(networkID);\n    const signer = provider.getSigner();\n    const amountInWei = isWrap ? ethers.utils.parseUnits(value, \"gwei\") : ethers.utils.parseEther(value);\n    const wmemoContract = new ethers.Contract(addresses.WSNORO_ADDRESS, wMemoTokenContract, signer);\n\n    let wrapTx;\n\n    try {\n        const gasPrice = await getGasPrice(provider);\n\n        if (isWrap) {\n            wrapTx = await wmemoContract.wrap(amountInWei, { gasPrice });\n        } else {\n            wrapTx = await wmemoContract.unwrap(amountInWei, { gasPrice });\n        }\n\n        const pendingTxnType = isWrap ? \"wrapping\" : \"unwrapping\";\n        dispatch(fetchPendingTxns({ txnHash: wrapTx.hash, text: getWrappingTypeText(isWrap), type: pendingTxnType }));\n        await wrapTx.wait();\n        dispatch(success({ text: messages.tx_successfully_send }));\n    } catch (err: any) {\n        return metamaskErrorWrap(err, dispatch);\n    } finally {\n        if (wrapTx) {\n            dispatch(clearPendingTxn(wrapTx.hash));\n        }\n    }\n\n    dispatch(info({ text: messages.your_balance_update_soon }));\n    await sleep(10);\n    await dispatch(getBalances({ address, networkID, provider }));\n    dispatch(info({ text: messages.your_balance_updated }));\n    return;\n});\n\nexport interface IWrapDetails {\n    isWrap: boolean;\n    value: string;\n    provider: StaticJsonRpcProvider | JsonRpcProvider;\n    networkID: Networks;\n}\n\nconst calcWrapValue = async ({ isWrap, value, provider, networkID }: IWrapDetails): Promise<number> => {\n    const addresses = getAddresses(networkID);\n\n    const amountInWei = isWrap ? ethers.utils.parseUnits(value, \"gwei\") : ethers.utils.parseEther(value);\n\n    let wrapValue = 0;\n\n    const wmemoContract = new ethers.Contract(addresses.WSNORO_ADDRESS, wMemoTokenContract, provider);\n\n    if (isWrap) {\n        const wmemoValue = await wmemoContract.MEMOTowMEMO(amountInWei);\n        wrapValue = wmemoValue / Math.pow(10, 18);\n    } else {\n        const memoValue = await wmemoContract.wMEMOToMEMO(amountInWei);\n        wrapValue = memoValue / Math.pow(10, 9);\n    }\n\n    return wrapValue;\n};\n\nexport const calcWrapDetails = createAsyncThunk(\"wrapping/calcWrapDetails\", async ({ isWrap, value, provider, networkID }: IWrapDetails, { dispatch }) => {\n    if (!provider) {\n        dispatch(warning({ text: messages.please_connect_wallet }));\n        return;\n    }\n\n    if (!value) {\n        return new Promise<any>(resolve =>\n            resolve({\n                wrapValue: \"\",\n            }),\n        );\n    }\n\n    const wrapValue = await calcWrapValue({ isWrap, value, provider, networkID });\n\n    return {\n        wrapValue,\n    };\n});\n\nexport interface IWrapPrice {\n    isWrap: boolean;\n    provider: StaticJsonRpcProvider | JsonRpcProvider;\n    networkID: Networks;\n}\n\nexport const calcWrapPrice = createAsyncThunk(\"wrapping/calcWrapPrice\", async ({ isWrap, provider, networkID }: IWrapPrice, { dispatch }) => {\n    if (!provider) {\n        dispatch(warning({ text: messages.please_connect_wallet }));\n        return;\n    }\n\n    const wrapPrice = await calcWrapValue({ isWrap, value: \"1\", provider, networkID });\n\n    return {\n        wrapPrice,\n    };\n});\n\nexport interface IWrapSlice {\n    loading: boolean;\n    wrapValue: \"\";\n    wrapPrice: number;\n}\n\nconst initialState: IWrapSlice = {\n    loading: true,\n    wrapValue: \"\",\n    wrapPrice: 0,\n};\n\nconst wrapSlice = createSlice({\n    name: \"wrapping\",\n    initialState,\n    reducers: {\n        fetchWrapSuccess(state, action) {\n            setAll(state, action.payload);\n        },\n    },\n    extraReducers: builder => {\n        builder\n            .addCase(calcWrapDetails.pending, state => {\n                state.loading = true;\n            })\n            .addCase(calcWrapDetails.fulfilled, (state, action) => {\n                setAll(state, action.payload);\n                state.loading = false;\n            })\n            .addCase(calcWrapDetails.rejected, (state, { error }) => {\n                state.loading = false;\n                console.log(error);\n            })\n            .addCase(calcWrapPrice.pending, state => {\n                state.loading = true;\n            })\n            .addCase(calcWrapPrice.fulfilled, (state, action) => {\n                setAll(state, action.payload);\n                state.loading = false;\n            })\n            .addCase(calcWrapPrice.rejected, (state, { error }) => {\n                state.loading = false;\n                console.log(error);\n            });\n    },\n});\n\nexport default wrapSlice.reducer;\n\nexport const { fetchWrapSuccess } = wrapSlice.actions;\n\nconst baseInfo = (state: RootState) => state.wrapping;\n\nexport const getWrappingState = createSelector(baseInfo, wrapping => wrapping);\n","export default __webpack_public_path__ + \"static/media/sabongr-icon.3dc495cf.png\";","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport accountReducer from \"./slices/account-slice\";\nimport bondingReducer from \"./slices/bond-slice\";\nimport appReducer from \"./slices/app-slice\";\nimport pendingTransactionsReducer from \"./slices/pending-txns-slice\";\nimport messagesReducer from \"./slices/messages-slice\";\nimport wrappingReducer from \"./slices/wrap-slice\";\n\nconst store = configureStore({\n    reducer: {\n        account: accountReducer,\n        bonding: bondingReducer,\n        app: appReducer,\n        pendingTransactions: pendingTransactionsReducer,\n        messages: messagesReducer,\n        wrapping: wrappingReducer,\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware({ serializableCheck: false }),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport default store;\n","import { error } from \"../../store/slices/messages-slice\";\nimport store from \"../../store/store\";\nimport { messages } from \"../../constants/messages\";\n\n// List of error messages we wish to intercept\nconst interceptedConsoleMessages = [\"Wrong network, please switch to mainnet\"];\n\n// Intercepts an error sent to console and dispatches it to the message framework.\nvar consoleInterceptor = function (message) {\n    if (interceptedConsoleMessages.includes(message)) {\n        store.dispatch(error({ text: messages.something_wrong, error: message }));\n    }\n    console._error_old(message);\n};\nconsoleInterceptor.isInterceptor = true;\n\n// Replaces the console.error function by our interceptor\nif (console.error.isInterceptor != true) {\n    console._error_old = console.error;\n    console.error = consoleInterceptor;\n}\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { close } from \"../../store/slices/messages-slice\";\nimport \"./console-interceptor\";\nimport { MessagesState } from \"../../store/slices/messages-slice\";\nimport { IReduxState } from \"../../store/slices/state.interface\";\nimport React, { useEffect } from \"react\";\nimport { useSnackbar } from \"notistack\";\n\n// A component that displays error messages\nfunction Messages() {\n    const { enqueueSnackbar } = useSnackbar();\n    const messages = useSelector<IReduxState, MessagesState>(state => state.messages);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (messages.message) {\n            enqueueSnackbar(JSON.stringify(messages.message));\n            dispatch(close());\n        }\n    }, [messages.message]);\n\n    return <div></div>;\n}\n\nexport default Messages;\n","import React, { useState } from \"react\";\nimport \"./view-base.scss\";\nimport Header from \"../Header\";\nimport { Hidden, makeStyles, useMediaQuery } from \"@material-ui/core\";\nimport { DRAWER_WIDTH, TRANSITION_DURATION } from \"../../constants/style\";\nimport MobileDrawer from \"../Drawer/mobile-drawer\";\nimport Drawer from \"../Drawer\";\nimport { cubesImage } from \"src/constants/img\";\nimport SabongIcon from \"../../assets/icons/sabongr-icon.png\";\nimport Messages from \"../Messages\";\n\ninterface IViewBaseProps {\n    children: React.ReactNode;\n}\n\nconst useStyles = makeStyles(theme => ({\n    drawer: {\n        [theme.breakpoints.up(\"md\")]: {\n            width: DRAWER_WIDTH,\n            flexShrink: 0,\n        },\n    },\n    content: {\n        padding: theme.spacing(1),\n        transition: theme.transitions.create(\"margin\", {\n            easing: theme.transitions.easing.sharp,\n            duration: TRANSITION_DURATION,\n        }),\n        height: \"100%\",\n        overflow: \"auto\",\n        marginLeft: DRAWER_WIDTH,\n    },\n    contentShift: {\n        transition: theme.transitions.create(\"margin\", {\n            easing: theme.transitions.easing.easeOut,\n            duration: TRANSITION_DURATION,\n        }),\n        marginLeft: 0,\n    },\n}));\n\nfunction ViewBase({ children }: IViewBaseProps) {\n    const classes = useStyles();\n\n    const [mobileOpen, setMobileOpen] = useState(false);\n\n    const isSmallerScreen = useMediaQuery(\"(max-width: 960px)\");\n    const isSmallScreen = useMediaQuery(\"(max-width: 600px)\");\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    return (\n        <div className=\"view-base-root\">\n            <Messages />\n            <Header drawe={!isSmallerScreen} handleDrawerToggle={handleDrawerToggle} />\n            <div className={classes.drawer}>\n                <Hidden mdUp>\n                    <MobileDrawer mobileOpen={mobileOpen} handleDrawerToggle={handleDrawerToggle} />\n                </Hidden>\n                <Hidden smDown>\n                    <Drawer />\n                </Hidden>\n            </div>\n            <div className={`${classes.content} ${isSmallerScreen && classes.contentShift}`}>\n                {false && (\n                    <div className=\"cubes-bottom\">\n                        <img alt=\"\" src={SabongIcon} />\n                    </div>\n                )}\n                {children}\n            </div>\n        </div>\n    );\n}\n\nexport default ViewBase;\n","import Box from \"@material-ui/core/Box\";\n\nfunction TabPanel(props: any) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div role=\"tabpanel\" hidden={value !== index} id={`simple-tabpanel-${index}`} aria-labelledby={`simple-tab-${index}`} {...other} style={{ overflow: \"hidden\" }}>\n            {value === index && <Box p={3}>{children}</Box>}\n        </div>\n    );\n}\n\nexport default TabPanel;\n","import { Box } from \"@material-ui/core\";\nimport { Bond } from \"../helpers/bond/bond\";\n\ninterface IBondLogoProps {\n    bond: Bond;\n}\n\nfunction BondLogo({ bond }: IBondLogoProps) {\n    let style = { height: \"32px\", width: \"32px\" };\n\n    if (bond.isLP) {\n        style = { height: \"30px\", width: \"62px\" };\n    }\n\n    return (\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" width={\"64px\"}>\n            <img src={bond.bondIconSvg} style={style} />\n        </Box>\n    );\n}\n\nexport default BondLogo;\n","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgX(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: \"20pt\",\n    height: \"20pt\",\n    viewBox: \"0 0 20 20\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"surface1\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"none\",\n      strokeWidth: 1,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      stroke: \"rgb(100%,100%,100%)\",\n      strokeOpacity: 1,\n      strokeMiterlimit: 4\n    },\n    d: \"M 21.998437 21.998437 L 2.001562 2.001562 M 2.001562 21.998437 L 21.998437 2.001562 Z M 2.001562 21.998437 \",\n    transform: \"matrix(0.833333,0,0,0.833333,0,0)\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgX);\nexport default __webpack_public_path__ + \"static/media/x.0e19066c.svg\";\nexport { ForwardRef as ReactComponent };","import { Box, Modal, Paper, SvgIcon, IconButton, FormControl, OutlinedInput, InputLabel, InputAdornment } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { ReactComponent as XIcon } from \"../../assets/icons/x.svg\";\nimport \"./bondSettings.scss\";\n\ninterface IAdvancedSettingsProps {\n    open: boolean;\n    handleClose: () => void;\n    slippage: number;\n    onSlippageChange: (e: any) => void;\n}\n\nfunction AdvancedSettings({ open, handleClose, slippage, onSlippageChange }: IAdvancedSettingsProps) {\n    const [value, setValue] = useState(slippage);\n\n    useEffect(() => {\n        let timeount: any = null;\n        clearTimeout(timeount);\n\n        timeount = setTimeout(() => onSlippageChange(value), 1000);\n        return () => clearTimeout(timeount);\n    }, [value]);\n\n    return (\n        <Modal id=\"hades\" open={open} onClose={handleClose} hideBackdrop>\n            <Paper className=\"ohm-card ohm-popover\">\n                <div className=\"cross-wrap\">\n                    <IconButton onClick={handleClose}>\n                        <SvgIcon color=\"primary\" component={XIcon} />\n                    </IconButton>\n                </div>\n\n                <p className=\"hades-title\">Settings</p>\n\n                <Box className=\"card-content\">\n                    <InputLabel htmlFor=\"slippage\">\n                        <p className=\"input-lable\">Slippage</p>\n                    </InputLabel>\n                    <FormControl variant=\"outlined\" color=\"primary\" fullWidth>\n                        <OutlinedInput\n                            id=\"slippage\"\n                            value={value}\n                            onChange={(e: any) => setValue(e.target.value)}\n                            fullWidth\n                            type=\"number\"\n                            className=\"bond-input\"\n                            endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <p className=\"percent\">%</p>\n                                </InputAdornment>\n                            }\n                        />\n                        <div className=\"help-text\">\n                            <p className=\"text-bond-desc\">Transaction may revert if price changes by more than slippage %</p>\n                        </div>\n                    </FormControl>\n                </Box>\n            </Paper>\n        </Modal>\n    );\n}\n\nexport default AdvancedSettings;\n","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSettings(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: \"20pt\",\n    height: \"20pt\",\n    viewBox: \"0 0 20 20\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"surface1\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"none\",\n      strokeWidth: 1,\n      strokeLinecap: \"butt\",\n      strokeLinejoin: \"miter\",\n      stroke: \"rgb(100%,100%,100%)\",\n      strokeOpacity: 1,\n      strokeMiterlimit: 4\n    },\n    d: \"M 19.303125 13.528125 L 19.265625 13.81875 L 19.495313 13.996875 L 21.595312 15.6 L 21.6 15.6 C 21.604688 15.6 21.609375 15.604687 21.614062 15.614062 C 21.61875 15.61875 21.61875 15.628125 21.623437 15.632812 C 21.623437 15.6375 21.623437 15.642187 21.623437 15.642187 L 21.61875 15.646875 L 19.476562 19.335938 C 19.467187 19.340625 19.4625 19.340625 19.453125 19.340625 C 19.448438 19.340625 19.44375 19.340625 19.439062 19.335938 L 16.959375 18.196875 L 16.673437 18.065625 L 16.434375 18.2625 C 15.932812 18.670312 15.328125 18.998437 14.653125 19.289062 L 14.38125 19.40625 L 14.353125 19.70625 L 14.104687 22.448438 C 14.1 22.448438 14.1 22.448438 14.1 22.448438 L 9.810937 22.448438 C 9.810937 22.448438 9.80625 22.44375 9.801562 22.434375 C 9.801562 22.429688 9.796875 22.425 9.796875 22.415625 L 9.548438 19.70625 L 9.520312 19.40625 L 9.248437 19.289062 C 8.582812 19.007812 8.020312 18.675 7.448437 18.248437 L 7.209375 18.070312 L 6.942188 18.196875 L 4.439062 19.345312 L 4.434375 19.35 C 4.429688 19.35 4.429688 19.345312 4.429688 19.345312 L 2.282812 15.646875 L 2.278125 15.642187 C 2.278125 15.642187 2.278125 15.6375 2.278125 15.632812 C 2.278125 15.628125 2.282812 15.61875 2.2875 15.614062 C 2.292187 15.609375 2.292187 15.604687 2.296875 15.604687 L 4.63125 14.015625 L 4.889062 13.8375 L 4.846875 13.528125 C 4.795312 13.176562 4.748437 12.857812 4.748437 12.501563 C 4.748437 12.140625 4.795312 11.821875 4.846875 11.470313 L 4.889062 11.170312 L 4.640625 10.992188 L 2.4 9.398438 C 2.395312 9.398438 2.390625 9.39375 2.385937 9.384375 C 2.38125 9.379687 2.38125 9.370312 2.376562 9.365625 C 2.376562 9.360938 2.376562 9.360938 2.376562 9.360938 C 2.376562 9.360938 2.376562 9.35625 2.376562 9.35625 L 2.38125 9.351562 L 4.523438 5.6625 C 4.532812 5.6625 4.5375 5.6625 4.546875 5.6625 C 4.551563 5.6625 4.55625 5.6625 4.560937 5.6625 L 7.040625 6.80625 L 7.326562 6.932812 L 7.565625 6.735937 C 8.067187 6.328125 8.671875 6 9.346875 5.709375 L 9.61875 5.592187 L 9.646875 5.296875 L 9.895312 2.55 C 9.9 2.55 9.9 2.55 9.9 2.55 L 14.189063 2.55 C 14.189063 2.554688 14.19375 2.559375 14.198437 2.564062 C 14.198437 2.56875 14.203125 2.578125 14.203125 2.582812 L 14.451562 5.296875 L 14.479687 5.592187 L 14.751562 5.709375 C 15.417187 5.995312 15.979687 6.323437 16.551562 6.75 L 16.790625 6.928125 L 17.057813 6.80625 L 19.560937 5.653125 L 19.565625 5.648438 C 19.570312 5.653125 19.570312 5.653125 19.570312 5.657812 L 21.76875 9.35625 L 21.773438 9.35625 C 21.773438 9.35625 21.773438 9.360938 21.773438 9.360938 C 21.773438 9.360938 21.773438 9.360938 21.773438 9.365625 C 21.76875 9.370312 21.76875 9.379687 21.764062 9.384375 C 21.759375 9.39375 21.754687 9.398438 21.75 9.398438 L 19.509375 10.992188 L 19.260938 11.170312 L 19.303125 11.470313 C 19.354688 11.821875 19.401563 12.140625 19.401563 12.501563 C 19.401563 12.857812 19.354688 13.176562 19.303125 13.528125 Z M 6.501562 12.501563 C 6.501562 15.525 8.971875 18 12 18 C 15.028125 18 17.498437 15.525 17.498437 12.501563 C 17.498437 9.473437 15.028125 6.998437 12 6.998437 C 8.971875 6.998437 6.501562 9.473437 6.501562 12.501563 Z M 6.501562 12.501563 \",\n    transform: \"matrix(0.833333,0,0,0.833333,0,0)\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSettings);\nexport default __webpack_public_path__ + \"static/media/settings.5b041d4d.svg\";\nexport { ForwardRef as ReactComponent };","import { useState } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport BondLogo from \"../../components/BondLogo\";\nimport AdvancedSettings from \"./AdvancedSettings\";\nimport { IconButton, SvgIcon, Link } from \"@material-ui/core\";\nimport { ReactComponent as SettingsIcon } from \"../../assets/icons/settings.svg\";\nimport { ReactComponent as XIcon } from \"../../assets/icons/x.svg\";\nimport { useEscape } from \"../../hooks\";\nimport { IAllBondData } from \"../../hooks/bonds\";\n\ninterface IBondHeaderProps {\n    bond: IAllBondData;\n    slippage: number;\n    onSlippageChange: (e: any) => void;\n}\n\nfunction BondHeader({ bond, slippage, onSlippageChange }: IBondHeaderProps) {\n    const [open, setOpen] = useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    let history = useHistory();\n\n    useEscape(() => {\n        if (open) handleClose;\n        else history.push(\"/bonds\");\n    });\n\n    return (\n        <div className=\"bond-header\">\n            <Link component={NavLink} to=\"/bonds\" className=\"cancel-bond\">\n                <SvgIcon color=\"primary\" component={XIcon} />\n            </Link>\n\n            <div className=\"bond-header-logo\">\n                <BondLogo bond={bond} />\n                <div className=\"bond-header-name\">\n                    <p>{bond.displayName}</p>\n                </div>\n            </div>\n\n            <div className=\"bond-settings\">\n                <IconButton onClick={handleOpen}>\n                    <SvgIcon color=\"primary\" component={SettingsIcon} />\n                </IconButton>\n                <AdvancedSettings open={open} handleClose={handleClose} slippage={slippage} onSlippageChange={onSlippageChange} />\n            </div>\n        </div>\n    );\n}\n\nexport default BondHeader;\n","import React, { useEffect } from \"react\";\n\nexport const useEscape = (onEscape: () => void) => {\n    useEffect(() => {\n        const handleEsc = (event: { keyCode: number }) => {\n            if (event.keyCode === 27) onEscape();\n        };\n        window.addEventListener(\"keydown\", handleEsc);\n\n        return () => {\n            window.removeEventListener(\"keydown\", handleEsc);\n        };\n    }, []);\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { Box, Slide } from \"@material-ui/core\";\nimport { IBondDetails, redeemBond } from \"../../store/slices/bond-slice\";\nimport { useWeb3Context } from \"../../hooks\";\nimport { trim, prettifySeconds, prettyVestingPeriod } from \"../../helpers\";\nimport { IPendingTxn, isPendingTxn, txnButtonText } from \"../../store/slices/pending-txns-slice\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { IReduxState } from \"../../store/slices/state.interface\";\nimport { IAllBondData } from \"../../hooks/bonds\";\nimport { IUserBondDetails } from \"../../store/slices/account-slice\";\nimport { messages } from \"../../constants/messages\";\nimport { warning } from \"../../store/slices/messages-slice\";\n\ninterface IBondRedeem {\n    bond: IAllBondData;\n}\n\nfunction BondRedeem({ bond }: IBondRedeem) {\n    const dispatch = useDispatch();\n    const { provider, address, chainID, checkWrongNetwork } = useWeb3Context();\n\n    const isBondLoading = useSelector<IReduxState, boolean>(state => state.bonding.loading ?? true);\n\n    const currentBlockTime = useSelector<IReduxState, number>(state => {\n        return state.app.currentBlockTime;\n    });\n\n    const pendingTransactions = useSelector<IReduxState, IPendingTxn[]>(state => {\n        return state.pendingTransactions;\n    });\n\n    const bondingState = useSelector<IReduxState, IBondDetails>(state => {\n        return state.bonding && state.bonding[bond.name];\n    });\n\n    const bondDetails = useSelector<IReduxState, IUserBondDetails>(state => {\n        return state.account.bonds && state.account.bonds[bond.name];\n    });\n\n    async function onRedeem(autostake: boolean) {\n        if (await checkWrongNetwork()) return;\n\n        if (bond.interestDue === 0 || bond.pendingPayout === 0) {\n            dispatch(warning({ text: messages.nothing_to_claim }));\n            return;\n        }\n\n        await dispatch(redeemBond({ address, bond, networkID: chainID, provider, autostake }));\n    }\n\n    const vestingTime = () => {\n        if (!bondDetails) {\n            return \"\";\n        }\n        return prettyVestingPeriod(currentBlockTime, bondDetails.bondMaturationBlock);\n    };\n\n    const vestingPeriod = () => {\n        return prettifySeconds(bondingState.vestingTerm, \"day\");\n    };\n\n    return (\n        <Box display=\"flex\" flexDirection=\"column\">\n            <Box display=\"flex\" justifyContent=\"space-around\" flexWrap=\"wrap\">\n                <div\n                    className=\"transaction-button bond-approve-btn\"\n                    onClick={() => {\n                        if (isPendingTxn(pendingTransactions, \"redeem_bond_\" + bond.name)) return;\n                        onRedeem(false);\n                    }}\n                >\n                    <p>{txnButtonText(pendingTransactions, \"redeem_bond_\" + bond.name, \"Claim\")}</p>\n                </div>\n                <div\n                    className=\"transaction-button bond-approve-btn\"\n                    onClick={() => {\n                        if (isPendingTxn(pendingTransactions, \"redeem_bond_\" + bond.name + \"_autostake\")) return;\n                        onRedeem(true);\n                    }}\n                >\n                    <p>{txnButtonText(pendingTransactions, \"redeem_bond_\" + bond.name + \"_autostake\", \"Claim and Autostake\")}</p>\n                </div>\n            </Box>\n\n            <Slide direction=\"right\" in={true} mountOnEnter unmountOnExit {...{ timeout: 533 }}>\n                <Box className=\"bond-data\">\n                    <div className=\"data-row\">\n                        <p className=\"bond-balance-title\">Pending Rewards</p>\n                        <p className=\"price-data bond-balance-title\">{isBondLoading ? <Skeleton width=\"100px\" /> : `${trim(bond.interestDue, 4)} NORO`}</p>\n                    </div>\n                    <div className=\"data-row\">\n                        <p className=\"bond-balance-title\">Claimable Rewards</p>\n                        <p className=\"price-data bond-balance-title\">{isBondLoading ? <Skeleton width=\"100px\" /> : `${trim(bond.pendingPayout, 4)} NORO`}</p>\n                    </div>\n                    <div className=\"data-row\">\n                        <p className=\"bond-balance-title\">Time until fully vested</p>\n                        <p className=\"price-data bond-balance-title\">{isBondLoading ? <Skeleton width=\"100px\" /> : vestingTime()}</p>\n                    </div>\n\n                    <div className=\"data-row\">\n                        <p className=\"bond-balance-title\">ROI</p>\n                        <p className=\"bond-balance-title\">{isBondLoading ? <Skeleton width=\"100px\" /> : `${trim(bond.bondDiscount * 100, 2)}%`}</p>\n                    </div>\n\n                    <div className=\"data-row\">\n                        <p className=\"bond-balance-title\">Vesting Term</p>\n                        <p className=\"bond-balance-title\">{isBondLoading ? <Skeleton width=\"100px\" /> : vestingPeriod()}</p>\n                    </div>\n                </Box>\n            </Slide>\n        </Box>\n    );\n}\n\nexport default BondRedeem;\n","import { prettifySeconds } from \"./prettify-seconds\";\nimport { secondsUntilBlock } from \"./seconds-until-block\";\n\nexport const prettyVestingPeriod = (currentBlock: number, vestingBlock: number) => {\n    if (vestingBlock === 0) {\n        return \"\";\n    }\n\n    const seconds = secondsUntilBlock(currentBlock, vestingBlock);\n    if (seconds < 0) {\n        return \"Fully Vested\";\n    }\n    return prettifySeconds(seconds);\n};\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Box, OutlinedInput, InputAdornment, Slide, FormControl } from \"@material-ui/core\";\nimport { shorten, trim, prettifySeconds } from \"../../helpers\";\nimport { changeApproval, bondAsset, calcBondDetails } from \"../../store/slices/bond-slice\";\nimport { useWeb3Context } from \"../../hooks\";\nimport { IPendingTxn, isPendingTxn, txnButtonText } from \"../../store/slices/pending-txns-slice\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { IReduxState } from \"../../store/slices/state.interface\";\nimport { IAllBondData } from \"../../hooks/bonds\";\nimport useDebounce from \"../../hooks/debounce\";\nimport { messages } from \"../../constants/messages\";\nimport { warning } from \"../../store/slices/messages-slice\";\nimport Zapin from \"./Zapin\";\n\ninterface IBondPurchaseProps {\n    bond: IAllBondData;\n    slippage: number;\n}\n\nfunction BondPurchase({ bond, slippage }: IBondPurchaseProps) {\n    const dispatch = useDispatch();\n    const { provider, address, chainID, checkWrongNetwork } = useWeb3Context();\n\n    const [quantity, setQuantity] = useState(\"\");\n    const [useAvax, setUseAvax] = useState(false);\n\n    const isBondLoading = useSelector<IReduxState, boolean>(state => state.bonding.loading ?? true);\n    const [zapinOpen, setZapinOpen] = useState(false);\n\n    const pendingTransactions = useSelector<IReduxState, IPendingTxn[]>(state => {\n        return state.pendingTransactions;\n    });\n\n    const vestingPeriod = () => {\n        return prettifySeconds(bond.vestingTerm, \"day\");\n    };\n\n    async function onBond() {\n        if (await checkWrongNetwork()) return;\n\n        if (quantity === \"\") {\n            dispatch(warning({ text: messages.before_minting }));\n            //@ts-ignore\n        } else if (isNaN(quantity)) {\n            dispatch(warning({ text: messages.before_minting }));\n        } else if (bond.interestDue > 0 || bond.pendingPayout > 0) {\n            const shouldProceed = window.confirm(messages.existing_mint);\n            if (shouldProceed) {\n                const trimBalance = trim(Number(quantity), 10);\n\n                await dispatch(\n                    bondAsset({\n                        value: trimBalance,\n                        slippage,\n                        bond,\n                        networkID: chainID,\n                        provider,\n                        address,\n                        useAvax,\n                    }),\n                );\n                clearInput();\n            }\n        } else {\n            const trimBalance = trim(Number(quantity), 10);\n            await dispatch(\n                //@ts-ignore\n                bondAsset({\n                    value: trimBalance,\n                    slippage,\n                    bond,\n                    networkID: chainID,\n                    provider,\n                    address,\n                    useAvax,\n                }),\n            );\n            clearInput();\n        }\n    }\n\n    const clearInput = () => {\n        setQuantity(\"\");\n    };\n\n    const hasAllowance = useCallback(() => {\n        return bond.allowance > 0;\n    }, [bond.allowance]);\n\n    const setMax = () => {\n        let amount: any = useAvax ? bond.avaxBalance * 0.99 : bond.balance;\n\n        if (amount) {\n            amount = trim(amount);\n        }\n\n        setQuantity((amount || \"\").toString());\n    };\n\n    const bondDetailsDebounce = useDebounce(quantity, 1000);\n\n    useEffect(() => {\n        dispatch(calcBondDetails({ bond, value: quantity, provider, networkID: chainID }));\n    }, [bondDetailsDebounce]);\n\n    const onSeekApproval = async () => {\n        if (await checkWrongNetwork()) return;\n\n        dispatch(changeApproval({ address, bond, provider, networkID: chainID }));\n    };\n\n    const handleZapinOpen = () => {\n        dispatch(calcBondDetails({ bond, value: \"0\", provider, networkID: chainID }));\n        setZapinOpen(true);\n    };\n\n    const handleZapinClose = () => {\n        dispatch(calcBondDetails({ bond, value: quantity, provider, networkID: chainID }));\n        setZapinOpen(false);\n    };\n\n    const displayUnits = useAvax ? \"AVAX\" : bond.displayUnits;\n\n    return (\n        <Box display=\"flex\" flexDirection=\"column\">\n            <Box display=\"flex\" justifyContent=\"space-around\" flexWrap=\"wrap\">\n                {bond.name === \"wavax\" && (\n                    <FormControl className=\"ohm-input\" variant=\"outlined\" color=\"primary\" fullWidth>\n                        <div className=\"avax-checkbox\">\n                            <input type=\"checkbox\" checked={useAvax} onClick={() => setUseAvax(!useAvax)} />\n                            <p>Use AVAX</p>\n                        </div>\n                    </FormControl>\n                )}\n                <FormControl className=\"bond-input-wrap\" variant=\"outlined\" color=\"primary\" fullWidth>\n                    <OutlinedInput\n                        placeholder=\"Amount\"\n                        type=\"number\"\n                        value={quantity}\n                        onChange={e => setQuantity(e.target.value)}\n                        labelWidth={0}\n                        className=\"bond-input\"\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <div className=\"stake-input-btn\" onClick={setMax}>\n                                    <p>Max</p>\n                                </div>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n                {hasAllowance() || useAvax ? (\n                    <div\n                        className=\"transaction-button bond-approve-btn\"\n                        onClick={async () => {\n                            if (isPendingTxn(pendingTransactions, \"bond_\" + bond.name)) return;\n                            await onBond();\n                        }}\n                    >\n                        <p>{txnButtonText(pendingTransactions, \"bond_\" + bond.name, \"Mint\")}</p>\n                    </div>\n                ) : (\n                    <div\n                        className=\"transaction-button bond-approve-btn\"\n                        onClick={async () => {\n                            if (isPendingTxn(pendingTransactions, \"approve_\" + bond.name)) return;\n                            await onSeekApproval();\n                        }}\n                    >\n                        <p>{txnButtonText(pendingTransactions, \"approve_\" + bond.name, \"Approve\")}</p>\n                    </div>\n                )}\n\n                {/* <div className=\"transaction-button bond-approve-btn\" onClick={handleZapinOpen}>\n                    <p>Zap</p>\n                </div> */}\n\n                {!hasAllowance() && !useAvax && (\n                    <div className=\"help-text\">\n                        <p className=\"help-text-desc\">\n                            Note: The \"Approve\" transaction is only needed when minting for the first time; subsequent minting only requires you to perform the \"Mint\" transaction.\n                        </p>\n                    </div>\n                )}\n            </Box>\n\n            <Slide direction=\"left\" in={true} mountOnEnter unmountOnExit {...{ timeout: 533 }}>\n                <Box className=\"bond-data\">\n                    <div className=\"data-row\">\n                        <p className=\"bond-balance-title\">Your Balance</p>\n                        <p className=\"bond-balance-title\">\n                            {isBondLoading ? (\n                                <Skeleton width=\"100px\" />\n                            ) : (\n                                <>\n                                    {trim(useAvax ? bond.avaxBalance : bond.balance, 4)} {displayUnits}\n                                </>\n                            )}\n                        </p>\n                    </div>\n\n                    <div className=\"data-row\">\n                        <p className=\"bond-balance-title\">You Will Get</p>\n                        <p className=\"price-data bond-balance-title\">{isBondLoading ? <Skeleton width=\"100px\" /> : `${trim(bond.bondQuote, 2)} NORO`}</p>\n                    </div>\n\n                    <div className=\"data-row\">\n                        <p className=\"bond-balance-title\">ROI</p>\n                        <p className=\"bond-balance-title\">{isBondLoading ? <Skeleton width=\"100px\" /> : `${trim(bond.bondDiscount * 100, 2)}%`}</p>\n                    </div>\n\n                    <div className=\"data-row\">\n                        <p className=\"bond-balance-title\">Vesting Term</p>\n                        <p className=\"bond-balance-title\">{isBondLoading ? <Skeleton width=\"100px\" /> : vestingPeriod()}</p>\n                    </div>\n\n                    <div className=\"data-row\">\n                        <p className=\"bond-balance-title\">Minimum purchase</p>\n                        <p className=\"bond-balance-title\">0.01 NORO</p>\n                    </div>\n\n                    <div className={`data-row`}>\n                        <p className=\"bond-balance-title\">Max You Can Buy</p>\n                        <p className=\"price-data bond-balance-title\">{isBondLoading ? <Skeleton width=\"100px\" /> : `${trim(bond.maxBondPrice, 2)} NORO`}</p>\n                    </div>\n                </Box>\n            </Slide>\n            {/* <Zapin open={zapinOpen} handleClose={handleZapinClose} bond={bond} />*/}\n        </Box>\n    );\n}\n\nexport default BondPurchase;\n","import { useEffect, useState } from \"react\";\n\nexport default function useDebounce(value: any, delay: number) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value]);\n\n    return debouncedValue;\n}\n","import { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { trim } from \"../../helpers\";\nimport { Grid, Backdrop, Box, Fade } from \"@material-ui/core\";\nimport TabPanel from \"../../components/TabPanel\";\nimport BondHeader from \"./BondHeader\";\nimport BondRedeem from \"./BondRedeem\";\nimport BondPurchase from \"./BondPurchase\";\nimport BondWithdraw from \"./BondWithdraw\";\nimport \"./bond.scss\";\nimport { useWeb3Context } from \"../../hooks\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { IReduxState } from \"../../store/slices/state.interface\";\nimport { IAllBondData } from \"../../hooks/bonds\";\nimport classnames from \"classnames\";\n\ninterface IBondProps {\n    bond: IAllBondData;\n}\n\nfunction Bond({ bond }: IBondProps) {\n    const { address } = useWeb3Context();\n\n    const [slippage, setSlippage] = useState(0.5);\n\n    const [view, setView] = useState(0);\n\n    const isBondLoading = useSelector<IReduxState, boolean>(state => state.bonding.loading ?? true);\n\n    const onSlippageChange = (value: any) => {\n        return setSlippage(value);\n    };\n\n    const changeView = (newView: number) => () => {\n        setView(newView);\n    };\n\n    return (\n        <Fade in={true} mountOnEnter unmountOnExit>\n            <Grid className=\"bond-view\">\n                <Backdrop open={true}>\n                    <Fade in={true}>\n                        <div className=\"bond-card\">\n                            <BondHeader bond={bond} slippage={slippage} onSlippageChange={onSlippageChange} />\n                            {/* @ts-ignore */}\n                            <Box direction=\"row\" className=\"bond-price-data-row\">\n                                <div className=\"bond-price-data\">\n                                    <p className=\"bond-price-data-title\">Bond Price</p>\n                                    <p className=\"bond-price-data-value\">{isBondLoading ? <Skeleton /> : `$${trim(bond.marketPrice, 2)}`}</p>\n                                </div>\n                                <div className=\"bond-price-data\">\n                                    <p className=\"bond-price-data-title\">Market Price</p>\n                                    <p className=\"bond-price-data-value\">{isBondLoading ? <Skeleton /> : `$${trim(bond.marketPrice, 2)}`}</p>\n                                </div>\n                            </Box>\n\n                            <div className=\"bond-one-table\">\n                                <div className={classnames(\"bond-one-table-btn\", { active: view == 0 })} onClick={changeView(0)}>\n                                    <p>Bond</p>\n                                </div>\n                                <div className={classnames(\"bond-one-table-btn\", { active: view == 1 })} onClick={changeView(1)}>\n                                    <p>Redeem</p>\n                                </div>\n                            </div>\n\n                            <TabPanel value={view} index={0}>\n                                <BondPurchase bond={bond} slippage={slippage} />\n                            </TabPanel>\n\n                            <TabPanel value={view} index={1}>\n                                <BondRedeem bond={bond} />\n                            </TabPanel>\n                        </div>\n                    </Fade>\n                </Backdrop>\n            </Grid>\n        </Fade>\n    );\n}\n\nexport default Bond;\n","import { priceUnits, trim } from \"../../helpers\";\nimport BondLogo from \"../../components/BondLogo\";\nimport { Paper, TableRow, TableCell, Slide, Link } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./choosebond.scss\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { IAllBondData } from \"../../hooks/bonds\";\n\ninterface IBondProps {\n    bond: IAllBondData;\n}\n\nexport function BondDataCard({ bond }: IBondProps) {\n    const isBondLoading = !bond.bondPrice ?? true;\n\n    return (\n        <Slide direction=\"up\" in={true}>\n            <Paper className=\"bond-data-card\">\n                <div className=\"bond-pair\">\n                    <BondLogo bond={bond} />\n                    <div className=\"bond-name\">\n                        <p className=\"bond-name-title\">{bond.displayName}</p>\n                        {bond.isLP && (\n                            <div>\n                                <Link href={bond.lpUrl} target=\"_blank\">\n                                    <p className=\"bond-name-title\">View Contract</p>\n                                </Link>\n                            </div>\n                        )}\n                    </div>\n                </div>\n\n                <div className=\"data-row\">\n                    <p className=\"bond-name-title\">Price</p>\n                    <p className=\"bond-price bond-name-title\">\n                        <>\n                            {priceUnits(bond)} {isBondLoading ? <Skeleton width=\"50px\" /> : trim(bond.bondPrice, 2)}\n                        </>\n                    </p>\n                </div>\n\n                <div className=\"data-row\">\n                    <p className=\"bond-name-title\">ROI</p>\n                    <p className=\"bond-name-title\">{isBondLoading ? <Skeleton width=\"50px\" /> : `${trim(bond.bondDiscount * 100, 2)}%`}</p>\n                </div>\n\n                <div className=\"data-row\">\n                    <p className=\"bond-name-title\">Purchased</p>\n                    <p className=\"bond-name-title\">\n                        {isBondLoading ? (\n                            <Skeleton width=\"80px\" />\n                        ) : (\n                            new Intl.NumberFormat(\"en-US\", {\n                                style: \"currency\",\n                                currency: \"USD\",\n                                maximumFractionDigits: 0,\n                                minimumFractionDigits: 0,\n                            }).format(bond.purchased)\n                        )}\n                    </p>\n                </div>\n                <Link component={NavLink} to={`/bonds/${bond.name}`}>\n                    <div className=\"bond-table-btn\">\n                        <p>Mint {bond.displayName}</p>\n                    </div>\n                </Link>\n            </Paper>\n        </Slide>\n    );\n}\n\nexport function BondTableData({ bond }: IBondProps) {\n    const isBondLoading = !bond.bondPrice ?? true;\n\n    return (\n        <TableRow>\n            <TableCell align=\"left\">\n                <BondLogo bond={bond} />\n                <div className=\"bond-name\">\n                    <p className=\"bond-name-title\">{bond.displayName}</p>\n                    {bond.isLP && (\n                        <Link color=\"primary\" href={bond.lpUrl} target=\"_blank\">\n                            <p className=\"bond-name-title\">View Contract</p>\n                        </Link>\n                    )}\n                </div>\n            </TableCell>\n            <TableCell align=\"center\">\n                <p className=\"bond-name-title\">\n                    <>\n                        <span className=\"currency-icon\">{priceUnits(bond)}</span> {isBondLoading ? <Skeleton width=\"50px\" /> : trim(bond.bondPrice, 2)}\n                    </>\n                </p>\n            </TableCell>\n            <TableCell align=\"right\">\n                <p className=\"bond-name-title\">{isBondLoading ? <Skeleton width=\"50px\" /> : `${trim(bond.bondDiscount * 100, 2)}%`}</p>\n            </TableCell>\n            <TableCell align=\"right\">\n                <p className=\"bond-name-title\">\n                    {isBondLoading ? (\n                        <Skeleton width=\"50px\" />\n                    ) : (\n                        new Intl.NumberFormat(\"en-US\", {\n                            style: \"currency\",\n                            currency: \"USD\",\n                            maximumFractionDigits: 2,\n                            minimumFractionDigits: 2,\n                        }).format(bond.purchased)\n                    )}\n                </p>\n            </TableCell>\n            <TableCell>\n                <Link component={NavLink} to={`/bonds/${bond.name}`}>\n                    <div className=\"bond-table-btn\">\n                        <p>Bond</p>\n                    </div>\n                </Link>\n            </TableCell>\n        </TableRow>\n    );\n}\n","import { SvgIcon } from \"@material-ui/core\";\nimport { ReactComponent as MimImg } from \"../assets/tokens/MIM.svg\";\nimport { IAllBondData } from \"../hooks/bonds\";\nimport { bend } from \"../helpers/bond\";\n\nexport const priceUnits = (bond: IAllBondData) => {\n    // if (bond.name === mim.name) return <SvgIcon component={MimImg} viewBox=\"0 0 32 32\" style={{ height: \"15px\", width: \"15px\" }} />;\n\n    return \"$\";\n};\n","import { useSelector } from \"react-redux\";\nimport { Paper, Grid, Box, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Zoom } from \"@material-ui/core\";\nimport { BondTableData, BondDataCard } from \"./BondRow\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { trim } from \"../../helpers\";\nimport useBonds from \"../../hooks/bonds\";\nimport \"./choosebond.scss\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { IReduxState } from \"../../store/slices/state.interface\";\n\nfunction ChooseBond() {\n    const { bonds } = useBonds();\n    const isSmallScreen = useMediaQuery(\"(max-width: 733px)\"); // change to breakpoint query\n\n    const isAppLoading = useSelector<IReduxState, boolean>(state => state.app.loading);\n    const marketPrice = useSelector<IReduxState, number>(state => {\n        return state.app.marketPrice;\n    });\n\n    const treasuryBalance = useSelector<IReduxState, number>(state => {\n        return state.app.treasuryBalance;\n    });\n\n    return (\n        <div className=\"choose-bond-view\">\n            <Zoom in={true}>\n                <div className=\"choose-bond-view-card\">\n                    <div className=\"choose-bond-view-card-header\">\n                        <p className=\"choose-bond-view-card-title\"> Bond (1, 1)</p>\n                    </div>\n\n                    <Grid container item xs={12} spacing={2} className=\"choose-bond-view-card-metrics\">\n                        <Grid item xs={12} sm={6}>\n                            <Box textAlign=\"center\">\n                                <p className=\"choose-bond-view-card-metrics-title\">Treasury Balance</p>\n                                <p className=\"choose-bond-view-card-metrics-value\">\n                                    {isAppLoading ? (\n                                        <Skeleton width=\"180px\" />\n                                    ) : (\n                                        new Intl.NumberFormat(\"en-US\", {\n                                            style: \"currency\",\n                                            currency: \"USD\",\n                                            maximumFractionDigits: 2,\n                                            minimumFractionDigits: 2,\n                                        }).format(treasuryBalance)\n                                    )}\n                                </p>\n                            </Box>\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <Box textAlign=\"center\">\n                                <p className=\"choose-bond-view-card-metrics-title\">NORO Price</p>\n                                <p className=\"choose-bond-view-card-metrics-value\">{isAppLoading ? <Skeleton width=\"100px\" /> : `$${trim(marketPrice, 2)}`}</p>\n                            </Box>\n                        </Grid>\n                    </Grid>\n\n                    {!isSmallScreen && (\n                        <Grid container item>\n                            <TableContainer className=\"choose-bond-view-card-table\">\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell align=\"center\">\n                                                <p className=\"choose-bond-view-card-table-title\">Bond</p>\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                <p className=\"choose-bond-view-card-table-title\">Price</p>\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                <p className=\"choose-bond-view-card-table-title\">ROI</p>\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                <p className=\"choose-bond-view-card-table-title\">Purchased</p>\n                                            </TableCell>\n                                            <TableCell align=\"right\"></TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {bonds.map(bond => (\n                                            <BondTableData key={bond.name} bond={bond} />\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </Grid>\n                    )}\n                </div>\n            </Zoom>\n\n            {isSmallScreen && (\n                <div className=\"choose-bond-view-card-container\">\n                    <Grid container item spacing={2}>\n                        {bonds.map(bond => (\n                            <Grid item xs={12} key={bond.name}>\n                                <BondDataCard key={bond.name} bond={bond} />\n                            </Grid>\n                        ))}\n                    </Grid>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ChooseBond;\n","import { useSelector } from \"react-redux\";\nimport { secondsUntilBlock, prettifySeconds } from \"../../helpers\";\nimport { Box } from \"@material-ui/core\";\nimport \"./rebasetimer.scss\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { useMemo } from \"react\";\nimport { IReduxState } from \"../../store/slices/state.interface\";\n\nfunction RebaseTimer() {\n    const currentBlockTime = useSelector<IReduxState, number>(state => {\n        return state.app.currentBlockTime;\n    });\n\n    const nextRebase = useSelector<IReduxState, number>(state => {\n        return state.app.nextRebase;\n    });\n\n    const timeUntilRebase = useMemo(() => {\n        if (currentBlockTime && nextRebase) {\n            const seconds = secondsUntilBlock(currentBlockTime, nextRebase);\n            return prettifySeconds(seconds);\n        }\n    }, [currentBlockTime, nextRebase]);\n\n    return (\n        <Box className=\"rebase-timer\">\n            <p>\n                {currentBlockTime ? (\n                    timeUntilRebase ? (\n                        <>\n                            <strong>{timeUntilRebase}</strong> to Next Rebase\n                        </>\n                    ) : (\n                        <strong>Rebasing</strong>\n                    )\n                ) : (\n                    <Skeleton width=\"200px\" />\n                )}\n            </p>\n        </Box>\n    );\n}\n\nexport default RebaseTimer;\n","import { ethers } from \"ethers\";\nimport { getAddresses } from \"../../constants\";\nimport { StakingHelperContract, SabTokenContract, SSabTokenContract, StakingContract } from \"../../abi\";\nimport { clearPendingTxn, fetchPendingTxns, getStakingTypeText } from \"./pending-txns-slice\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { loadAppDetails } from \"./app-slice\";\nimport { fetchAccountSuccess, getBalances } from \"./account-slice\";\nimport { JsonRpcProvider, StaticJsonRpcProvider } from \"@ethersproject/providers\";\nimport { Networks } from \"../../constants/blockchain\";\nimport { warning, success, info, error } from \"../../store/slices/messages-slice\";\nimport { messages } from \"../../constants/messages\";\nimport { getGasPrice } from \"../../helpers/get-gas-price\";\nimport { metamaskErrorWrap } from \"../../helpers/metamask-error-wrap\";\nimport { sleep } from \"../../helpers\";\n\ninterface IChangeApproval {\n    token: string;\n    provider: StaticJsonRpcProvider | JsonRpcProvider;\n    address: string;\n    networkID: Networks;\n}\n\nexport const changeApproval = createAsyncThunk(\"stake/changeApproval\", async ({ token, provider, address, networkID }: IChangeApproval, { dispatch }) => {\n    if (!provider) {\n        dispatch(warning({ text: messages.please_connect_wallet }));\n        return;\n    }\n    const addresses = getAddresses(networkID);\n\n    const signer = provider.getSigner();\n    const sabContract = new ethers.Contract(addresses.NORO_ADDRESS, SabTokenContract, signer);\n    const ssabContract = new ethers.Contract(addresses.SNORO_ADDRESS, SSabTokenContract, signer);\n\n    let approveTx;\n    try {\n        const gasPrice = await getGasPrice(provider);\n\n        if (token === \"sab\") {\n            approveTx = await sabContract.approve(addresses.STAKING_HELPER_ADDRESS, ethers.constants.MaxUint256, { gasPrice });\n        }\n\n        if (token === \"ssab\") {\n            approveTx = await ssabContract.approve(addresses.STAKING_ADDRESS, ethers.constants.MaxUint256, { gasPrice });\n        }\n\n        const text = \"Approve \" + (token === \"sab\" ? \"Staking\" : \"Unstaking\");\n        const pendingTxnType = token === \"sab\" ? \"approve_staking\" : \"approve_unstaking\";\n\n        dispatch(fetchPendingTxns({ txnHash: approveTx.hash, text, type: pendingTxnType }));\n        await approveTx.wait();\n        dispatch(success({ text: messages.tx_successfully_send }));\n    } catch (err: any) {\n        return metamaskErrorWrap(err, dispatch);\n    } finally {\n        if (approveTx) {\n            dispatch(clearPendingTxn(approveTx.hash));\n        }\n    }\n\n    await sleep(2);\n\n    const stakeAllowance = await sabContract.allowance(address, addresses.STAKING_HELPER_ADDRESS);\n    const unstakeAllowance = await ssabContract.allowance(address, addresses.STAKING_ADDRESS);\n\n    return dispatch(\n        fetchAccountSuccess({\n            staking: {\n                sab: Number(stakeAllowance),\n                ssab: Number(unstakeAllowance),\n            },\n        }),\n    );\n});\n\ninterface IChangeStake {\n    action: string;\n    value: string;\n    provider: StaticJsonRpcProvider | JsonRpcProvider;\n    address: string;\n    networkID: Networks;\n}\n\nexport const changeStake = createAsyncThunk(\"stake/changeStake\", async ({ action, value, provider, address, networkID }: IChangeStake, { dispatch }) => {\n    if (!provider) {\n        dispatch(warning({ text: messages.please_connect_wallet }));\n        return;\n    }\n    const addresses = getAddresses(networkID);\n    const signer = provider.getSigner();\n    const staking = new ethers.Contract(addresses.STAKING_ADDRESS, StakingContract, signer);\n    const stakingHelper = new ethers.Contract(addresses.STAKING_HELPER_ADDRESS, StakingHelperContract, signer);\n\n    let stakeTx;\n\n    try {\n        const gasPrice = await getGasPrice(provider);\n\n        if (action === \"stake\") {\n            stakeTx = await stakingHelper.stake(ethers.utils.parseUnits(value, \"gwei\"), address, { gasPrice });\n        } else {\n            stakeTx = await staking.unstake(ethers.utils.parseUnits(value, \"gwei\"), true, { gasPrice });\n        }\n        const pendingTxnType = action === \"stake\" ? \"staking\" : \"unstaking\";\n        dispatch(fetchPendingTxns({ txnHash: stakeTx.hash, text: getStakingTypeText(action), type: pendingTxnType }));\n        await stakeTx.wait();\n        dispatch(success({ text: messages.tx_successfully_send }));\n    } catch (err: any) {\n        return metamaskErrorWrap(err, dispatch);\n    } finally {\n        if (stakeTx) {\n            dispatch(clearPendingTxn(stakeTx.hash));\n        }\n    }\n    dispatch(info({ text: messages.your_balance_update_soon }));\n    await sleep(10);\n    await dispatch(getBalances({ address, networkID, provider }));\n    await dispatch(loadAppDetails({ networkID, provider }));\n    dispatch(info({ text: messages.your_balance_updated }));\n    return;\n});\n","import { useState, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid, InputAdornment, OutlinedInput, Zoom } from \"@material-ui/core\";\nimport RebaseTimer from \"../../components/RebaseTimer\";\nimport { trim } from \"../../helpers\";\nimport { changeStake, changeApproval } from \"../../store/slices/stake-thunk\";\nimport \"./stake.scss\";\nimport { useWeb3Context } from \"../../hooks\";\nimport { IPendingTxn, isPendingTxn, txnButtonText } from \"../../store/slices/pending-txns-slice\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { IReduxState } from \"../../store/slices/state.interface\";\nimport { messages } from \"../../constants/messages\";\nimport classnames from \"classnames\";\nimport { warning } from \"../../store/slices/messages-slice\";\n\nfunction Stake() {\n    const dispatch = useDispatch();\n    const { provider, address, connect, chainID, checkWrongNetwork } = useWeb3Context();\n\n    const [view, setView] = useState(0);\n    const [quantity, setQuantity] = useState<string>(\"\");\n\n    const isAppLoading = useSelector<IReduxState, boolean>(state => state.app.loading);\n    const currentIndex = useSelector<IReduxState, string>(state => {\n        return state.app.currentIndex;\n    });\n    const fiveDayRate = useSelector<IReduxState, number>(state => {\n        return state.app.fiveDayRate;\n    });\n    const timeBalance = useSelector<IReduxState, string>(state => {\n        return state.account.balances && state.account.balances.sab;\n    });\n    const memoBalance = useSelector<IReduxState, string>(state => {\n        return state.account.balances && state.account.balances.ssab;\n    });\n    const stakeAllowance = useSelector<IReduxState, number>(state => {\n        return state.account.staking && state.account.staking.sab;\n    });\n    const unstakeAllowance = useSelector<IReduxState, number>(state => {\n        return state.account.staking && state.account.staking.ssab;\n    });\n    const stakingRebase = useSelector<IReduxState, number>(state => {\n        return state.app.stakingRebase;\n    });\n    const stakingAPY = useSelector<IReduxState, number>(state => {\n        return state.app.stakingAPY;\n    });\n    const stakingTVL = useSelector<IReduxState, number>(state => {\n        return state.app.stakingTVL;\n    });\n\n    const pendingTransactions = useSelector<IReduxState, IPendingTxn[]>(state => {\n        return state.pendingTransactions;\n    });\n\n    const setMax = () => {\n        if (view === 0) {\n            setQuantity(timeBalance);\n        } else {\n            setQuantity(memoBalance);\n        }\n    };\n\n    const onSeekApproval = async (token: string) => {\n        if (await checkWrongNetwork()) return;\n\n        await dispatch(changeApproval({ address, token, provider, networkID: chainID }));\n    };\n\n    const onChangeStake = async (action: string) => {\n        if (await checkWrongNetwork()) return;\n        if (quantity === \"\" || parseFloat(quantity) === 0) {\n            dispatch(warning({ text: action === \"stake\" ? messages.before_stake : messages.before_unstake }));\n        } else {\n            await dispatch(changeStake({ address, action, value: String(quantity), provider, networkID: chainID }));\n            setQuantity(\"\");\n        }\n    };\n\n    const hasAllowance = useCallback(\n        token => {\n            if (token === \"sab\") return stakeAllowance > 0;\n            if (token === \"ssab\") return unstakeAllowance > 0;\n            return 0;\n        },\n        [stakeAllowance],\n    );\n\n    const changeView = (newView: number) => () => {\n        setView(newView);\n        setQuantity(\"\");\n    };\n\n    const trimmedMemoBalance = trim(Number(memoBalance), 6);\n    const trimmedStakingAPY = trim(stakingAPY * 100, 1);\n    const stakingRebasePercentage = trim(stakingRebase * 100, 4);\n    const nextRewardValue = trim((Number(stakingRebasePercentage) / 100) * Number(trimmedMemoBalance), 6);\n\n    return (\n        <div className=\"stake-view\">\n            <Zoom in={true}>\n                <div className=\"stake-card\">\n                    <Grid className=\"stake-card-grid\" container direction=\"column\" spacing={2}>\n                        <Grid item>\n                            <div className=\"stake-card-header\">\n                                <p className=\"stake-card-header-title\">NORO Staking (3, 3)</p>\n                                <RebaseTimer />\n                            </div>\n                        </Grid>\n\n                        <Grid item>\n                            <div className=\"stake-card-metrics\">\n                                <Grid container spacing={2}>\n                                    <Grid item xs={12} sm={4} md={4} lg={4}>\n                                        <div className=\"stake-card-apy\">\n                                            <p className=\"stake-card-metrics-title\">APY</p>\n                                            <p className=\"stake-card-metrics-value\">\n                                                {stakingAPY ? <>{new Intl.NumberFormat(\"en-US\").format(Number(trimmedStakingAPY))}%</> : <Skeleton width=\"150px\" />}\n                                            </p>\n                                        </div>\n                                    </Grid>\n\n                                    <Grid item xs={6} sm={4} md={4} lg={4}>\n                                        <div className=\"stake-card-tvl\">\n                                            <p className=\"stake-card-metrics-title\">Total Value Locked</p>\n                                            <p className=\"stake-card-metrics-value\">\n                                                {stakingTVL ? (\n                                                    new Intl.NumberFormat(\"en-US\", {\n                                                        style: \"currency\",\n                                                        currency: \"USD\",\n                                                        maximumFractionDigits: 2,\n                                                        minimumFractionDigits: 2,\n                                                    }).format(stakingTVL)\n                                                ) : (\n                                                    <Skeleton width=\"150px\" />\n                                                )}\n                                            </p>\n                                        </div>\n                                    </Grid>\n\n                                    <Grid item xs={6} sm={4} md={4} lg={4}>\n                                        <div className=\"stake-card-index\">\n                                            <p className=\"stake-card-metrics-title\">Current Index</p>\n                                            <p className=\"stake-card-metrics-value\">{currentIndex ? <>{trim(Number(currentIndex), 2)} NORO</> : <Skeleton width=\"150px\" />}</p>\n                                        </div>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </Grid>\n\n                        <div className=\"stake-card-area\">\n                            {!address && (\n                                <div className=\"stake-card-wallet-notification\">\n                                    <div className=\"stake-card-wallet-connect-btn\" onClick={connect}>\n                                        <p>Connect Wallet</p>\n                                    </div>\n                                    <p className=\"stake-card-wallet-desc-text\">Connect your wallet to stake NORO tokens!</p>\n                                </div>\n                            )}\n                            {address && (\n                                <div>\n                                    <div className=\"stake-card-action-area\">\n                                        <div className=\"stake-card-action-stage-btns-wrap\">\n                                            <div onClick={changeView(0)} className={classnames(\"stake-card-action-stage-btn\", { active: !view })}>\n                                                <p>Stake</p>\n                                            </div>\n                                            <div onClick={changeView(1)} className={classnames(\"stake-card-action-stage-btn\", { active: view })}>\n                                                <p>Unstake</p>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"stake-card-action-row\">\n                                            <OutlinedInput\n                                                type=\"number\"\n                                                placeholder=\"Amount\"\n                                                className=\"stake-card-action-input\"\n                                                value={quantity}\n                                                onChange={e => setQuantity(e.target.value)}\n                                                labelWidth={0}\n                                                endAdornment={\n                                                    <InputAdornment position=\"end\">\n                                                        <div onClick={setMax} className=\"stake-card-action-input-btn\">\n                                                            <p>Max</p>\n                                                        </div>\n                                                    </InputAdornment>\n                                                }\n                                            />\n\n                                            {view === 0 && (\n                                                <div className=\"stake-card-tab-panel\">\n                                                    {address && hasAllowance(\"sab\") ? (\n                                                        <div\n                                                            className=\"stake-card-tab-panel-btn\"\n                                                            onClick={() => {\n                                                                if (isPendingTxn(pendingTransactions, \"staking\")) return;\n                                                                onChangeStake(\"stake\");\n                                                            }}\n                                                        >\n                                                            <p>{txnButtonText(pendingTransactions, \"staking\", \"Stake NORO\")}</p>\n                                                        </div>\n                                                    ) : (\n                                                        <div\n                                                            className=\"stake-card-tab-panel-btn\"\n                                                            onClick={() => {\n                                                                if (isPendingTxn(pendingTransactions, \"approve_staking\")) return;\n                                                                onSeekApproval(\"sab\");\n                                                            }}\n                                                        >\n                                                            <p>{txnButtonText(pendingTransactions, \"approve_staking\", \"Approve\")}</p>\n                                                        </div>\n                                                    )}\n                                                </div>\n                                            )}\n\n                                            {view === 1 && (\n                                                <div className=\"stake-card-tab-panel\">\n                                                    {address && hasAllowance(\"ssab\") ? (\n                                                        <div\n                                                            className=\"stake-card-tab-panel-btn\"\n                                                            onClick={() => {\n                                                                if (isPendingTxn(pendingTransactions, \"unstaking\")) return;\n                                                                onChangeStake(\"unstake\");\n                                                            }}\n                                                        >\n                                                            <p>{txnButtonText(pendingTransactions, \"unstaking\", \"Unstake NORO\")}</p>\n                                                        </div>\n                                                    ) : (\n                                                        <div\n                                                            className=\"stake-card-tab-panel-btn\"\n                                                            onClick={() => {\n                                                                if (isPendingTxn(pendingTransactions, \"approve_unstaking\")) return;\n                                                                onSeekApproval(\"ssab\");\n                                                            }}\n                                                        >\n                                                            <p>{txnButtonText(pendingTransactions, \"approve_unstaking\", \"Approve\")}</p>\n                                                        </div>\n                                                    )}\n                                                </div>\n                                            )}\n                                        </div>\n\n                                        <div className=\"stake-card-action-help-text\">\n                                            {address && ((!hasAllowance(\"sab\") && view === 0) || (!hasAllowance(\"ssab\") && view === 1)) && (\n                                                <p>\n                                                    Note: The \"Approve\" transaction is only needed when staking/unstaking for the first sab; subsequent staking/unstaking only\n                                                    requires you to perform the \"Stake\" or \"Unstake\" transaction.\n                                                </p>\n                                            )}\n                                        </div>\n                                    </div>\n\n                                    <div className=\"stake-user-data\">\n                                        <div className=\"data-row\">\n                                            <p className=\"data-row-name\">Your Balance</p>\n                                            <p className=\"data-row-value\">{isAppLoading ? <Skeleton width=\"80px\" /> : <>{trim(Number(timeBalance), 4)} NORO</>}</p>\n                                        </div>\n\n                                        <div className=\"data-row\">\n                                            <p className=\"data-row-name\">Your Staked Balance</p>\n                                            <p className=\"data-row-value\">{isAppLoading ? <Skeleton width=\"80px\" /> : <>{trimmedMemoBalance} sNORO</>}</p>\n                                        </div>\n\n                                        <div className=\"data-row\">\n                                            <p className=\"data-row-name\">Next Reward Amount</p>\n                                            <p className=\"data-row-value\">{isAppLoading ? <Skeleton width=\"80px\" /> : <>{nextRewardValue} sNORO</>}</p>\n                                        </div>\n\n                                        <div className=\"data-row\">\n                                            <p className=\"data-row-name\">Next Reward Yield</p>\n                                            <p className=\"data-row-value\">{isAppLoading ? <Skeleton width=\"80px\" /> : <>{stakingRebasePercentage}%</>}</p>\n                                        </div>\n\n                                        <div className=\"data-row\">\n                                            <p className=\"data-row-name\">ROI (5-Day Rate)</p>\n                                            <p className=\"data-row-value\">{isAppLoading ? <Skeleton width=\"80px\" /> : <>{trim(Number(fiveDayRate) * 100, 4)}%</>}</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </Grid>\n                </div>\n            </Zoom>\n        </div>\n    );\n}\n\nexport default Stake;\n","import { useSelector } from \"react-redux\";\nimport { Grid, Zoom } from \"@material-ui/core\";\nimport { trim } from \"../../helpers\";\nimport \"./dashboard.scss\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { IReduxState } from \"../../store/slices/state.interface\";\nimport { IAppSlice } from \"../../store/slices/app-slice\";\n\nfunction Dashboard() {\n    const isAppLoading = useSelector<IReduxState, boolean>(state => state.app.loading);\n    const app = useSelector<IReduxState, IAppSlice>(state => state.app);\n\n    const trimmedStakingAPY = trim(app.stakingAPY * 100, 1);\n\n    return (\n        <div className=\"dashboard-view\">\n            <div className=\"dashboard-infos-wrap\">\n                <Zoom in={true}>\n                    <Grid container spacing={4}>\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">Market Cap</p>\n                                <p className=\"card-value\">\n                                    {isAppLoading ? (\n                                        <Skeleton width=\"160px\" />\n                                    ) : (\n                                        new Intl.NumberFormat(\"en-US\", {\n                                            style: \"currency\",\n                                            currency: \"USD\",\n                                            maximumFractionDigits: 0,\n                                            minimumFractionDigits: 0,\n                                        }).format(app.marketCap)\n                                    )}\n                                </p>\n                            </div>\n                        </Grid>\n\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">NORO Price</p>\n                                <p className=\"card-value\">{isAppLoading ? <Skeleton width=\"100px\" /> : `$${trim(app.marketPrice, 2)}`}</p>\n                            </div>\n                        </Grid>\n\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">Total Value Locked</p>\n                                <p className=\"card-value\">\n                                    {isAppLoading ? (\n                                        <Skeleton width=\"250px\" />\n                                    ) : (\n                                        new Intl.NumberFormat(\"en-US\", {\n                                            style: \"currency\",\n                                            currency: \"USD\",\n                                            maximumFractionDigits: 2,\n                                            minimumFractionDigits: 2,\n                                        }).format(app.stakingTVL)\n                                    )}\n                                </p>\n                            </div>\n                        </Grid>\n\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">Supply (Staked/Total)</p>\n                                <p className=\"card-value\">\n                                    {isAppLoading ? (\n                                        <Skeleton width=\"250px\" />\n                                    ) : (\n                                        `${new Intl.NumberFormat(\"en-US\", {\n                                            maximumFractionDigits: 0,\n                                            minimumFractionDigits: 0,\n                                        }).format(app.circSupply)}\n                                        /\n                                        ${new Intl.NumberFormat(\"en-US\", {\n                                            maximumFractionDigits: 0,\n                                            minimumFractionDigits: 0,\n                                        }).format(app.totalSupply)}`\n                                    )}\n                                </p>\n                            </div>\n                        </Grid>\n\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">Treasury Balance</p>\n                                <p className=\"card-value\">\n                                    {isAppLoading ? (\n                                        <Skeleton width=\"250px\" />\n                                    ) : (\n                                        new Intl.NumberFormat(\"en-US\", {\n                                            style: \"currency\",\n                                            currency: \"USD\",\n                                            maximumFractionDigits: 2,\n                                            minimumFractionDigits: 2,\n                                        }).format(app.treasuryBalance)\n                                    )}\n                                </p>\n                            </div>\n                        </Grid>\n\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">Staking APY</p>\n                                <p className=\"card-value\">{isAppLoading ? <Skeleton width=\"250px\" /> : `${new Intl.NumberFormat(\"en-US\").format(Number(trimmedStakingAPY))}%`}</p>\n                            </div>\n                        </Grid>\n\n                        {/* <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">Runway</p>\n                                <p className=\"card-value\">{isAppLoading ? <Skeleton width=\"250px\" /> : `${trim(Number(app.runway), 1)} Days`}</p>\n                            </div>\n                        </Grid> */}\n\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">Backing per NORO</p>\n                                <p className=\"card-value\">\n                                    {isAppLoading ? (\n                                        <Skeleton width=\"250px\" />\n                                    ) : (\n                                        new Intl.NumberFormat(\"en-US\", {\n                                            style: \"currency\",\n                                            currency: \"USD\",\n                                            maximumFractionDigits: 2,\n                                            minimumFractionDigits: 2,\n                                        }).format(app.rfv)\n                                    )}\n                                </p>\n                            </div>\n                        </Grid>\n\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">Current Index</p>\n                                <p className=\"card-value\">{isAppLoading ? <Skeleton width=\"250px\" /> : `${trim(Number(app.currentIndex), 2)} NORO`}</p>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Zoom>\n            </div>\n        </div>\n    );\n}\n\nexport default Dashboard;\n","import \"./notfound.scss\";\n\nfunction NotFound() {\n    return (\n        <div className=\"not-found-page\">\n            <p>Page not found</p>\n        </div>\n    );\n}\n\nexport default NotFound;\n","import React, { useEffect, useState } from \"react\";\nimport \"./calculator.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useWeb3Context } from \"../../hooks\";\nimport { Grid, InputAdornment, OutlinedInput, Zoom, Slider } from \"@material-ui/core\";\nimport { IReduxState } from \"../../store/slices/state.interface\";\nimport { trim } from \"../../helpers\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nfunction Calculator() {\n    const isAppLoading = useSelector<IReduxState, boolean>(state => state.app.loading);\n    const marketPrice = useSelector<IReduxState, number>(state => {\n        return state.app.marketPrice;\n    });\n    const stakingAPY = useSelector<IReduxState, number>(state => {\n        return state.app.stakingAPY;\n    });\n    const memoBalance = useSelector<IReduxState, string>(state => {\n        return state.account.balances && state.account.balances.ssab;\n    });\n\n    const trimmedStakingAPY = trim(stakingAPY * 100, 1);\n    const trimmedMemoBalance = trim(Number(memoBalance), 6);\n    const trimeMarketPrice = trim(marketPrice, 2);\n\n    const [memoAmount, setMemoAmount] = useState(trimmedMemoBalance);\n    const [rewardYield, setRewardYield] = useState(trimmedStakingAPY);\n    const [priceAtPurchase, setPriceAtPurchase] = useState(trimeMarketPrice);\n    const [futureMarketPrice, setFutureMarketPrice] = useState(trimeMarketPrice);\n    const [days, setDays] = useState(30);\n\n    const [rewardsEstimation, setRewardsEstimation] = useState(\"0\");\n    const [potentialReturn, setPotentialReturn] = useState(\"0\");\n\n    const calcInitialInvestment = () => {\n        const memo = Number(memoAmount) || 0;\n        const price = parseFloat(priceAtPurchase) || 0;\n        const amount = memo * price;\n        return trim(amount, 2);\n    };\n\n    const calcCurrentWealth = () => {\n        const memo = Number(memoAmount) || 0;\n        const price = parseFloat(trimeMarketPrice);\n        const amount = memo * price;\n        return trim(amount, 2);\n    };\n\n    const [initialInvestment, setInitialInvestment] = useState(calcInitialInvestment());\n\n    useEffect(() => {\n        const newInitialInvestment = calcInitialInvestment();\n        setInitialInvestment(newInitialInvestment);\n    }, [memoAmount, priceAtPurchase]);\n\n    const calcNewBalance = () => {\n        let value = parseFloat(rewardYield) / 100;\n        value = Math.pow(value + 1, 1 / (365 * 3)) - 1 || 0;\n        let balance = Number(memoAmount);\n        for (let i = 0; i < days * 3; i++) {\n            balance += balance * value;\n        }\n        return balance;\n    };\n\n    useEffect(() => {\n        const newBalance = calcNewBalance();\n        setRewardsEstimation(trim(newBalance, 6));\n        const newPotentialReturn = newBalance * (parseFloat(futureMarketPrice) || 0);\n        setPotentialReturn(trim(newPotentialReturn, 2));\n    }, [days, rewardYield, futureMarketPrice, memoAmount]);\n\n    return (\n        <div className=\"calculator-view\">\n            <Zoom in={true}>\n                <div className=\"calculator-card\">\n                    <Grid className=\"calculator-card-grid\" container direction=\"column\" spacing={2}>\n                        <Grid item>\n                            <div className=\"calculator-card-header\">\n                                <p className=\"calculator-card-header-title\">Calculator</p>\n                                <p className=\"calculator-card-header-subtitle\">Estimate your returns</p>\n                            </div>\n                        </Grid>\n                        <Grid item>\n                            <div className=\"calculator-card-metrics\">\n                                <Grid container spacing={2}>\n                                    <Grid item xs={12} sm={4} md={4} lg={4}>\n                                        <div className=\"calculator-card-apy\">\n                                            <p className=\"calculator-card-metrics-title\">NORO Price</p>\n                                            <p className=\"calculator-card-metrics-value\">{isAppLoading ? <Skeleton width=\"100px\" /> : `$${trimeMarketPrice}`}</p>\n                                        </div>\n                                    </Grid>\n                                    <Grid item xs={6} sm={4} md={4} lg={4}>\n                                        <div className=\"calculator-card-tvl\">\n                                            <p className=\"calculator-card-metrics-title\">Current APY</p>\n                                            <p className=\"calculator-card-metrics-value\">\n                                                {isAppLoading ? <Skeleton width=\"100px\" /> : <>{new Intl.NumberFormat(\"en-US\").format(Number(trimmedStakingAPY))}%</>}\n                                            </p>\n                                        </div>\n                                    </Grid>\n                                    <Grid item xs={6} sm={4} md={4} lg={4}>\n                                        <div className=\"calculator-card-index\">\n                                            <p className=\"calculator-card-metrics-title\">Your sNORO Balance</p>\n                                            <p className=\"calculator-card-metrics-value\">{isAppLoading ? <Skeleton width=\"100px\" /> : <>{trimmedMemoBalance} sNORO</>}</p>\n                                        </div>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </Grid>\n\n                        <div className=\"calculator-card-area\">\n                            <div>\n                                <div className=\"calculator-card-action-area\">\n                                    <Grid container spacing={3}>\n                                        <Grid item xs={12} sm={6}>\n                                            <div className=\"calculator-card-action-area-inp-wrap\">\n                                                <p className=\"calculator-card-action-area-inp-wrap-title\">sNORO Amount</p>\n                                                <OutlinedInput\n                                                    type=\"number\"\n                                                    placeholder=\"Amount\"\n                                                    className=\"calculator-card-action-input\"\n                                                    value={memoAmount}\n                                                    onChange={e => setMemoAmount(e.target.value)}\n                                                    labelWidth={0}\n                                                    endAdornment={\n                                                        <InputAdornment position=\"end\">\n                                                            <div onClick={() => setMemoAmount(trimmedMemoBalance)} className=\"stake-card-action-input-btn\">\n                                                                <p>Max</p>\n                                                            </div>\n                                                        </InputAdornment>\n                                                    }\n                                                />\n                                            </div>\n                                        </Grid>\n                                        <Grid item xs={12} sm={6}>\n                                            <div className=\"calculator-card-action-area-inp-wrap\">\n                                                <p className=\"calculator-card-action-area-inp-wrap-title\">APY (%)</p>\n                                                <OutlinedInput\n                                                    type=\"number\"\n                                                    placeholder=\"Amount\"\n                                                    className=\"calculator-card-action-input\"\n                                                    value={rewardYield}\n                                                    onChange={e => setRewardYield(e.target.value)}\n                                                    labelWidth={0}\n                                                    endAdornment={\n                                                        <InputAdornment position=\"end\">\n                                                            <div onClick={() => setRewardYield(trimmedStakingAPY)} className=\"stake-card-action-input-btn\">\n                                                                <p>Current</p>\n                                                            </div>\n                                                        </InputAdornment>\n                                                    }\n                                                />\n                                            </div>\n                                        </Grid>\n                                        <Grid item xs={12} sm={6}>\n                                            <div className=\"calculator-card-action-area-inp-wrap\">\n                                                <p className=\"calculator-card-action-area-inp-wrap-title\">NORO price at purchase ($)</p>\n                                                <OutlinedInput\n                                                    type=\"number\"\n                                                    placeholder=\"Amount\"\n                                                    className=\"calculator-card-action-input\"\n                                                    value={priceAtPurchase}\n                                                    onChange={e => setPriceAtPurchase(e.target.value)}\n                                                    labelWidth={0}\n                                                    endAdornment={\n                                                        <InputAdornment position=\"end\">\n                                                            <div onClick={() => setPriceAtPurchase(trimeMarketPrice)} className=\"stake-card-action-input-btn\">\n                                                                <p>Current</p>\n                                                            </div>\n                                                        </InputAdornment>\n                                                    }\n                                                />\n                                            </div>\n                                        </Grid>\n                                        <Grid item xs={12} sm={6}>\n                                            <div className=\"calculator-card-action-area-inp-wrap\">\n                                                <p className=\"calculator-card-action-area-inp-wrap-title\">Future NORO market price ($)</p>\n                                                <OutlinedInput\n                                                    type=\"number\"\n                                                    placeholder=\"Amount\"\n                                                    className=\"calculator-card-action-input\"\n                                                    value={futureMarketPrice}\n                                                    onChange={e => setFutureMarketPrice(e.target.value)}\n                                                    labelWidth={0}\n                                                    endAdornment={\n                                                        <InputAdornment position=\"end\">\n                                                            <div onClick={() => setFutureMarketPrice(trimeMarketPrice)} className=\"stake-card-action-input-btn\">\n                                                                <p>Current</p>\n                                                            </div>\n                                                        </InputAdornment>\n                                                    }\n                                                />\n                                            </div>\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                                <div className=\"calculator-days-slider-wrap\">\n                                    <p className=\"calculator-days-slider-wrap-title\">{`${days} day${days > 1 ? \"s\" : \"\"}`}</p>\n                                    <Slider className=\"calculator-days-slider\" min={1} max={365} value={days} onChange={(e, newValue: any) => setDays(newValue)} />\n                                </div>\n                                <div className=\"calculator-user-data\">\n                                    <div className=\"data-row\">\n                                        <p className=\"data-row-name\">Your initial investment</p>\n                                        <p className=\"data-row-value\">{isAppLoading ? <Skeleton width=\"80px\" /> : <>${initialInvestment}</>}</p>\n                                    </div>\n                                    <div className=\"data-row\">\n                                        <p className=\"data-row-name\">Current wealth</p>\n                                        <p className=\"data-row-value\">{isAppLoading ? <Skeleton width=\"80px\" /> : <>${calcCurrentWealth()}</>}</p>\n                                    </div>\n                                    <div className=\"data-row\">\n                                        <p className=\"data-row-name\">NORO rewards estimation</p>\n                                        <p className=\"data-row-value\">{isAppLoading ? <Skeleton width=\"80px\" /> : <>{rewardsEstimation} NORO</>}</p>\n                                    </div>\n                                    <div className=\"data-row\">\n                                        <p className=\"data-row-name\">Potential return</p>\n                                        <p className=\"data-row-value\">{isAppLoading ? <Skeleton width=\"80px\" /> : <>${potentialReturn}</>}</p>\n                                    </div>\n                                    <div className=\"data-row\">\n                                        <p className=\"data-row-name\">Potential number of lambos</p>\n                                        <p className=\"data-row-value\">{isAppLoading ? <Skeleton width=\"80px\" /> : <>{Math.floor(Number(potentialReturn) / 220000)}</>}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Grid>\n                </div>\n            </Zoom>\n        </div>\n    );\n}\n\nexport default Calculator;\n","export default __webpack_public_path__ + \"static/media/AVAX.ea07bfc0.svg\";","import AvaxIcon from \"../assets/tokens/AVAX.svg\";\nimport AaveIcon from \"../assets/tokens/AAVE.e.png\";\nimport ApeXIcon from \"../assets/tokens/Ape-X.png\";\nimport ApeinIcon from \"../assets/tokens/APEIN.png\";\nimport BendIcon from \"../assets/tokens/BEND.svg\";\nimport BifiIcon from \"../assets/tokens/BIFI.png\";\nimport BlizzIcon from \"../assets/tokens/BLIZZ.png\";\nimport BnbIcon from \"../assets/tokens/BNB.png\";\nimport BoofiIcon from \"../assets/tokens/BOOFI.png\";\nimport ChartIcon from \"../assets/tokens/CHART.png\";\nimport DaiEIcon from \"../assets/tokens/DAI.e.png\";\nimport DreggIcon from \"../assets/tokens/DREGG.png\";\nimport EleIcon from \"../assets/tokens/ELE.png\";\nimport ElkIcon from \"../assets/tokens/ELK.png\";\nimport FraxIcon from \"../assets/tokens/FRAX.png\";\nimport GbIcon from \"../assets/tokens/GB.png\";\nimport HatIcon from \"../assets/tokens/HAT.png\";\nimport HuskyIcon from \"../assets/tokens/HUSKY.png\";\nimport IceIcon from \"../assets/tokens/ICE.png\";\nimport JoeIcon from \"../assets/tokens/JOE.png\";\nimport KloIcon from \"../assets/tokens/KLO.png\";\nimport LinkEIcon from \"../assets/tokens/LINK.e.png\";\nimport MainIcon from \"../assets/tokens/MAI.png\";\nimport MimIcon from \"../assets/tokens/MIM.svg\";\nimport MYakIcon from \"../assets/tokens/mYAK.png\";\nimport OliveIcon from \"../assets/tokens/OLIVE.png\";\nimport PefiIcon from \"../assets/tokens/PEFI.png\";\nimport PngIcon from \"../assets/tokens/PNG.png\";\nimport QiIcon from \"../assets/tokens/QI.png\";\nimport RelayIcon from \"../assets/tokens/RELAY.png\";\nimport SherpaIcon from \"../assets/tokens/SHERPA.png\";\nimport ShibxIcon from \"../assets/tokens/SHIBX.png\";\nimport SingIcon from \"../assets/tokens/SING.png\";\nimport SnobIcon from \"../assets/tokens/SNOB.png\";\nimport SpellIcon from \"../assets/tokens/SPELL.png\";\nimport SushiEIcon from \"../assets/tokens/SUSHI.e.png\";\nimport SynIcon from \"../assets/tokens/SYN.png\";\nimport TeddyIcon from \"../assets/tokens/TEDDY.png\";\nimport TimeIcon from \"../assets/tokens/TIME.svg\";\nimport TsdIcon from \"../assets/tokens/TSD.png\";\nimport UsdcEIcon from \"../assets/tokens/USDC.e.png\";\nimport UsdtEIcon from \"../assets/tokens/USDT.e.png\";\nimport VsoIcon from \"../assets/tokens/VSO.png\";\nimport WavaxIcon from \"../assets/tokens/WAVAX.png\";\nimport WBtcIcon from \"../assets/tokens/WBTC.e.png\";\nimport WetIcon from \"../assets/tokens/WET.png\";\nimport WethEIcon from \"../assets/tokens/WETH.e.png\";\nimport XavaIcon from \"../assets/tokens/XAVA.png\";\nimport YakIcon from \"../assets/tokens/YAK.png\";\n\nexport interface IToken {\n    name: string;\n    address: string;\n    img: string;\n    isAvax?: boolean;\n    decimals: number;\n}\n\nexport const avax: IToken = {\n    name: \"AVAX\",\n    isAvax: true,\n    img: AvaxIcon,\n    address: \"\",\n    decimals: 18,\n};\n\nconst aave: IToken = {\n    name: \"AAVE.e\",\n    address: \"0x63a72806098Bd3D9520cC43356dD78afe5D386D9\",\n    img: AaveIcon,\n    decimals: 18,\n};\n\nconst apeX: IToken = {\n    name: \"APE-X\",\n    address: \"0xd039C9079ca7F2a87D632A9C0d7cEa0137bAcFB5\",\n    img: ApeXIcon,\n    decimals: 9,\n};\n\nconst apein: IToken = {\n    name: \"APEIN\",\n    address: \"0x938FE3788222A74924E062120E7BFac829c719Fb\",\n    img: ApeinIcon,\n    decimals: 18,\n};\n\nexport const bend: IToken = {\n    name: \"BEND\",\n    address: \"0x19a1165A79AFAAeFd805969B32a0640d4Db9f131\", // \"0x3160591776e34C319F2Ad28Ba8c1F4829adc3907\"\n    img: BendIcon,\n    decimals: 3,\n};\n\nconst bifi: IToken = {\n    name: \"BIFI\",\n    address: \"0xd6070ae98b8069de6B494332d1A1a81B6179D960\",\n    img: BifiIcon,\n    decimals: 18,\n};\n\nconst blizz: IToken = {\n    name: \"BLIZZ\",\n    address: \"0xB147656604217a03Fe2c73c4838770DF8d9D21B8\",\n    img: BlizzIcon,\n    decimals: 18,\n};\n\nconst bnb: IToken = {\n    name: \"BNB\",\n    address: \"0x264c1383EA520f73dd837F915ef3a732e204a493\",\n    img: BnbIcon,\n    decimals: 18,\n};\n\nconst boofi: IToken = {\n    name: \"BOOFI\",\n    address: \"0xB00F1ad977a949a3CCc389Ca1D1282A2946963b0\",\n    img: BoofiIcon,\n    decimals: 18,\n};\n\nconst chart: IToken = {\n    name: \"CHART\",\n    address: \"0xD769bDFc0CaEe933dc0a047C7dBad2Ec42CFb3E2\",\n    img: ChartIcon,\n    decimals: 18,\n};\n\nconst dai: IToken = {\n    name: \"DAI.e\",\n    address: \"0xd586E7F844cEa2F87f50152665BCbc2C279D8d70\",\n    img: DaiEIcon,\n    decimals: 18,\n};\n\nconst dregg: IToken = {\n    name: \"DREGG\",\n    address: \"0x88c090496125b751B4E3ce4d3FDB8E47DD079c57\",\n    img: DreggIcon,\n    decimals: 18,\n};\n\nconst ele: IToken = {\n    name: \"ELE\",\n    address: \"0xAcD7B3D9c10e97d0efA418903C0c7669E702E4C0\",\n    img: EleIcon,\n    decimals: 18,\n};\n\nconst elk: IToken = {\n    name: \"ELK\",\n    address: \"0xE1C110E1B1b4A1deD0cAf3E42BfBdbB7b5d7cE1C\",\n    img: ElkIcon,\n    decimals: 18,\n};\n\nconst frax: IToken = {\n    name: \"FRAX\",\n    address: \"0xDC42728B0eA910349ed3c6e1c9Dc06b5FB591f98\",\n    img: FraxIcon,\n    decimals: 18,\n};\n\nconst gb: IToken = {\n    name: \"GB\",\n    address: \"0x90842eb834cFD2A1DB0b1512B254a18E4D396215\",\n    img: GbIcon,\n    decimals: 9,\n};\n\nconst hat: IToken = {\n    name: \"HAT\",\n    address: \"0x82FE038Ea4b50f9C957da326C412ebd73462077C\",\n    img: HatIcon,\n    decimals: 18,\n};\n\nconst husky: IToken = {\n    name: \"HUSKY\",\n    address: \"0x65378b697853568dA9ff8EaB60C13E1Ee9f4a654\",\n    img: HuskyIcon,\n    decimals: 18,\n};\n\nconst ice: IToken = {\n    name: \"ICE\",\n    address: \"0xe0Ce60AF0850bF54072635e66E79Df17082A1109\",\n    img: IceIcon,\n    decimals: 18,\n};\n\nconst joe: IToken = {\n    name: \"JOE\",\n    address: \"0x6e84a6216eA6dACC71eE8E6b0a5B7322EEbC0fDd\",\n    img: JoeIcon,\n    decimals: 18,\n};\n\nconst klo: IToken = {\n    name: \"KLO\",\n    address: \"0xb27c8941a7Df8958A1778c0259f76D1F8B711C35\",\n    img: KloIcon,\n    decimals: 18,\n};\n\nconst link: IToken = {\n    name: \"LINK.e\",\n    address: \"0x5947BB275c521040051D82396192181b413227A3\",\n    img: LinkEIcon,\n    decimals: 18,\n};\n\nconst mai: IToken = {\n    name: \"MAI\",\n    address: \"0x3B55E45fD6bd7d4724F5c47E0d1bCaEdd059263e\",\n    img: MainIcon,\n    decimals: 18,\n};\n\nexport const mim: IToken = {\n    name: \"MIM\",\n    address: \"0x130966628846BFd36ff31a822705796e8cb8C18D\", //\"0x08a978a0399465621e667C49CD54CC874DC064Eb\"\n    img: MimIcon,\n    decimals: 18,\n};\n\nconst myak: IToken = {\n    name: \"mYAK\",\n    address: \"0xdDAaAD7366B455AfF8E7c82940C43CEB5829B604\",\n    img: MYakIcon,\n    decimals: 12,\n};\n\nconst olive: IToken = {\n    name: \"OLIVE\",\n    address: \"0x617724974218A18769020A70162165A539c07E8a\",\n    img: OliveIcon,\n    decimals: 18,\n};\n\nconst pefi: IToken = {\n    name: \"PEFI\",\n    address: \"0xe896CDeaAC9615145c0cA09C8Cd5C25bced6384c\",\n    img: PefiIcon,\n    decimals: 18,\n};\n\nconst png: IToken = {\n    name: \"PNG\",\n    address: \"0x60781C2586D68229fde47564546784ab3fACA982\",\n    img: PngIcon,\n    decimals: 18,\n};\n\nconst qi: IToken = {\n    name: \"QI\",\n    address: \"0x8729438EB15e2C8B576fCc6AeCdA6A148776C0F5\",\n    img: QiIcon,\n    decimals: 18,\n};\n\nconst relay: IToken = {\n    name: \"RELAY\",\n    address: \"0x78c42324016cd91D1827924711563fb66E33A83A\",\n    img: RelayIcon,\n    decimals: 18,\n};\n\nconst sherpa: IToken = {\n    name: \"SHERPA\",\n    address: \"0xa5E59761eBD4436fa4d20E1A27cBa29FB2471Fc6\",\n    img: SherpaIcon,\n    decimals: 18,\n};\n\nconst shibx: IToken = {\n    name: \"SHIBX\",\n    address: \"0x440aBbf18c54b2782A4917b80a1746d3A2c2Cce1\",\n    img: ShibxIcon,\n    decimals: 18,\n};\n\nconst sing: IToken = {\n    name: \"SING\",\n    address: \"0xF9A075C9647e91410bF6C402bDF166e1540f67F0\",\n    img: SingIcon,\n    decimals: 18,\n};\n\nconst snob: IToken = {\n    name: \"SNOB\",\n    address: \"0xC38f41A296A4493Ff429F1238e030924A1542e50\",\n    img: SnobIcon,\n    decimals: 18,\n};\n\nconst spell: IToken = {\n    name: \"SPELL\",\n    address: \"0xCE1bFFBD5374Dac86a2893119683F4911a2F7814\",\n    img: SpellIcon,\n    decimals: 18,\n};\n\nconst sushi: IToken = {\n    name: \"SUSHI.e\",\n    address: \"0x37B608519F91f70F2EeB0e5Ed9AF4061722e4F76\",\n    img: SushiEIcon,\n    decimals: 18,\n};\n\nconst syn: IToken = {\n    name: \"SYN\",\n    address: \"0x1f1E7c893855525b303f99bDF5c3c05Be09ca251\",\n    img: SynIcon,\n    decimals: 18,\n};\n\nconst teddy: IToken = {\n    name: \"TEBBY\",\n    address: \"0x094bd7B2D99711A1486FB94d4395801C6d0fdDcC\",\n    img: TeddyIcon,\n    decimals: 18,\n};\n\nconst time: IToken = {\n    name: \"TIME\",\n    address: \"0xb54f16fB19478766A268F172C9480f8da1a7c9C3\",\n    img: TimeIcon,\n    decimals: 9,\n};\n\nconst tsd: IToken = {\n    name: \"TSD\",\n    address: \"0x4fbf0429599460D327BD5F55625E30E4fC066095\",\n    img: TsdIcon,\n    decimals: 18,\n};\n\nconst usdc: IToken = {\n    name: \"USDC.e\",\n    address: \"0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664\", //\"0x08a978a0399465621e667C49CD54CC874DC064Eb\"\n    img: UsdcEIcon,\n    decimals: 6,\n};\n\nconst usdt: IToken = {\n    name: \"USDT.e\",\n    address: \"0xc7198437980c041c805A1EDcbA50c1Ce5db95118\", //\"0x08a978a0399465621e667C49CD54CC874DC064Eb\"\n    img: UsdtEIcon,\n    decimals: 6,\n};\n\nconst vso: IToken = {\n    name: \"VSO\",\n    address: \"0x846D50248BAf8b7ceAA9d9B53BFd12d7D7FBB25a\",\n    img: VsoIcon,\n    decimals: 18,\n};\n\nexport const wavax: IToken = {\n    name: \"WAVAX\",\n    address: \"0xd00ae08403B9bbb9124bB305C09058E32C39A48c\", //\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"\n    img: WavaxIcon,\n    decimals: 18,\n};\n\nexport const eth: IToken = {\n    name: \"ETH\",\n    address: \"0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB\", //\"0xeFf581Ca1f9B49F49A183cD4f25F69776FA0EbF4\"\n    img: VsoIcon,\n    decimals: 18,\n};\n\nconst wbtc: IToken = {\n    name: \"WBTC.e\",\n    address: \"0x50b7545627a5162F82A992c33b87aDc75187B218\",\n    img: WBtcIcon,\n    decimals: 8,\n};\n\nconst wet: IToken = {\n    name: \"WET\",\n    address: \"0xB1466d4cf0DCfC0bCdDcf3500F473cdACb88b56D\",\n    img: WetIcon,\n    decimals: 18,\n};\n\nconst weth: IToken = {\n    name: \"WETH.e\",\n    address: \"0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB\",\n    img: WethEIcon,\n    decimals: 18,\n};\n\nconst xava: IToken = {\n    name: \"XAVA\",\n    address: \"0xd1c3f94DE7e5B45fa4eDBBA472491a9f4B166FC4\",\n    img: XavaIcon,\n    decimals: 18,\n};\n\nconst yak: IToken = {\n    name: \"YAK\",\n    address: \"0x59414b3089ce2AF0010e7523Dea7E2b35d776ec7\",\n    img: YakIcon,\n    decimals: 18,\n};\n\nexport default [\n    avax,\n    // aave,\n    // apeX,\n    // apein,\n    bend,\n    // bifi,\n    // blizz,\n    // bnb,\n    // boofi,\n    // chart,\n    // dai,\n    // dregg,\n    // ele,\n    // elk,\n    // frax,\n    // gb,\n    // hat,\n    // husky,\n    // ice,\n    // joe,\n    // klo,\n    // link,\n    // mai,\n    // mim,\n    // myak,\n    // olive,\n    // pefi,\n    // png,\n    // qi,\n    // relay,\n    // sherpa,\n    // shibx,\n    // sing,\n    // snob,\n    // spell,\n    // sushi,\n    // syn,\n    // teddy,\n    // time,\n    // tsd,\n    // usdc,\n    // usdt,\n    // vso,\n    wavax,\n    // eth,\n    // wbtc,\n    // wet,\n    // weth,\n    // xava,\n    // yak,\n];\n","export default __webpack_public_path__ + \"static/media/AAVE.e.b747f0c6.png\";","export default __webpack_public_path__ + \"static/media/Ape-X.27a99a93.png\";","export default __webpack_public_path__ + \"static/media/APEIN.d569384f.png\";","export default __webpack_public_path__ + \"static/media/BIFI.87b64be4.png\";","export default __webpack_public_path__ + \"static/media/BLIZZ.ab3dbbd0.png\";","export default __webpack_public_path__ + \"static/media/BOOFI.59648952.png\";","export default __webpack_public_path__ + \"static/media/CHART.14c38fb6.png\";","export default __webpack_public_path__ + \"static/media/DAI.e.849478a7.png\";","export default __webpack_public_path__ + \"static/media/DREGG.42db80f9.png\";","export default __webpack_public_path__ + \"static/media/ELE.69996a2c.png\";","export default __webpack_public_path__ + \"static/media/ELK.ebff0dde.png\";","export default __webpack_public_path__ + \"static/media/HAT.4a46bd42.png\";","export default __webpack_public_path__ + \"static/media/HUSKY.8038cdd3.png\";","export default __webpack_public_path__ + \"static/media/JOE.db647b9d.png\";","export default __webpack_public_path__ + \"static/media/KLO.177d0d0c.png\";","export default __webpack_public_path__ + \"static/media/LINK.e.3889d378.png\";","export default __webpack_public_path__ + \"static/media/MIM.9214b060.svg\";","export default __webpack_public_path__ + \"static/media/OLIVE.535e2a74.png\";","export default __webpack_public_path__ + \"static/media/PEFI.d20bf8df.png\";","export default __webpack_public_path__ + \"static/media/PNG.6a7ba961.png\";","export default __webpack_public_path__ + \"static/media/SHERPA.4fa895bf.png\";","export default __webpack_public_path__ + \"static/media/SHIBX.c2eb0fcb.png\";","export default __webpack_public_path__ + \"static/media/SNOB.d32bfe23.png\";","export default __webpack_public_path__ + \"static/media/SPELL.9c658b0e.png\";","export default __webpack_public_path__ + \"static/media/SUSHI.e.4b15c8ee.png\";","export default __webpack_public_path__ + \"static/media/SYN.eec9db06.png\";","export default __webpack_public_path__ + \"static/media/TEDDY.72430752.png\";","export default __webpack_public_path__ + \"static/media/TIME.313e8050.svg\";","export default __webpack_public_path__ + \"static/media/TSD.2430fa58.png\";","export default __webpack_public_path__ + \"static/media/USDT.e.8721ebcf.png\";","export default __webpack_public_path__ + \"static/media/WBTC.e.9e7a5b91.png\";","export default __webpack_public_path__ + \"static/media/WET.450c6288.png\";","export default __webpack_public_path__ + \"static/media/XAVA.daea44f1.png\";","export default __webpack_public_path__ + \"static/media/YAK.ec1f1f43.png\";","import { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport allTokens from \"../helpers/tokens\";\nimport { IUserTokenDetails } from \"../store/slices/account-slice\";\nimport { IReduxState } from \"../store/slices/state.interface\";\nimport { IToken } from \"../helpers/tokens\";\n\n// Smash all the interfaces together to get the BondData Type\nexport interface IAllTokenData extends IToken, IUserTokenDetails {}\n\nconst initialTokenArray = allTokens;\n\nfunction useTokens() {\n    const accountLoading = useSelector<IReduxState, boolean>(state => state.account.loading);\n    const accountTokensState = useSelector<IReduxState, { [key: string]: IUserTokenDetails }>(state => state.account.tokens);\n    //@ts-ignore\n    const [tokens, setTokens] = useState<IAllTokenData[]>(initialTokenArray);\n\n    useEffect(() => {\n        let tokenDetails: IAllTokenData[];\n        //@ts-ignore\n        tokenDetails = allTokens.flatMap(token => {\n            if (accountTokensState[token.name]) {\n                return Object.assign(token, accountTokensState[token.name]);\n            }\n            return token;\n        });\n\n        const mostProfitableBonds = tokenDetails.concat().sort((a, b) => {\n            return a[\"balance\"] > b[\"balance\"] ? -1 : b[\"balance\"] > a[\"balance\"] ? 1 : 0;\n        });\n\n        setTokens(mostProfitableBonds);\n    }, [accountTokensState, accountLoading]);\n\n    return { tokens, loading: accountLoading };\n}\n\nexport default useTokens;\n","import { useEffect, useState, useCallback } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useAddress, useWeb3Context } from \"../hooks\";\nimport { calcBondDetails } from \"../store/slices/bond-slice\";\nimport { loadAppDetails } from \"../store/slices/app-slice\";\nimport { loadAccountDetails, calculateUserBondDetails, calculateUserTokenDetails } from \"../store/slices/account-slice\";\nimport { IReduxState } from \"../store/slices/state.interface\";\nimport Loading from \"../components/Loader\";\nimport useBonds from \"../hooks/bonds\";\nimport ViewBase from \"../components/ViewBase\";\nimport { Stake, ChooseBond, Bond, Dashboard, NotFound, Calculator } from \"../views\";\nimport \"./style.scss\";\nimport useTokens from \"../hooks/tokens\";\n\nfunction App() {\n    const dispatch = useDispatch();\n\n    const { connect, provider, hasCachedProvider, chainID, connected } = useWeb3Context();\n    const address = useAddress();\n\n    const [walletChecked, setWalletChecked] = useState(false);\n\n    const isAppLoading = useSelector<IReduxState, boolean>(state => state.app.loading);\n    const isAppLoaded = useSelector<IReduxState, boolean>(state => !Boolean(state.app.marketPrice));\n\n    const { bonds } = useBonds();\n    const { tokens } = useTokens();\n\n    async function loadDetails(whichDetails: string) {\n        let loadProvider = provider;\n\n        if (whichDetails === \"app\") {\n            loadApp(loadProvider);\n        }\n\n        if (whichDetails === \"account\" && address && connected) {\n            loadAccount(loadProvider);\n            if (isAppLoaded) return;\n\n            loadApp(loadProvider);\n        }\n\n        if (whichDetails === \"userBonds\" && address && connected) {\n            bonds.map(bond => {\n                dispatch(calculateUserBondDetails({ address, bond, provider, networkID: chainID }));\n            });\n        }\n\n        if (whichDetails === \"userTokens\" && address && connected) {\n            tokens.map(token => {\n                dispatch(calculateUserTokenDetails({ address, token, provider, networkID: chainID }));\n            });\n        }\n    }\n\n    const loadApp = useCallback(\n        loadProvider => {\n            dispatch(loadAppDetails({ networkID: chainID, provider: loadProvider }));\n            bonds.map(bond => {\n                dispatch(calcBondDetails({ bond, value: null, provider: loadProvider, networkID: chainID }));\n            });\n            tokens.map(token => {\n                dispatch(calculateUserTokenDetails({ address: \"\", token, provider, networkID: chainID }));\n            });\n        },\n        [connected],\n    );\n\n    const loadAccount = useCallback(\n        loadProvider => {\n            dispatch(loadAccountDetails({ networkID: chainID, address, provider: loadProvider }));\n        },\n        [connected],\n    );\n\n    useEffect(() => {\n        if (hasCachedProvider()) {\n            connect().then(() => {\n                setWalletChecked(true);\n            });\n        } else {\n            setWalletChecked(true);\n        }\n    }, []);\n\n    useEffect(() => {\n        if (walletChecked) {\n            loadDetails(\"app\");\n            loadDetails(\"account\");\n            loadDetails(\"userBonds\");\n            loadDetails(\"userTokens\");\n        }\n    }, [walletChecked]);\n\n    useEffect(() => {\n        if (connected) {\n            loadDetails(\"app\");\n            loadDetails(\"account\");\n            loadDetails(\"userBonds\");\n            loadDetails(\"userTokens\");\n        }\n    }, [connected]);\n\n    if (isAppLoading) return <Loading />;\n\n    return (\n        <ViewBase>\n            <Switch>\n                <Route exact path=\"/dashboard\">\n                    <Dashboard />\n                </Route>\n\n                <Route exact path=\"/\">\n                    <Redirect to=\"/dashboard\" />\n                </Route>\n\n                <Route path=\"/stake\">\n                    <Stake />\n                </Route>\n\n                <Route path=\"/bonds\">\n                    {bonds.map(bond => {\n                        return (\n                            <Route exact key={bond.name} path={`/bonds/${bond.name}`}>\n                                <Bond bond={bond} />\n                            </Route>\n                        );\n                    })}\n                    <ChooseBond />\n                </Route>\n\n                <Route path=\"/calculator\">\n                    <Calculator />\n                </Route>\n\n                <Route component={NotFound} />\n            </Switch>\n        </ViewBase>\n    );\n}\n\nexport default App;\n","import React, { useEffect, useState } from \"react\";\nimport App from \"./App\";\nimport Landing from \"./Landing\";\nimport { HashRouter } from \"react-router-dom\";\nimport { loadTokenPrices } from \"../helpers\";\nimport Loading from \"../components/Loader\";\n\nfunction Root() {\n    const isApp = (): boolean => {\n        if (\n            window.location.href.includes(\"dashboard\") ||\n            window.location.href.includes(\"stake\") ||\n            window.location.href.includes(\"mint\") ||\n            window.location.href.includes(\"calculator\")\n        ) {\n            return true;\n        } else {\n            return false; //window.location.host.includes(\"app\");\n        }\n    };\n\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        loadTokenPrices().then(() => setLoading(false));\n    }, []);\n\n    if (loading) return <Loading />;\n\n    const app = () => (\n        <HashRouter>\n            <App />\n        </HashRouter>\n    );\n\n    return app();\n}\n\nexport default Root;\n","import React, { useState, forwardRef, useCallback } from \"react\";\nimport classnames from \"classnames\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSnackbar, SnackbarContent } from \"notistack\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport { Message } from \"../../store/slices/messages-slice\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport SuccessIcon from \"@material-ui/icons/CheckCircle\";\nimport { Color } from \"@material-ui/lab/Alert\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"sm\")]: {\n            minWidth: \"344px !important\",\n        },\n        maxWidth: 500,\n    },\n    card: {\n        width: \"100%\",\n    },\n    error: {\n        backgroundColor: \"#d32f2f\",\n    },\n    info: {\n        backgroundColor: \"#2979ff\",\n    },\n    warning: {\n        backgroundColor: \"#ffa000\",\n    },\n    success: {\n        backgroundColor: \"#43a047\",\n    },\n    typography: {\n        color: \"#FFFFFF\",\n        fontFamily: \"Montserrat SemiBold\",\n    },\n    actionRoot: {\n        padding: \"8px 8px 8px 16px\",\n        justifyContent: \"space-between\",\n        color: \"#FFFFFF\",\n    },\n    icons: {\n        marginLeft: \"auto\",\n    },\n    expand: {\n        padding: \"8px 8px\",\n        transform: \"rotate(0deg)\",\n        transition: theme.transitions.create(\"transform\", {\n            duration: theme.transitions.duration.shortest,\n        }),\n        color: \"#FFFFFF\",\n    },\n    expandOpen: {\n        transform: \"rotate(180deg)\",\n    },\n    collapse: {\n        padding: 16,\n    },\n    checkIcon: {\n        fontSize: 20,\n        color: \"#b3b3b3\",\n        paddingRight: 4,\n    },\n    checkIconCopy: {\n        color: \"#43a047\",\n    },\n    button: {\n        padding: 0,\n        textTransform: \"none\",\n    },\n    errorWrap: {\n        marginTop: 10,\n    },\n    errorText: {\n        whiteSpace: \"pre-wrap\",\n        maxHeight: 300,\n        overflow: \"auto\",\n        background: \"rgba(0,0,0,0.1)\",\n        padding: 5,\n        borderRadius: 5,\n    },\n}));\n\nconst SnackMessage = forwardRef<HTMLDivElement, { id: string | number; message: Message }>((props, ref) => {\n    const classes = useStyles();\n    const { closeSnackbar } = useSnackbar();\n    const [expanded, setExpanded] = useState(false);\n    const [isCopy, setIsCopy] = useState(false);\n\n    const handleExpandClick = useCallback(() => {\n        setExpanded(oldExpanded => !oldExpanded);\n    }, []);\n\n    const handleDismiss = useCallback(() => {\n        closeSnackbar(props.id);\n    }, [props.id, closeSnackbar]);\n\n    const getIcon = (severity: Color) => {\n        switch (severity) {\n            case \"error\":\n                return <ErrorIcon color=\"inherit\" />;\n            case \"info\":\n                return <InfoIcon color=\"inherit\" />;\n            case \"success\":\n                return <SuccessIcon color=\"inherit\" />;\n            case \"warning\":\n                return <WarningIcon color=\"inherit\" />;\n            default:\n                return <div />;\n        }\n    };\n\n    return (\n        <SnackbarContent ref={ref} className={classes.root}>\n            <Card className={classnames(classes.card, classes[props.message.severity])}>\n                <CardActions classes={{ root: classes.actionRoot }}>\n                    {getIcon(props.message.severity)}\n                    <Typography variant=\"subtitle2\" className={classes.typography}>\n                        {props.message.text}\n                    </Typography>\n                    <div className={classes.icons}>\n                        {props.message.error && (\n                            <IconButton aria-label=\"Show more\" className={classnames(classes.expand, { [classes.expandOpen]: expanded })} onClick={handleExpandClick}>\n                                <ExpandMoreIcon color=\"inherit\" />\n                            </IconButton>\n                        )}\n                        <IconButton className={classes.expand} onClick={handleDismiss}>\n                            <CloseIcon color=\"inherit\" />\n                        </IconButton>\n                    </div>\n                </CardActions>\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <Paper className={classes.collapse}>\n                        <CopyToClipboard text={JSON.stringify(props.message.error)} onCopy={() => setIsCopy(true)}>\n                            <Button size=\"small\" className={classes.button}>\n                                <CheckCircleIcon className={classnames(classes.checkIcon, { [classes.checkIconCopy]: isCopy })} />\n                                Copy to clipboard\n                            </Button>\n                        </CopyToClipboard>\n                        <div className={classes.errorWrap}>\n                            <Typography>Error message: </Typography>\n                            <Typography className={classes.errorText}>{JSON.stringify(props.message.error, null, 2)}</Typography>\n                        </div>\n                    </Paper>\n                </Collapse>\n            </Card>\n        </SnackbarContent>\n    );\n});\n\nexport default SnackMessage;\n","import ReactDOM from \"react-dom\";\nimport Root from \"./Root\";\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\nimport { Web3ContextProvider } from \"./hooks\";\nimport { SnackbarProvider } from \"notistack\";\nimport SnackMessage from \"./components/Messages/snackbar\";\n\nReactDOM.render(\n    <SnackbarProvider\n        maxSnack={4}\n        anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"right\",\n        }}\n        content={(key, message: string) => <SnackMessage id={key} message={JSON.parse(message)} />}\n        autoHideDuration={10000}\n    >\n        <Provider store={store}>\n            <Web3ContextProvider>\n                <Root />\n            </Web3ContextProvider>\n        </Provider>\n    </SnackbarProvider>,\n    document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}